{
  "scan_timestamp": "2025-10-22T10:17:16.704386Z",
  "scan_path": "../test-next-app",
  "total_files_scanned": 7,
  "findings": [
    {
        "id": 1,
        "file_path": "..\\test-next-app\\next.config.ts",
        "line_number": 3,
        "obfuscation_type": "random_vars",
        "description": "Found seemingly random variable names that appear computer-generated rather than human-chosen. This suggests the code may have been processed through an obfuscation tool that replaces meaningful names with gibberish to hide the code's true functionality.",
        "severity": "medium",
        "evidence": "nextConfig (+1 more)",
        "confidence": 0.9,
        "full_line": "const nextConfig: NextConfig = {",
        "category": "variable_obfuscation"
    },
    {
        "id": 2,
        "file_path": "..\\test-next-app\\next.config.ts",
        "line_number": 7,
        "obfuscation_type": "random_vars",
        "description": "Found seemingly random variable names that appear computer-generated rather than human-chosen. This suggests the code may have been processed through an obfuscation tool that replaces meaningful names with gibberish to hide the code's true functionality.",
        "severity": "medium",
        "evidence": "nextConfig",
        "confidence": 0.8,
        "full_line": "export default nextConfig;",
        "category": "variable_obfuscation"
    },
    {
        "id": 3,
        "file_path": "..\\test-next-app\\package.json",
        "line_number": 0,
        "obfuscation_type": "no_whitespace",
        "description": "This file has virtually no whitespace formatting - only 0.00 of lines are empty or whitespace-only in a 27-line file. Normal code uses whitespace for readability, with blank lines separating logical sections and indentation showing code structure. The complete absence of formatting suggests aggressive minification or deliberate obfuscation to make the code as compact and unreadable as possible.",
        "severity": "high",
        "evidence": "Empty line ratio: 0.00, Total lines: 27",
        "confidence": 0.9,
        "full_line": "",
        "category": "structure_obfuscation"
    },
    {
        "id": 4,
        "file_path": "..\\test-next-app\\tsconfig.json",
        "line_number": 3,
        "obfuscation_type": "obfuscated_vars",
        "description": "Identified variable names combining short letters with numbers (like 'a1', 'x2', 'b10'). This naming pattern is characteristic of code that has been automatically minified or obfuscated, making it difficult for humans to understand variable purposes and relationships.",
        "severity": "low",
        "evidence": "ES2017",
        "confidence": 0.8,
        "full_line": "    \"target\": \"ES2017\",",
        "category": "variable_obfuscation"
    },
    {
        "id": 5,
        "file_path": "..\\test-next-app\\tsconfig.json",
        "line_number": 4,
        "obfuscation_type": "computed_property_access",
        "description": "Complex computed property access with long expressions inside brackets. This makes it difficult to statically determine which properties are being accessed, hiding the data flow and potentially concealing malicious operations.",
        "severity": "medium",
        "evidence": "[\"dom\", \"dom.iterable\", \"esnext\"]",
        "confidence": 0.8,
        "full_line": "    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],",
        "category": "structure_obfuscation"
    },
    {
        "id": 6,
        "file_path": "..\\test-next-app\\tsconfig.json",
        "line_number": 25,
        "obfuscation_type": "computed_property_access",
        "description": "Complex computed property access with long expressions inside brackets. This makes it difficult to statically determine which properties are being accessed, hiding the data flow and potentially concealing malicious operations.",
        "severity": "medium",
        "evidence": "[\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"]",
        "confidence": 0.8,
        "full_line": "  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],",
        "category": "structure_obfuscation"
    },
    {
        "id": 7,
        "file_path": "..\\test-next-app\\tsconfig.json",
        "line_number": 26,
        "obfuscation_type": "computed_property_access",
        "description": "Complex computed property access with long expressions inside brackets. This makes it difficult to statically determine which properties are being accessed, hiding the data flow and potentially concealing malicious operations.",
        "severity": "medium",
        "evidence": "[\"node_modules\"]",
        "confidence": 0.8,
        "full_line": "  \"exclude\": [\"node_modules\"]",
        "category": "structure_obfuscation"
    },
    {
        "id": 8,
        "file_path": "..\\test-next-app\\tsconfig.json",
        "line_number": 0,
        "obfuscation_type": "no_whitespace",
        "description": "This file has virtually no whitespace formatting - only 0.00 of lines are empty or whitespace-only in a 27-line file. Normal code uses whitespace for readability, with blank lines separating logical sections and indentation showing code structure. The complete absence of formatting suggests aggressive minification or deliberate obfuscation to make the code as compact and unreadable as possible.",
        "severity": "high",
        "evidence": "Empty line ratio: 0.00, Total lines: 27",
        "confidence": 0.9,
        "full_line": "",
        "category": "structure_obfuscation"
    },
    {
        "id": 9,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 72,
        "obfuscation_type": "random_vars",
        "description": "Found seemingly random variable names that appear computer-generated rather than human-chosen. This suggests the code may have been processed through an obfuscation tool that replaces meaningful names with gibberish to hide the code's true functionality.",
        "severity": "medium",
        "evidence": "framework",
        "confidence": 0.8,
        "full_line": "          href=\"https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template-tw&utm_campaign=create-next-app\"",
        "category": "variable_obfuscation"
    },
    {
        "id": 10,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 0,
        "obfuscation_type": "no_whitespace",
        "description": "This file has virtually no whitespace formatting - only 0.02 of lines are empty or whitespace-only in a 103-line file. Normal code uses whitespace for readability, with blank lines separating logical sections and indentation showing code structure. The complete absence of formatting suggests aggressive minification or deliberate obfuscation to make the code as compact and unreadable as possible.",
        "severity": "high",
        "evidence": "Empty line ratio: 0.02, Total lines: 103",
        "confidence": 0.9,
        "full_line": "",
        "category": "structure_obfuscation"
    },
    {
        "id": 11,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 5,
        "obfuscation_type": "high_entropy_string",
        "description": "Found a string with very high information entropy (4.56 bits per character), which is unusual for human-readable text. Normal English text has entropy around 2.5-3.5, while compressed or encrypted data can reach 5.0+. This suggests the string contains encoded, compressed, or encrypted content that appears random to hide its true meaning. Malware commonly uses such techniques to conceal command strings, URLs, or executable code from casual inspection.",
        "severity": "medium",
        "evidence": "font-sans grid grid-rows-[20px_1fr_20px] items-cen...",
        "confidence": 0.7602970673669872,
        "full_line": "    <div className=\"font-sans grid grid-rows-[20px_1fr_20px] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20\">",
        "category": "string_obfuscation"
    },
    {
        "id": 12,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 18,
        "obfuscation_type": "high_entropy_string",
        "description": "Found a string with very high information entropy (4.80 bits per character), which is unusual for human-readable text. Normal English text has entropy around 2.5-3.5, while compressed or encrypted data can reach 5.0+. This suggests the string contains encoded, compressed, or encrypted content that appears random to hide its true meaning. Malware commonly uses such techniques to conceal command strings, URLs, or executable code from casual inspection.",
        "severity": "medium",
        "evidence": "bg-black/[.05] dark:bg-white/[.06] font-mono font-...",
        "confidence": 0.800667730875258,
        "full_line": "            <code className=\"bg-black/[.05] dark:bg-white/[.06] font-mono font-semibold px-1 py-0.5 rounded\">",
        "category": "string_obfuscation"
    },
    {
        "id": 13,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 30,
        "obfuscation_type": "high_entropy_string",
        "description": "Found a string with very high information entropy (4.71 bits per character), which is unusual for human-readable text. Normal English text has entropy around 2.5-3.5, while compressed or encrypted data can reach 5.0+. This suggests the string contains encoded, compressed, or encrypted content that appears random to hide its true meaning. Malware commonly uses such techniques to conceal command strings, URLs, or executable code from casual inspection.",
        "severity": "medium",
        "evidence": "rounded-full border border-solid border-transparen...",
        "confidence": 0.7843468089524053,
        "full_line": "            className=\"rounded-full border border-solid border-transparent transition-colors flex items-center justify-center bg-foreground text-background gap-2 hover:bg-[#383838] dark:hover:bg-[#ccc] font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 sm:w-auto\"",
        "category": "string_obfuscation"
    },
    {
        "id": 14,
        "file_path": "..\\test-next-app\\src\\app\\page.tsx",
        "line_number": 45,
        "obfuscation_type": "high_entropy_string",
        "description": "Found a string with very high information entropy (4.83 bits per character), which is unusual for human-readable text. Normal English text has entropy around 2.5-3.5, while compressed or encrypted data can reach 5.0+. This suggests the string contains encoded, compressed, or encrypted content that appears random to hide its true meaning. Malware commonly uses such techniques to conceal command strings, URLs, or executable code from casual inspection.",
        "severity": "medium",
        "evidence": "rounded-full border border-solid border-black/[.08...",
        "confidence": 0.805522921732567,
        "full_line": "            className=\"rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 w-full sm:w-auto md:w-[158px]\"",
        "category": "string_obfuscation"
    },
    {
        "id": 15,
        "file_path": "..\\test-next-app\\src\\app\\globals.css",
        "line_number": 4,
        "obfuscation_type": "random_vars",
        "description": "Found seemingly random variable names that appear computer-generated rather than human-chosen. This suggests the code may have been processed through an obfuscation tool that replaces meaningful names with gibberish to hide the code's true functionality.",
        "severity": "medium",
        "evidence": "ffffff",
        "confidence": 0.8,
        "full_line": "  --background: #ffffff;",
        "category": "variable_obfuscation"
    },
    {
        "id": 16,
        "file_path": "..\\test-next-app\\src\\app\\globals.css",
        "line_number": 18,
        "obfuscation_type": "random_vars",
        "description": "Found seemingly random variable names that appear computer-generated rather than human-chosen. This suggests the code may have been processed through an obfuscation tool that replaces meaningful names with gibberish to hide the code's true functionality.",
        "severity": "medium",
        "evidence": "ededed",
        "confidence": 0.8,
        "full_line": "    --foreground: #ededed;",
        "category": "variable_obfuscation"
    },
    {
        "id": 17,
        "file_path": "..\\test-next-app\\postcss.config.mjs",
        "line_number": 2,
        "obfuscation_type": "computed_property_access",
        "description": "Complex computed property access with long expressions inside brackets. This makes it difficult to statically determine which properties are being accessed, hiding the data flow and potentially concealing malicious operations.",
        "severity": "medium",
        "evidence": "[\"@tailwindcss/postcss\"]",
        "confidence": 0.8,
        "full_line": "  plugins: [\"@tailwindcss/postcss\"],",
        "category": "structure_obfuscation"
    }
  ],
  "summary": {
    "high_severity": 3,
    "medium_severity": 13,
    "low_severity": 1,
    "total_findings": 17,
    "average_confidence": 0.821,
    "risk_score": 29.8,
    "categories": {"variable_obfuscation": 6, "structure_obfuscation": 7, "string_obfuscation": 4}
  },
  "scan_duration_seconds": 2.44,
  "risk_assessment": "CRITICAL: High likelihood of malicious obfuscation"
}
