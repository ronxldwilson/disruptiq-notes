        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 14:07:18 /2025-09-26/

[14:07:20] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
[14:07:21] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[14:07:21] [INFO] testing connection to the target URL
[14:07:21] [INFO] checking if the target is protected by some kind of WAF/IPS
[14:07:21] [INFO] testing if the target URL content is stable
[14:07:21] [INFO] target URL content is stable
[14:07:21] [INFO] testing if URI parameter '#1*' is dynamic
[14:07:21] [WARNING] URI parameter '#1*' does not appear to be dynamic
[14:07:22] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[14:07:22] [INFO] testing for SQL injection on URI parameter '#1*'
[14:07:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:07:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:07:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:07:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:07:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:07:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:07:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:07:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:07:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:07:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:07:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:07:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:07:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:07:28] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:07:29] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:07:30] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:07:30] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:07:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:07:32] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:07:33] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:07:33] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:07:34] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:07:35] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:07:36] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:07:37] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:07:37] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:07:38] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:07:38] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:07:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:07:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:07:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:07:38] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:07:38] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:07:38] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:07:38] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:07:38] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:07:38] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:07:38] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:07:38] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:07:38] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:07:38] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:38] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:38] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:39] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:07:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:07:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:07:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:07:39] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:39] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:39] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:39] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:39] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:39] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:39] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:07:39] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:07:39] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:07:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:07:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:07:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:07:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:07:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:07:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:07:42] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:07:43] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:07:43] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[14:07:44] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:07:44] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:07:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:07:45] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:07:45] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[14:07:45] [INFO] testing if parameter 'User-Agent' is dynamic
[14:07:45] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[14:07:45] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[14:07:45] [INFO] testing for SQL injection on parameter 'User-Agent'
[14:07:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:07:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:07:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:07:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:07:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:07:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:07:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:07:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:07:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:07:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:07:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:07:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:07:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:07:50] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:07:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:07:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:07:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:07:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:07:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:07:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:07:53] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:07:53] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:07:54] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:07:55] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:07:55] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:07:56] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:07:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:07:56] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:07:56] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:07:56] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:07:56] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:07:56] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:07:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:07:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:07:56] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:07:56] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:07:56] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:07:56] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:07:56] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:07:57] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:07:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:07:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:07:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:07:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:07:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:07:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:07:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:07:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:07:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:07:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:07:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:07:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:07:57] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:07:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:07:58] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:07:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:07:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:07:58] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:07:58] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:07:59] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:07:59] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:07:59] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:08:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:08:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:08:01] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:08:02] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:08:02] [WARNING] parameter 'User-Agent' does not seem to be injectable
[14:08:02] [INFO] testing if parameter 'Referer' is dynamic
[14:08:02] [WARNING] parameter 'Referer' does not appear to be dynamic
[14:08:02] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[14:08:02] [INFO] testing for SQL injection on parameter 'Referer'
[14:08:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:08:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:08:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:08:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:08:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:08:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:08:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:08:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:08:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:08:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:08:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:08:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:08:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:08:07] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:08:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:08:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:08:08] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:08:09] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:08:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:08:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:08:10] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:08:11] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:08:11] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:08:12] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:08:12] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:08:13] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:08:13] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:08:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:08:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:08:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:08:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:08:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:08:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:08:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:08:14] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:08:14] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:08:14] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:08:14] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:08:14] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:08:14] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:08:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:08:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:08:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:08:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:08:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:08:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:08:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:08:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:08:14] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:14] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:14] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:14] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:14] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:08:14] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:08:14] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:08:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:08:15] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:08:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:08:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:08:15] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:08:16] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:08:16] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:08:16] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:08:16] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:08:17] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:08:17] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:08:18] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:08:19] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:08:19] [WARNING] parameter 'Referer' does not seem to be injectable
[14:08:19] [INFO] testing if parameter 'Host' is dynamic
[14:08:19] [WARNING] parameter 'Host' does not appear to be dynamic
[14:08:19] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[14:08:19] [INFO] testing for SQL injection on parameter 'Host'
[14:08:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:08:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:08:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:08:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:08:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:08:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:08:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:08:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:08:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:08:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:08:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:08:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:08:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:08:24] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:08:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:08:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:08:25] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:08:26] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:08:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:08:27] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:08:27] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:08:28] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:08:28] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:08:29] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:08:29] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:08:30] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:08:30] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:08:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:08:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:08:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:08:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:08:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:08:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:08:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:08:30] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:08:30] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:08:31] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:08:31] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:08:31] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:08:31] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:08:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:08:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:08:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:08:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:08:31] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:08:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:08:31] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:08:31] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:08:31] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:31] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:31] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:08:31] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:08:31] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:08:31] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:08:31] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:08:31] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:08:32] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:08:32] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:08:32] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:08:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:08:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:08:33] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:08:33] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:08:33] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:08:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:08:34] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:08:35] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:08:36] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:08:36] [WARNING] parameter 'Host' does not seem to be injectable
[14:08:36] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[14:08:36] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 2314 times

[*] ending @ 14:08:36 /2025-09-26/

        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 14:48:58 /2025-09-26/

[14:49:01] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
[14:49:02] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[14:49:02] [INFO] testing connection to the target URL
[14:49:02] [INFO] testing if the target URL content is stable
[14:49:02] [INFO] target URL content is stable
[14:49:02] [INFO] testing if URI parameter '#1*' is dynamic
[14:49:02] [WARNING] URI parameter '#1*' does not appear to be dynamic
[14:49:02] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[14:49:02] [INFO] testing for SQL injection on URI parameter '#1*'
[14:49:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:49:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:49:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:49:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:49:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:49:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:49:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:49:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:49:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:49:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:49:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:49:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:49:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:49:09] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:49:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:49:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:49:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:49:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:49:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:49:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:49:18] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:49:20] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:49:21] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:49:22] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:49:23] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:49:24] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:49:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:49:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:49:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:49:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:49:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:49:25] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:49:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:49:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:49:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:49:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:49:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:49:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:49:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:49:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:49:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:49:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:26] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:26] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:49:26] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:49:26] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:49:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:49:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:49:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:49:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:49:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:49:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:49:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:49:31] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:49:32] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[14:49:32] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:49:33] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:49:33] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:49:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:49:34] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[14:49:34] [INFO] testing if parameter 'User-Agent' is dynamic
[14:49:34] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[14:49:34] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[14:49:34] [INFO] testing for SQL injection on parameter 'User-Agent'
[14:49:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:49:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:49:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:49:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:49:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:49:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:49:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:49:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:49:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:49:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:49:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:49:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:49:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:49:41] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:49:41] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:49:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:49:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:49:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:49:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:49:44] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:49:45] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:49:46] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:49:47] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:49:47] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:49:49] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:49:49] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:49:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:49:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:49:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:49:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:49:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:49:50] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:49:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:49:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:49:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:49:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:49:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:49:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:49:50] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:49:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:49:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:49:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:49:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:49:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:49:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:49:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:49:51] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:49:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:49:52] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:49:52] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:49:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:49:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:49:53] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:49:53] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:49:54] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:49:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:49:55] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:49:56] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:49:56] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:49:57] [WARNING] parameter 'User-Agent' does not seem to be injectable
[14:49:57] [INFO] testing if parameter 'Referer' is dynamic
[14:49:57] [WARNING] parameter 'Referer' does not appear to be dynamic
[14:49:57] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[14:49:57] [INFO] testing for SQL injection on parameter 'Referer'
[14:49:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:49:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:49:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:49:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:50:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:50:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:50:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:50:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:50:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:50:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:50:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:50:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:50:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:50:02] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:50:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:50:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:50:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:50:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:50:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:50:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:50:06] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:50:07] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:50:08] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:50:09] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:50:12] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:50:13] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:50:13] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:50:13] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:50:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:50:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:50:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:50:14] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:50:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:50:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:50:14] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:50:14] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:50:14] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:50:14] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:50:14] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:50:14] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:50:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:50:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:50:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:50:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:50:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:50:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:50:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:50:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:50:14] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:14] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:14] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:14] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:14] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:50:14] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:50:14] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:50:15] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:50:15] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:50:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:50:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:50:16] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:50:16] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:50:17] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:50:17] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:50:17] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:50:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:50:18] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:50:19] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:50:20] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:50:21] [WARNING] parameter 'Referer' does not seem to be injectable
[14:50:21] [INFO] testing if parameter 'Host' is dynamic
[14:50:21] [WARNING] parameter 'Host' does not appear to be dynamic
[14:50:21] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[14:50:21] [INFO] testing for SQL injection on parameter 'Host'
[14:50:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:50:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:50:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:50:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:50:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:50:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:50:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:50:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:50:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:50:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[14:50:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[14:50:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:50:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[14:50:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[14:50:27] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:50:28] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[14:50:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:50:29] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[14:50:30] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:50:30] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[14:50:31] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:50:32] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:50:33] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:50:33] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[14:50:34] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:50:34] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[14:50:35] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[14:50:35] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:50:35] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[14:50:35] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[14:50:35] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[14:50:35] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[14:50:35] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[14:50:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:50:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:50:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:50:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:50:35] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:35] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:35] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:35] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:50:35] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:50:35] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[14:50:35] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[14:50:35] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:36] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:36] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:36] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:36] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[14:50:36] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[14:50:36] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[14:50:36] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[14:50:36] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:50:36] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[14:50:37] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[14:50:37] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:50:37] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:50:37] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[14:50:38] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[14:50:38] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[14:50:38] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[14:50:39] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[14:50:39] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:50:40] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:50:41] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[14:50:41] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[14:50:42] [WARNING] parameter 'Host' does not seem to be injectable
[14:50:42] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[14:50:42] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 2314 times

[*] ending @ 14:50:42 /2025-09-26/

        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 15:06:33 /2025-09-26/

[15:06:35] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
[15:06:36] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[15:06:36] [INFO] testing connection to the target URL
[15:06:36] [INFO] testing if the target URL content is stable
[15:06:36] [INFO] target URL content is stable
[15:06:36] [INFO] testing if URI parameter '#1*' is dynamic
[15:06:36] [WARNING] URI parameter '#1*' does not appear to be dynamic
[15:06:36] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[15:06:36] [INFO] testing for SQL injection on URI parameter '#1*'
[15:06:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:06:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:06:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:06:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:06:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:06:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:06:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:06:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:06:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:06:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:06:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[15:06:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:06:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:06:43] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[15:06:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:06:44] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:06:45] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:06:46] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:06:46] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:06:47] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:06:48] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:06:48] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:06:49] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:06:50] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:06:51] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:06:51] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:06:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[15:06:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:06:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[15:06:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[15:06:52] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[15:06:52] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[15:06:52] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[15:06:52] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:06:52] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:06:52] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:06:52] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:06:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:06:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:06:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:06:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[15:06:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[15:06:52] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:06:52] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:06:52] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[15:06:52] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:06:52] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[15:06:53] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[15:06:53] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:06:53] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[15:06:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[15:06:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:06:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:06:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[15:06:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[15:06:56] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[15:06:56] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[15:06:57] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[15:06:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:06:58] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:06:58] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[15:06:58] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[15:06:59] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[15:06:59] [INFO] testing if parameter 'User-Agent' is dynamic
[15:06:59] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[15:06:59] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[15:06:59] [INFO] testing for SQL injection on parameter 'User-Agent'
[15:06:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:06:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:07:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:07:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:07:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[15:07:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:03] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[15:07:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:07] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:07] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:08] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:08] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:09] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:09] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[15:07:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:07:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[15:07:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[15:07:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[15:07:10] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[15:07:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[15:07:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:07:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:07:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:07:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:07:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:07:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:07:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[15:07:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[15:07:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[15:07:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[15:07:10] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:07:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[15:07:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[15:07:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:07:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:07:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[15:07:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[15:07:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[15:07:12] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[15:07:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[15:07:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:07:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:07:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[15:07:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[15:07:16] [WARNING] parameter 'User-Agent' does not seem to be injectable
[15:07:16] [INFO] testing if parameter 'Referer' is dynamic
[15:07:16] [WARNING] parameter 'Referer' does not appear to be dynamic
[15:07:16] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[15:07:16] [INFO] testing for SQL injection on parameter 'Referer'
[15:07:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:07:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:07:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:07:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:07:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[15:07:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:20] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[15:07:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:22] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:24] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:24] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:25] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:26] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:26] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:27] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[15:07:27] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[15:07:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:07:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:07:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:07:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[15:07:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[15:07:27] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[15:07:27] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[15:07:27] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[15:07:27] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:07:27] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:07:27] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:07:27] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:07:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:07:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:07:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[15:07:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[15:07:28] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:28] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:28] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:28] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:28] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[15:07:28] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[15:07:28] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:07:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[15:07:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[15:07:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:07:29] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:07:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[15:07:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[15:07:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[15:07:30] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[15:07:30] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[15:07:30] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:07:31] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:07:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[15:07:32] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[15:07:33] [WARNING] parameter 'Referer' does not seem to be injectable
[15:07:33] [INFO] testing if parameter 'Host' is dynamic
[15:07:33] [WARNING] parameter 'Host' does not appear to be dynamic
[15:07:33] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[15:07:33] [INFO] testing for SQL injection on parameter 'Host'
[15:07:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:07:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:07:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:07:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:07:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:07:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:07:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[15:07:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[15:07:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[15:07:38] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[15:07:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[15:07:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[15:07:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[15:07:41] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:41] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:07:42] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:42] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[15:07:43] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:43] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[15:07:44] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[15:07:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:07:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[15:07:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[15:07:44] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[15:07:44] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[15:07:44] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[15:07:44] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:07:44] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:07:44] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:07:44] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:07:44] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:44] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:44] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:44] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:07:44] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:07:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[15:07:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[15:07:44] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:44] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:44] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[15:07:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[15:07:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[15:07:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[15:07:45] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:07:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[15:07:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[15:07:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:07:46] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:07:46] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[15:07:46] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[15:07:46] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[15:07:47] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[15:07:47] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[15:07:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:07:48] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:07:48] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[15:07:49] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[15:07:50] [WARNING] parameter 'Host' does not seem to be injectable
[15:07:50] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[15:07:50] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 2314 times

[*] ending @ 15:07:50 /2025-09-26/

