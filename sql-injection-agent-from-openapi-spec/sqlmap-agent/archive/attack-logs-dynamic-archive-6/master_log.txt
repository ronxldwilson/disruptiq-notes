INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/_synthetic/log_event -H 'Content-Type: application/json' --data '{}'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:44:51] [INFO] flushing session file
INFO - [00:44:55] [CRITICAL] unable to connect to the target URL. sqlmap is going to retry the request(s)
INFO - [00:44:55] [WARNING] if the problem persists please check that the provided target URL is reachable. In case that it is, you can try to rerun with switch '--random-agent' and/or proxy switches ('--proxy', '--proxy-file'...)
INFO - [00:45:08] [CRITICAL] unable to connect to the target URL
INFO - Flushed sqlmap session for http://localhost:5000/_synthetic/log_event (log: attack-logs-dynamic\Log_Event_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/_synthetic/log_event --output-dir 'attack-logs-dynamic\Log_Event_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{}' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:45:13] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Log_Event_sqlmap' as the output directory
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:8000/_synthetic/log_event -H 'Content-Type: application/json' --data '{}'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:46:13] [WARNING] the web server responded with an HTTP error code (400) which could interfere with the results of the tests
INFO - [00:46:13] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:46:13] [INFO] testing if the target URL content is stable
INFO - [00:46:13] [INFO] target URL content is stable
INFO - [00:46:14] [CRITICAL] no parameter(s) found for testing in the provided data (e.g. GET parameter 'id' in 'www.site.com/index.php?id=1')
INFO - [00:46:14] [WARNING] HTTP error codes detected during run:
INFO - 400 (Bad Request) - 3 times
INFO - Flushed sqlmap session for http://localhost:8000/_synthetic/log_event (log: attack-logs-dynamic\Log_Event_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:8000/_synthetic/log_event --output-dir 'attack-logs-dynamic\Log_Event_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{}' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:46:19] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Log_Event_sqlmap' as the output directory
INFO - [00:46:21] [WARNING] the web server responded with an HTTP error code (400) which could interfere with the results of the tests
INFO - [00:46:21] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:46:21] [INFO] testing if the target URL content is stable
INFO - [00:46:21] [INFO] target URL content is stable
INFO - [00:46:21] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [00:46:22] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [00:46:22] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [00:46:22] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [00:46:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:46:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [00:46:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [00:46:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:46:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:46:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:46:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:46:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [00:46:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:46:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:46:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [00:46:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:46:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:46:34] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [00:46:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:46:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:46:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:46:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:46:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:46:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:46:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:46:41] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:46:42] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:46:42] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:46:43] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:46:44] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:46:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [00:46:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [00:46:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [00:46:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [00:46:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [00:46:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [00:46:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [00:46:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [00:46:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [00:46:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [00:46:46] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [00:46:46] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [00:46:46] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [00:46:46] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [00:46:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [00:46:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [00:46:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [00:46:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [00:46:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [00:46:46] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [00:46:46] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:46:46] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [00:46:46] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [00:46:46] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [00:46:47] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [00:46:48] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [00:46:48] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [00:46:48] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [00:46:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [00:46:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [00:46:50] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [00:46:50] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [00:46:51] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [00:46:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:46:53] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [00:46:54] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [00:46:55] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [00:46:57] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [00:46:57] [INFO] testing if parameter 'Referer' is dynamic
INFO - [00:46:57] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [00:46:57] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [00:46:57] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [00:46:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:46:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [00:46:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [00:47:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:47:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:47:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:47:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:47:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [00:47:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:47:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:47:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [00:47:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:47:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:47:05] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [00:47:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:47:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:47:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:47:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:47:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:47:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:47:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:47:12] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:47:13] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:47:13] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:47:14] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:47:15] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:47:16] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [00:47:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [00:47:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [00:47:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [00:47:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [00:47:16] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [00:47:16] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [00:47:16] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [00:47:16] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [00:47:16] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [00:47:16] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [00:47:16] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [00:47:16] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [00:47:16] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [00:47:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:16] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:16] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:16] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:17] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [00:47:17] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [00:47:17] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:17] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:17] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:17] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [00:47:17] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:17] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [00:47:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [00:47:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [00:47:18] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [00:47:18] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [00:47:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [00:47:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [00:47:20] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [00:47:20] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [00:47:21] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [00:47:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:47:22] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [00:47:24] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [00:47:25] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [00:47:26] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [00:47:26] [INFO] testing if parameter 'Host' is dynamic
INFO - [00:47:26] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [00:47:26] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [00:47:26] [INFO] testing for SQL injection on parameter 'Host'
INFO - [00:47:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:47:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [00:47:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [00:47:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:47:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:47:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:47:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:47:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [00:47:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:47:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:47:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [00:47:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:47:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:47:33] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [00:47:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:47:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:47:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:47:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:47:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:47:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:47:39] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:47:40] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:47:41] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:47:41] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:47:42] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:47:43] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:47:44] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [00:47:44] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [00:47:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [00:47:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [00:47:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [00:47:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [00:47:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [00:47:45] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [00:47:45] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [00:47:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [00:47:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [00:47:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [00:47:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [00:47:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [00:47:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [00:47:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [00:47:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [00:47:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:47:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:47:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [00:47:46] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [00:47:46] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [00:47:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [00:47:47] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [00:47:47] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [00:47:47] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [00:47:48] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [00:47:48] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [00:47:49] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [00:47:49] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [00:47:50] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [00:47:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:47:52] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [00:47:53] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [00:47:54] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [00:47:56] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [00:47:56] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [00:47:56] [WARNING] HTTP error codes detected during run:
INFO - 400 (Bad Request) - 5160 times
INFO - No clear injection detected during discovery for http://localhost:8000/_synthetic/log_event
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:8000/_synthetic/logs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:48:05] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [00:48:05] [INFO] flushing session file
INFO - [00:48:06] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:48:06] [INFO] testing if the target URL content is stable
INFO - [00:48:06] [INFO] target URL content is stable
INFO - [00:48:06] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [00:48:06] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [00:48:06] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [00:48:06] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [00:48:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:48:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:48:06] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:48:07] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [00:48:07] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [00:48:07] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [00:48:07] [INFO] testing 'Generic inline queries'
INFO - [00:48:07] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [00:48:07] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [00:48:07] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [00:48:07] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [00:48:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [00:48:07] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [00:48:07] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [00:48:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:48:08] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [00:48:08] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [00:48:08] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 73 times
INFO - Flushed sqlmap session for http://localhost:8000/_synthetic/logs (log: attack-logs-dynamic\Get_Logs_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:8000/_synthetic/logs?session_id=test' --output-dir 'attack-logs-dynamic\Get_Logs_sqlmap' --batch --level=5 --risk=3 --threads 5 -p session_id --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:48:16] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_Logs_sqlmap' as the output directory
INFO - [00:48:17] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:48:17] [INFO] testing if the target URL content is stable
INFO - [00:48:17] [INFO] target URL content is stable
INFO - [00:48:18] [WARNING] heuristic (basic) test shows that GET parameter 'session_id' might not be injectable
INFO - [00:48:18] [INFO] testing for SQL injection on GET parameter 'session_id'
INFO - [00:48:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:48:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [00:48:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [00:48:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:48:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [00:48:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:48:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [00:48:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [00:48:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:48:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [00:48:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [00:48:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:48:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [00:48:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [00:48:27] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:48:28] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [00:48:29] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:48:30] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [00:48:31] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:48:32] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:48:33] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:48:34] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [00:48:35] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:48:36] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [00:48:37] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:48:38] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [00:48:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [00:48:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [00:48:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [00:48:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [00:48:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [00:48:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [00:48:40] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [00:48:40] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [00:48:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [00:48:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [00:48:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [00:48:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [00:48:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [00:48:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [00:48:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [00:48:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [00:48:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:48:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [00:48:41] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [00:48:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [00:48:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [00:48:41] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [00:48:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [00:48:42] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [00:48:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [00:48:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [00:48:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [00:48:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [00:48:44] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [00:48:44] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [00:48:45] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [00:48:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:48:47] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [00:48:48] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [00:48:49] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [00:48:51] [WARNING] GET parameter 'session_id' does not seem to be injectable
INFO - [00:48:51] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - No clear injection detected during discovery for http://localhost:8000/_synthetic/logs
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:8000/_synthetic/new_session --data test=1
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:49:01] [INFO] flushing session file
INFO - you have not declared cookie(s), while server wants to set its own ('session_id=d643fae0-8b...b959b61f16'). Do you want to use those [Y/n] Y
INFO - [00:49:06] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:49:13] [INFO] testing if the target URL content is stable
INFO - [00:49:20] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
INFO - how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] C
INFO - [00:49:20] [INFO] searching for dynamic content
INFO - [00:49:28] [CRITICAL] target URL content appears to be heavily dynamic. sqlmap is going to retry the request(s)
INFO - [00:50:04] [WARNING] target URL content appears to be too dynamic. Switching to '--text-only'
INFO - [00:50:04] [INFO] testing if POST parameter 'test' is dynamic
INFO - [00:50:11] [INFO] POST parameter 'test' appears to be dynamic
INFO - [00:50:15] [INFO] testing for SQL injection on POST parameter 'test'
INFO - [00:50:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [00:51:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [00:51:34] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [00:52:11] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [00:52:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [00:53:17] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [00:53:53] [INFO] testing 'Generic inline queries'
INFO - [00:54:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [00:54:00] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
INFO - [00:54:27] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [00:54:56] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [00:55:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [00:55:58] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [00:56:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [00:57:03] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [00:57:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [00:58:24] [WARNING] POST parameter 'test' does not seem to be injectable
INFO - [00:58:24] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - Flushed sqlmap session for http://localhost:8000/_synthetic/new_session (log: attack-logs-dynamic\New_Session_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:8000/_synthetic/new_session --output-dir 'attack-logs-dynamic\New_Session_sqlmap' --batch --level=5 --risk=3 --threads 5 --data seed=test -p seed --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [00:58:38] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\New_Session_sqlmap' as the output directory
INFO - you have not declared cookie(s), while server wants to set its own ('session_id=e0377637-ca...0bfbff270f'). Do you want to use those [Y/n] Y
INFO - [00:58:46] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [00:58:53] [INFO] testing if the target URL content is stable
INFO - [00:59:01] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
INFO - how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] C
INFO - [00:59:01] [INFO] searching for dynamic content
INFO - [00:59:08] [CRITICAL] target URL content appears to be heavily dynamic. sqlmap is going to retry the request(s)
INFO - [00:59:54] [WARNING] target URL content appears to be too dynamic. Switching to '--text-only'
INFO - [01:00:02] [INFO] testing for SQL injection on POST parameter 'seed'
INFO - [01:00:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [01:12:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
