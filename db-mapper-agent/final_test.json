{
  "summary": {
    "files_scanned": 24,
    "findings": 128,
    "severity_breakdown": {
      "critical": 33,
      "high": 29,
      "low": 14,
      "medium": 52
    }
  },
  "findings": [
    {
      "type": "connection",
      "provider": "postgresql",
      "file": "example_project\\config\\settings.yaml",
      "line": 7,
      "evidence": [
        "postgresql://dbuser:dbpass123@localhost:5432/myapp_db"
      ],
      "confidence": 0.95,
      "description": "postgresql database connection defined in configuration file. Verify this configuration file is not committed to version control with sensitive data.",
      "id": "f-0001",
      "usage_context": {
        "potential_models": 0,
        "potential_queries": 0,
        "usage_estimate": 0
      },
      "risk_score": 10,
      "severity": "critical",
      "risk_factors": [
        "unencrypted_connection"
      ]
    },
    {
      "type": "connection",
      "provider": "mongodb",
      "file": "example_project\\config\\settings.yaml",
      "line": 18,
      "evidence": [
        "mongodb://user:pass@mongo-cluster:27017/myapp"
      ],
      "confidence": 0.95,
      "description": "mongodb database connection defined in configuration file. Verify this configuration file is not committed to version control with sensitive data.",
      "id": "f-0002",
      "usage_context": {
        "potential_models": 0,
        "potential_queries": 0,
        "usage_estimate": 0
      },
      "risk_score": 10,
      "severity": "critical",
      "risk_factors": [
        "remote_connection",
        "unencrypted_connection"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\config\\settings.yaml",
      "line": 6,
      "evidence": [
        "password: *********"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in configuration file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0003",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\config\\database.py",
      "line": 32,
      "evidence": [
        "SELECT\n            C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in configuration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0004",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.72,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\config\\database.py",
      "line": 39,
      "evidence": [
        "SELECT p..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in configuration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0005",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.72,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "entity_framework",
      "model_name": "AppDbContext",
      "file": "example_project\\csharp\\Data\\AppDbContext.cs",
      "line": 6,
      "evidence": [
        "public class AppDbContext : DbContext"
      ],
      "confidence": 0.95,
      "description": "Entity Framework entity 'AppDbContext' with DbSet configuration. This C# class represents a database table with navigation properties.",
      "id": "f-0006",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "entity_framework",
      "model_name": "AppDbContext",
      "file": "example_project\\csharp\\Data\\AppDbContext.cs",
      "line": 6,
      "evidence": [
        "public class AppDbContext : BaseEntity"
      ],
      "confidence": 0.9,
      "description": "Entity Framework entity 'AppDbContext' with DbSet configuration. This C# class represents a database table with navigation properties.",
      "id": "f-0007",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.6,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "entity_framework",
      "model_name": "User",
      "file": "example_project\\csharp\\Data\\AppDbContext.cs",
      "line": 14,
      "evidence": [
        "public DbSet<User> Users"
      ],
      "confidence": 0.9,
      "description": "Entity Framework entity 'User' with DbSet configuration. This C# class represents a database table with navigation properties.",
      "id": "f-0008",
      "relationships": [
        {
          "type": "used_by_query",
          "target_id": "f-0109",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0110",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0111",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0112",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0113",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0114",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0115",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0116",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0117",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        }
      ],
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.6,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "entity_framework",
      "model_name": "Post",
      "file": "example_project\\csharp\\Data\\AppDbContext.cs",
      "line": 15,
      "evidence": [
        "public DbSet<Post> Posts"
      ],
      "confidence": 0.9,
      "description": "Entity Framework entity 'Post' with DbSet configuration. This C# class represents a database table with navigation properties.",
      "id": "f-0009",
      "relationships": [
        {
          "type": "used_by_query",
          "target_id": "f-0111",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'Post' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0115",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'Post' is used in SQL query"
        }
      ],
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.6,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "entity_framework",
      "model_name": "Comment",
      "file": "example_project\\csharp\\Data\\AppDbContext.cs",
      "line": 16,
      "evidence": [
        "public DbSet<Comment> Comments"
      ],
      "confidence": 0.9,
      "description": "Entity Framework entity 'Comment' with DbSet configuration. This C# class represents a database table with navigation properties.",
      "id": "f-0010",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.6,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "connection",
      "provider": "postgresql",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 57,
      "evidence": [
        "postgresql://dbuser:dbpassword123@postgres:5432/myapp"
      ],
      "confidence": 0.95,
      "description": "postgresql database connection defined in application file. Verify this configuration file is not committed to version control with sensitive data.",
      "id": "f-0011",
      "usage_context": {
        "potential_models": 0,
        "potential_queries": 0,
        "usage_estimate": 0
      },
      "risk_score": 10,
      "severity": "critical",
      "risk_factors": [
        "remote_connection",
        "unencrypted_connection"
      ]
    },
    {
      "type": "connection",
      "provider": "mongodb",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 59,
      "evidence": [
        "mongodb://admin:password123@mongo:27017/myapp"
      ],
      "confidence": 0.95,
      "description": "mongodb database connection defined in application file. Verify this configuration file is not committed to version control with sensitive data.",
      "id": "f-0012",
      "usage_context": {
        "potential_models": 0,
        "potential_queries": 0,
        "usage_estimate": 0
      },
      "risk_score": 10,
      "severity": "critical",
      "risk_factors": [
        "remote_connection",
        "unencrypted_connection"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 9,
      "evidence": [
        "POSTGRES_PASSWORD: *************"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0013",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 21,
      "evidence": [
        "MYSQL_ROOT_PASSWORD: ************"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0014",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 24,
      "evidence": [
        "MYSQL_PASSWORD: ************"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0015",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\docker-compose.yml",
      "line": 45,
      "evidence": [
        "MONGO_INITDB_ROOT_PASSWORD: ***********"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0016",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\go\\models\\user.go",
      "line": 51,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in model/entity file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0017",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\go\\models\\user.go",
      "line": 52,
      "evidence": [
        "SELECT u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in model/entity file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0018",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 26,
      "evidence": [
        "password             = \"*************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0019",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 26,
      "evidence": [
        "password             = \"*************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0020",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 50,
      "evidence": [
        "password             = \"************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0021",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 50,
      "evidence": [
        "password             = \"************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0022",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 84,
      "evidence": [
        "master_password         = \"*************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0023",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\infrastructure\\main.tf",
      "line": 84,
      "evidence": [
        "master_password         = \"*************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in application file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0024",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\java\\src\\main\\java\\com\\example\\model\\User.java",
      "line": 39,
      "evidence": [
        "this.password = *********"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in model/entity file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0025",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\java\\src\\main\\java\\com\\example\\model\\User.java",
      "line": 53,
      "evidence": [
        "public void setPassword(String password) { this.password = ********* }"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in model/entity file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0026",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\js\\models\\post.js",
      "line": 42,
      "evidence": [
        "SELECT p..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in model/entity file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0027",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\js\\models\\post.js",
      "line": 55,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in model/entity file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0028",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\js\\models\\post.js",
      "line": 56,
      "evidence": [
        "SELECT t..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in model/entity file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0029",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "old_posts",
      "description": "Schema Change found in model/entity file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\js\\models\\post.js",
      "line": 61,
      "evidence": [
        "await sequelize.query('DROP TABLE old_posts');"
      ],
      "confidence": 0.8,
      "id": "f-0030",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\go\\models\\post.go",
      "line": 59,
      "evidence": [
        "SELECT p..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in model/entity file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0031",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "model_name": "Category",
      "file": "example_project\\models\\post.py",
      "line": 4,
      "evidence": [
        "class Category(models.Model):"
      ],
      "confidence": 0.95,
      "fields": [
        "name: CharField",
        "slug: SlugField",
        "description: TextField"
      ],
      "description": "Django model 'Category' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0032",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "model_name": "Post",
      "file": "example_project\\models\\post.py",
      "line": 12,
      "evidence": [
        "class Post(models.Model):"
      ],
      "confidence": 0.95,
      "fields": [
        "title: CharField",
        "slug: SlugField",
        "content: TextField",
        "author: ForeignKey",
        "category: ForeignKey",
        "status: CharField",
        "published_at: DateTimeField",
        "created_at: DateTimeField",
        "updated_at: DateTimeField"
      ],
      "description": "Django model 'Post' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0033",
      "relationships": [
        {
          "type": "used_by_query",
          "target_id": "f-0111",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'Post' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0115",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'Post' is used in SQL query"
        }
      ],
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "model_name": "Comment",
      "file": "example_project\\models\\post.py",
      "line": 31,
      "evidence": [
        "class Comment(models.Model):"
      ],
      "confidence": 0.95,
      "fields": [
        "post: ForeignKey",
        "author: ForeignKey",
        "content: TextField",
        "created_at: DateTimeField",
        "is_approved: BooleanField"
      ],
      "description": "Django model 'Comment' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0034",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "file": "example_project\\models\\post.py",
      "line": 4,
      "evidence": [
        "class Category(models.Model):"
      ],
      "confidence": 0.95,
      "description": "Django model 'Unknown' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0035",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "file": "example_project\\models\\post.py",
      "line": 12,
      "evidence": [
        "class Post(models.Model):"
      ],
      "confidence": 0.95,
      "description": "Django model 'Unknown' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0036",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "file": "example_project\\models\\post.py",
      "line": 31,
      "evidence": [
        "class Comment(models.Model):"
      ],
      "confidence": 0.95,
      "description": "Django model 'Unknown' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0037",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "model_name": "Profile",
      "file": "example_project\\models\\user.py",
      "line": 12,
      "evidence": [
        "class Profile(models.Model):"
      ],
      "confidence": 0.95,
      "fields": [
        "user: OneToOneField",
        "bio: TextField",
        "avatar: ImageField"
      ],
      "description": "Django model 'Profile' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0038",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "django",
      "file": "example_project\\models\\user.py",
      "line": 12,
      "evidence": [
        "class Profile(models.Model):"
      ],
      "confidence": 0.95,
      "description": "Django model 'Unknown' defined with 1 fields. This model represents a database table and includes relationships to other models.",
      "id": "f-0039",
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\ruby\\app\\models\\post.rb",
      "line": 27,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in model/entity file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0040",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\ruby\\app\\models\\post.rb",
      "line": 28,
      "evidence": [
        "SELECT t..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in model/entity file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0041",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "legacy_posts",
      "description": "Schema Change found in model/entity file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\ruby\\app\\models\\post.rb",
      "line": 33,
      "evidence": [
        "connection.execute('DROP TABLE legacy_posts')"
      ],
      "confidence": 0.8,
      "id": "f-0042",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\ruby\\app\\models\\user.rb",
      "line": 7,
      "evidence": [
        "password: '**********"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in model/entity file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0043",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\ruby\\app\\models\\user.rb",
      "line": 7,
      "evidence": [
        "********: '********',"
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in model/entity file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0044",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "ALTER TABLE",
      "file": "example_project\\php\\database\\migrations\\2024_01_01_000001_create_users_table.php",
      "line": 27,
      "evidence": [
        "ALTER TABLE u..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0045",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\php\\database\\migrations\\2024_01_01_000001_create_users_table.php",
      "line": 29,
      "evidence": [
        "Insert d..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0046",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "alter_table",
      "table_name": "users",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\php\\database\\migrations\\2024_01_01_000001_create_users_table.php",
      "line": 27,
      "evidence": [
        "DB::statement('ALTER TABLE users ADD COLUMN active BOOLEAN DEFAULT TRUE');"
      ],
      "confidence": 0.8,
      "id": "f-0047",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "orm_model",
      "framework": "laravel",
      "model_name": "User",
      "file": "example_project\\php\\app\\Models\\User.php",
      "line": 10,
      "evidence": [
        "class User extends Model"
      ],
      "confidence": 0.95,
      "description": "Laravel Eloquent model 'User' extending the base Model class. This PHP class provides ORM functionality for database operations.",
      "id": "f-0048",
      "relationships": [
        {
          "type": "used_by_query",
          "target_id": "f-0109",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0110",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0111",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0112",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0113",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0114",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0115",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0116",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        },
        {
          "type": "used_by_query",
          "target_id": "f-0117",
          "target_file": "example_project\\scripts\\migrate_data.py",
          "description": "Model 'User' is used in SQL query"
        }
      ],
      "usage_context": {
        "related_queries": 0,
        "available_connections": 0,
        "risk_level": "medium"
      },
      "risk_score": 3.8,
      "severity": "low",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 4,
      "evidence": [
        "CREATE TABLE u..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0049",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 4,
      "evidence": [
        "SELECT *..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0050",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": [
        "inefficient_query"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 5,
      "evidence": [
        "CREATE TABLE p..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0051",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 5,
      "evidence": [
        "SELECT *..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0052",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": [
        "inefficient_query"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 8,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0053",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 9,
      "evidence": [
        "SELECT\n    u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0054",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 19,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0055",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 20,
      "evidence": [
        "SELECT\n    t..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0056",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 33,
      "evidence": [
        "Update u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0057",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 34,
      "evidence": [
        "UPDATE u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0058",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 36,
      "evidence": [
        "SELECT C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0059",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 42,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0060",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 43,
      "evidence": [
        "SELECT\n    c..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0061",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 56,
      "evidence": [
        "Update t..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0062",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 57,
      "evidence": [
        "UPDATE u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0063",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 58,
      "evidence": [
        "UPDATE p..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0064",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 61,
      "evidence": [
        "CREATE TABLE m..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0065",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 69,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0066",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 70,
      "evidence": [
        "SELECT C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0067",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 71,
      "evidence": [
        "SELECT C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0068",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 72,
      "evidence": [
        "SELECT C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0069",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "users_backup",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 4,
      "evidence": [
        "CREATE TABLE users_backup AS SELECT * FROM old_users;"
      ],
      "confidence": 0.8,
      "id": "f-0070",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "posts_backup",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 5,
      "evidence": [
        "CREATE TABLE posts_backup AS SELECT * FROM old_posts;"
      ],
      "confidence": 0.8,
      "id": "f-0071",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "old_users",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 52,
      "evidence": [
        "DROP TABLE old_users;"
      ],
      "confidence": 0.8,
      "id": "f-0072",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "old_posts",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 53,
      "evidence": [
        "DROP TABLE old_posts;"
      ],
      "confidence": 0.8,
      "id": "f-0073",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "old_comments",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 54,
      "evidence": [
        "DROP TABLE old_comments;"
      ],
      "confidence": 0.8,
      "id": "f-0074",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "migration_log",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\migrate_data.sql",
      "line": 61,
      "evidence": [
        "CREATE TABLE migration_log ("
      ],
      "confidence": 0.8,
      "id": "f-0075",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "connection",
      "provider": "postgresql",
      "file": "example_project\\config\\secrets.py",
      "line": 29,
      "evidence": [
        "postgresql://admin:password123@localhost/mydb"
      ],
      "confidence": 0.95,
      "description": "Hardcoded postgresql database connection string found in configuration file. This exposes sensitive connection details and should be moved to environment variables or configuration files.",
      "id": "f-0076",
      "usage_context": {
        "potential_models": 0,
        "potential_queries": 0,
        "usage_estimate": 0
      },
      "risk_score": 10,
      "severity": "critical",
      "risk_factors": [
        "unencrypted_connection"
      ]
    },
    {
      "type": "secret",
      "secret_type": "secret_key",
      "file": "example_project\\config\\secrets.py",
      "line": 4,
      "evidence": [
        "STRIPE_SECRET_KEY = \"********************\""
      ],
      "confidence": 0.8,
      "severity": "critical",
      "description": "Secret found in configuration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0077",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "api_key",
      "file": "example_project\\config\\secrets.py",
      "line": 5,
      "evidence": [
        "OPENAI_API_KEY = \"********************\""
      ],
      "confidence": 0.8,
      "severity": "critical",
      "description": "API key '********' found in configuration file. This credential provides access to external services and should be stored securely.",
      "id": "f-0078",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "jwt_token",
      "file": "example_project\\config\\secrets.py",
      "line": 9,
      "evidence": [
        "JWT_SECRET = \"********************\""
      ],
      "confidence": 0.9,
      "severity": "critical",
      "description": "JSON Web Token '********' present in configuration file. This authentication token may contain sensitive user information.",
      "id": "f-0079",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "base64_secret",
      "file": "example_project\\config\\secrets.py",
      "line": 9,
      "evidence": [
        "JWT_SECRET = \"********************.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\""
      ],
      "confidence": 0.6,
      "severity": "critical",
      "description": "Secret found in configuration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0080",
      "risk_score": 10,
      "risk_factors": [
        "low_confidence",
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "aws_access_key",
      "file": "example_project\\config\\secrets.py",
      "line": 12,
      "evidence": [
        "AWS_ACCESS_KEY_ID = \"********************\""
      ],
      "confidence": 0.95,
      "severity": "critical",
      "description": "AWS access key ID found in configuration file. This credential provides access to AWS services and should use IAM roles instead. Immediate action required: This credential exposure poses a significant security risk and should be addressed immediately.",
      "id": "f-0081",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "aws_secret_key",
      "file": "example_project\\config\\secrets.py",
      "line": 13,
      "evidence": [
        "AWS_SECRET_ACCESS_KEY = \"********************\""
      ],
      "confidence": 0.95,
      "severity": "critical",
      "description": "AWS secret access key found in configuration file. This is part of AWS credentials and must be stored in secure credential management systems. Immediate action required: This credential exposure poses a significant security risk and should be addressed immediately.",
      "id": "f-0082",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "base64_secret",
      "file": "example_project\\config\\secrets.py",
      "line": 13,
      "evidence": [
        "AWS_SECRET_ACCESS_KEY = \"********************\""
      ],
      "confidence": 0.6,
      "severity": "critical",
      "description": "Secret found in configuration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0083",
      "risk_score": 10,
      "risk_factors": [
        "low_confidence",
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\config\\secrets.py",
      "line": 16,
      "evidence": [
        "DB_PASSWORD = \"********************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in configuration file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0084",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "db_password",
      "file": "example_project\\config\\secrets.py",
      "line": 16,
      "evidence": [
        "DB_PASSWORD = \"********************\""
      ],
      "confidence": 0.8,
      "severity": "critical",
      "description": "Secret found in configuration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0085",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\config\\secrets.py",
      "line": 16,
      "evidence": [
        "DB_PASSWORD = \"********************\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in configuration file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0086",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\config\\secrets.py",
      "line": 17,
      "evidence": [
        "ROOT_PASSWORD = \"********\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in configuration file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0087",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "secret",
      "secret_type": "password",
      "file": "example_project\\config\\secrets.py",
      "line": 17,
      "evidence": [
        "ROOT_PASSWORD = \"********\""
      ],
      "confidence": 0.7,
      "severity": "critical",
      "description": "Password credential '********' detected in configuration file. This authentication secret must be protected and never committed to version control.",
      "id": "f-0088",
      "risk_score": 10,
      "risk_factors": [
        "credential_exposure"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 4,
      "evidence": [
        "CREATE TABLE u..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in application file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0089",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 15,
      "evidence": [
        "CREATE TABLE p..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in application file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0090",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "DELETE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 21,
      "evidence": [
        "DELETE C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL DELETE statement in application file. This removes data from database tables - extreme caution required as this operation cannot be undone.",
      "id": "f-0091",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 7.6,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 27,
      "evidence": [
        "CREATE TABLE c..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in application file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0092",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "DELETE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 30,
      "evidence": [
        "DELETE C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL DELETE statement in application file. This removes data from database tables - extreme caution required as this operation cannot be undone.",
      "id": "f-0093",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 7.6,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "DELETE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 31,
      "evidence": [
        "DELETE C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL DELETE statement in application file. This removes data from database tables - extreme caution required as this operation cannot be undone.",
      "id": "f-0094",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 7.6,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 36,
      "evidence": [
        "CREATE TABLE c..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in application file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0095",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "ALTER TABLE",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 45,
      "evidence": [
        "ALTER TABLE p..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in application file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0096",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 53,
      "evidence": [
        "Insert s..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in application file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0097",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 54,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in application file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0098",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 58,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in application file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0099",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "users",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 4,
      "evidence": [
        "CREATE TABLE users ("
      ],
      "confidence": 0.8,
      "id": "f-0100",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "posts",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 15,
      "evidence": [
        "CREATE TABLE posts ("
      ],
      "confidence": 0.8,
      "id": "f-0101",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "comments",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 27,
      "evidence": [
        "CREATE TABLE comments ("
      ],
      "confidence": 0.8,
      "id": "f-0102",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "categories",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 36,
      "evidence": [
        "CREATE TABLE categories ("
      ],
      "confidence": 0.8,
      "id": "f-0103",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "alter_table",
      "table_name": "posts",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 45,
      "evidence": [
        "ALTER TABLE posts ADD COLUMN category_id INTEGER REFERENCES categories(id);"
      ],
      "confidence": 0.8,
      "id": "f-0104",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_index",
      "table_name": "idx_posts_author_id",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 48,
      "evidence": [
        "CREATE INDEX idx_posts_author_id ON posts(author_id);"
      ],
      "confidence": 0.8,
      "id": "f-0105",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_index",
      "table_name": "idx_posts_status",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 49,
      "evidence": [
        "CREATE INDEX idx_posts_status ON posts(status);"
      ],
      "confidence": 0.8,
      "id": "f-0106",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_index",
      "table_name": "idx_comments_post_id",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 50,
      "evidence": [
        "CREATE INDEX idx_comments_post_id ON comments(post_id);"
      ],
      "confidence": 0.8,
      "id": "f-0107",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_index",
      "table_name": "idx_comments_author_id",
      "description": "Schema Change found in application file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\sql\\create_tables.sql",
      "line": 51,
      "evidence": [
        "CREATE INDEX idx_comments_author_id ON comments(author_id);"
      ],
      "confidence": 0.8,
      "id": "f-0108",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE_TABLE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 17,
      "evidence": [
        "\n            CREATE TABLE IF NOT EXISTS user_backup AS\n            SELECT * FROM old_users\n        "
      ],
      "confidence": 0.9,
      "function": "migrate_user_data",
      "description": "Raw Sql found in migration file with high confidence. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0109",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.3,
      "severity": "high",
      "risk_factors": [
        "inefficient_query"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 23,
      "evidence": [
        "\n            INSERT INTO users (username, email, first_name, last_name, date_joined)\n            SEL..."
      ],
      "confidence": 0.9,
      "function": "migrate_user_data",
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0110",
      "usage_context": {
        "sql_complexity": "medium",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.3,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 31,
      "evidence": [
        "\n            UPDATE users\n            SET post_count = (\n                SELECT COUNT(*)\n           ..."
      ],
      "confidence": 0.9,
      "function": "migrate_user_data",
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0111",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.3,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SQL",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 41,
      "evidence": [
        "DROP TABLE IF EXISTS old_users"
      ],
      "confidence": 0.9,
      "function": "migrate_user_data",
      "description": "Raw Sql found in migration file with high confidence. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0112",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 8.3,
      "severity": "critical",
      "risk_factors": [
        "destructive_operation"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE_TABLE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 17,
      "evidence": [
        "\n            CREATE TABLE IF NOT EXISTS user_backup AS\n            SELECT * FROM old_users\n        "
      ],
      "confidence": 0.85,
      "description": "Raw Sql found in migration file with high confidence. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0113",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.95,
      "severity": "medium",
      "risk_factors": [
        "inefficient_query"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 23,
      "evidence": [
        "\n            INSERT INTO users (username, email, first_name, last_name, date_joined)\n            SEL..."
      ],
      "confidence": 0.85,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0114",
      "usage_context": {
        "sql_complexity": "medium",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.95,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 31,
      "evidence": [
        "\n            UPDATE users\n            SET post_count = (\n                SELECT COUNT(*)\n           ..."
      ],
      "confidence": 0.85,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0115",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.95,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 47,
      "evidence": [
        "\n            UPDATE users\n            SET email = CONCAT(email, '.', id)\n            WHERE email IN ..."
      ],
      "confidence": 0.9,
      "function": "fix_duplicate_emails",
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0116",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 6.3,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 47,
      "evidence": [
        "\n            UPDATE users\n            SET email = CONCAT(email, '.', id)\n            WHERE email IN ..."
      ],
      "confidence": 0.85,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0117",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.95,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "CREATE TABLE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 18,
      "evidence": [
        "CREATE TABLE I..."
      ],
      "confidence": 0.8,
      "description": "Raw Sql found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "id": "f-0118",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 19,
      "evidence": [
        "SELECT *..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0119",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": [
        "inefficient_query"
      ]
    },
    {
      "type": "raw_sql",
      "sql_type": "INSERT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 24,
      "evidence": [
        "INSERT I..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL INSERT statement in migration file. This operation adds data to database tables - ensure proper input validation to prevent SQL injection.",
      "id": "f-0120",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 25,
      "evidence": [
        "SELECT u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0121",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 30,
      "evidence": [
        "Update p..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0122",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 32,
      "evidence": [
        "UPDATE u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0123",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 34,
      "evidence": [
        "SELECT C..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0124",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "UPDATE",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 48,
      "evidence": [
        "UPDATE u..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL UPDATE query in migration file. This modifies existing data in database tables - verify update conditions are properly sanitized.",
      "id": "f-0125",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "raw_sql",
      "sql_type": "SELECT",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 51,
      "evidence": [
        "SELECT e..."
      ],
      "confidence": 0.8,
      "description": "Raw SQL SELECT query found in migration file. This query retrieves data from database tables and should be reviewed for potential SQL injection vulnerabilities.",
      "id": "f-0126",
      "usage_context": {
        "sql_complexity": "low",
        "has_parameters": false,
        "is_dynamic": false
      },
      "risk_score": 5.6,
      "severity": "medium",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "create_table",
      "table_name": "IF",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 18,
      "evidence": [
        "CREATE TABLE IF NOT EXISTS user_backup AS"
      ],
      "confidence": 0.8,
      "id": "f-0127",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    },
    {
      "type": "schema_change",
      "change_type": "drop_table",
      "table_name": "IF",
      "description": "Schema Change found in migration file. This database-related artifact should be reviewed for security and best practices.",
      "file": "example_project\\scripts\\migrate_data.py",
      "line": 41,
      "evidence": [
        "cursor.execute(\"DROP TABLE IF EXISTS old_users\")"
      ],
      "confidence": 0.8,
      "id": "f-0128",
      "risk_score": 6.4,
      "severity": "high",
      "risk_factors": []
    }
  ]
}